// Part 3
int ccos(int a)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined auStack_10 [4];
  uint local_c;
  
  if (a < 0) {
    a = -a;
  }
  iVar1 = a;
  if (a < 0) {
    iVar1 = a + 0xfff;
  }
  uVar3 = a + (iVar1 >> 0xc) * -0x1000;
  if (uVar3 < 0x400) {
    csincos(uVar3,auStack_10,&local_c);
    iVar1 = COR_02_OBJ_B4();
    return iVar1;
  }
  if (uVar3 - 0x400 < 0x400) {
    iVar1 = COR_02_OBJ_78(0x7ff - uVar3);
    return iVar1;
  }
  if (uVar3 - 0x800 < 0x400) {
    csincos(uVar3 - 0x800,auStack_10,&local_c);
    iVar1 = COR_02_OBJ_B4();
    return iVar1;
  }
  uVar2 = (uint)(uVar3 - 0xc00 < 0x400);
  if (uVar2 != 0) {
    csincos(0xfff - uVar3,auStack_10,&local_c);
    uVar2 = local_c;
  }
  return uVar2;
}



void COR_02_OBJ_78(undefined4 param_1)

{
  csincos(param_1,&stack0x00000010,&stack0x00000014);
  COR_02_OBJ_B4();
  return;
}



void COR_02_OBJ_B4(void)

{
  return;
}



void csincos(int param_1,int *param_2,int *param_3)

{
  int *piVar1;
  uint uVar2;
  int *piVar3;
  int *piVar4;
  int *piVar5;
  int local_60 [6];
  int local_48;
  int local_40 [6];
  int local_28;
  int local_20 [6];
  int local_8;
  
  piVar1 = local_60;
  uVar2 = 0;
  piVar5 = local_20;
  piVar4 = &DAT_800a0204;
  piVar3 = local_40;
  local_60[0] = 0x9b7;
  local_40[0] = 0;
  local_20[0] = param_1;
  do {
    piVar5 = piVar5 + 1;
    piVar3 = piVar3 + 1;
    if (-1 < piVar1[0x10]) {
      piVar1[1] = *piVar1 - (piVar1[8] >> (uVar2 & 0x1f));
      *piVar3 = piVar1[8] + (*piVar1 >> (uVar2 & 0x1f));
      COR_01_OBJ_AC();
      return;
    }
    piVar1[1] = *piVar1 + (piVar1[8] >> (uVar2 & 0x1f));
    *piVar3 = piVar1[8] - (*piVar1 >> (uVar2 & 0x1f));
    *piVar5 = piVar1[0x10] + *piVar4;
    piVar4 = piVar4 + 1;
    uVar2 = uVar2 + 1;
    piVar1 = piVar1 + 1;
  } while ((int)uVar2 < 6);
  *param_3 = local_48 - (local_8 * local_28 >> 0xc);
  *param_2 = local_28 + (local_8 * local_48 >> 0xc);
  return;
}



void COR_01_OBJ_AC(undefined4 param_1,int *param_2,int *param_3,int *param_4,undefined4 param_5,
                  undefined4 param_6,int param_7)

{
  int in_v0;
  int *piVar1;
  uint in_t0;
  int *in_t1;
  int *in_t2;
  int *in_t3;
  int param_11;
  int param_12;
  
  while( true ) {
    *in_t3 = in_v0;
    in_t3 = in_t3 + 1;
    in_t2 = in_t2 + 1;
    in_t1 = in_t1 + 1;
    in_t0 = in_t0 + 1;
    piVar1 = param_4 + 1;
    if (5 < (int)in_t0) {
      *param_3 = param_7 - (param_12 * param_11 >> 0xc);
      *param_2 = param_11 + (param_12 * param_7 >> 0xc);
      return;
    }
    if (-1 < param_4[0x11]) break;
    param_4[2] = *piVar1 + (param_4[9] >> (in_t0 & 0x1f));
    *in_t1 = param_4[9] - (*piVar1 >> (in_t0 & 0x1f));
    in_v0 = param_4[0x11] + *in_t2;
    param_4 = piVar1;
  }
  param_4[2] = *piVar1 - (param_4[9] >> (in_t0 & 0x1f));
  *in_t1 = param_4[9] + (*piVar1 >> (in_t0 & 0x1f));
  COR_01_OBJ_AC();
  return;
}



uint csin_1(uint param_1)

{
  uint uVar1;
  int local_10;
  undefined auStack_c [4];
  
  if (0x3ff < param_1) {
    if (0x3ff < param_1 - 0x400) {
      if (param_1 - 0x800 < 0x400) {
        csincos(param_1 - 0x800,&local_10,auStack_c);
        uVar1 = COR_03_OBJ_90();
        return uVar1;
      }
      uVar1 = (uint)(param_1 - 0xc00 < 0x400);
      if (uVar1 != 0) {
        csincos(0xfff - param_1,&local_10,auStack_c);
        uVar1 = -local_10;
      }
      return uVar1;
    }
    param_1 = 0x7ff - param_1;
  }
  csincos(param_1,&local_10,auStack_c);
  uVar1 = COR_03_OBJ_90();
  return uVar1;
}



void COR_03_OBJ_90(void)

{
  return;
}



int csin(int a)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  int in_a1;
  int local_10;
  undefined auStack_c [4];
  
  if (-1 < a) {
    uVar3 = a + (a >> 0xc) * -0x1000;
    if (0x3ff < uVar3) {
      if (0x3ff < uVar3 - 0x400) {
        uVar4 = uVar3 - 0x800;
        if (0x3ff < uVar4) {
          if (0x3ff < uVar3 - 0xc00) {
            return in_a1;
          }
          uVar4 = 0xfff - uVar3;
        }
        csincos(uVar4,&local_10,auStack_c);
        return -local_10;
      }
      uVar3 = 0x7ff - uVar3;
    }
    csincos(uVar3,&local_10,auStack_c);
    iVar2 = COR_03_OBJ_1C8();
    return iVar2;
  }
  iVar2 = -a;
  iVar1 = iVar2;
  if (0 < a) {
    iVar1 = iVar2 + 0xfff;
  }
  uVar3 = iVar2 + (iVar1 >> 0xc) * -0x1000;
  if (uVar3 < 0x400) {
COR_03_OBJ_EC:
    csincos(uVar3,&local_10,auStack_c);
    iVar2 = COR_03_OBJ_1C8();
    return iVar2;
  }
  if (uVar3 - 0x400 < 0x400) {
    uVar3 = 0x7ff - uVar3;
    goto COR_03_OBJ_EC;
  }
  uVar4 = uVar3 - 0x800;
  if (0x3ff < uVar4) {
    if (0x3ff < uVar3 - 0xc00) goto COR_03_OBJ_140;
    uVar4 = 0xfff - uVar3;
  }
  csincos(uVar4,&local_10,auStack_c);
COR_03_OBJ_140:
  iVar2 = COR_03_OBJ_1C8();
  return iVar2;
}



void COR_03_OBJ_1C8(void)

{
  return;
}



// WARNING: Removing unreachable block (ram,0x8008d3d8)

undefined4 csqrt_1(int param_1)

{
  undefined4 uVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  int local_3c [8];
  int local_1c [4];
  int local_c;
  
  iVar4 = 1;
  piVar3 = local_3c;
  local_3c[0] = param_1 + 0x5d50ad;
  local_1c[0] = param_1 + -0x5d50ad;
  do {
    if (iVar4 != 4) {
      iVar2 = piVar3[8] >> iVar4;
      if (piVar3[8] < 0) {
        piVar3[1] = *piVar3 + iVar2;
        local_1c[iVar4] = piVar3[8] + (*piVar3 >> iVar4);
        uVar1 = COR_05_OBJ_134();
        return uVar1;
      }
      piVar3[1] = *piVar3 - iVar2;
      local_1c[iVar4] = piVar3[8] - (*piVar3 >> iVar4);
      uVar1 = COR_05_OBJ_134();
      return uVar1;
    }
    iVar4 = local_3c[3] >> 4;
    if (local_1c[3] < 0) {
      local_3c[3] = local_3c[3] + (local_1c[3] >> 4);
      local_1c[3] = local_1c[3] + iVar4;
      if (-1 < local_1c[3]) {
        local_3c[4] = local_3c[3] - (local_1c[3] >> 4);
        uVar1 = COR_05_OBJ_130();
        return uVar1;
      }
    }
    else {
      local_3c[3] = local_3c[3] - (local_1c[3] >> 4);
      local_1c[3] = local_1c[3] - iVar4;
      if (-1 < local_1c[3]) {
        local_3c[4] = local_3c[3] - (local_1c[3] >> 4);
        uVar1 = COR_05_OBJ_130();
        return uVar1;
      }
    }
    local_3c[4] = local_3c[3] + (local_1c[3] >> 4);
    local_c = local_1c[3] + (local_3c[3] >> 4);
    iVar4 = 5;
    piVar3 = piVar3 + 1;
  } while( true );
}



undefined4
COR_05_OBJ_130(undefined4 param_1,undefined4 param_2,int *param_3,int param_4,int param_5,
              undefined4 param_6,undefined4 param_7,undefined4 param_8)

{
  undefined4 uVar1;
  int in_v0;
  int iVar2;
  int *piVar3;
  uint uVar4;
  int in_t0;
  int in_stack_00000030;
  int param_11;
  
  while( true ) {
    uVar4 = param_4 + 1;
    piVar3 = param_3 + 1;
    if (6 < (int)uVar4) {
      return param_8;
    }
    param_11 = in_v0;
    if (uVar4 != 4) break;
    iVar2 = in_stack_00000030 >> 4;
    if (in_stack_00000030 < 0) {
      in_stack_00000030 = in_stack_00000030 + (param_5 >> 4);
      if (-1 < in_stack_00000030) {
        uVar1 = COR_05_OBJ_130();
        return uVar1;
      }
    }
    else {
      iVar2 = -iVar2;
      in_stack_00000030 = in_stack_00000030 - (param_5 >> 4);
      if (-1 < in_stack_00000030) {
        uVar1 = COR_05_OBJ_130();
        return uVar1;
      }
    }
    param_5 = param_5 + iVar2;
    in_v0 = in_stack_00000030 + (param_5 >> 4);
    param_4 = 4;
    param_3 = piVar3;
  }
  iVar2 = param_3[9];
  if (-1 < iVar2) {
    param_3[2] = *piVar3 - (iVar2 >> (uVar4 & 0x1f));
    *(int *)(in_t0 + uVar4 * 4) = param_3[9] - (*piVar3 >> (uVar4 & 0x1f));
    uVar1 = COR_05_OBJ_134();
    return uVar1;
  }
  param_3[2] = *piVar3 + (iVar2 >> (uVar4 & 0x1f));
  *(int *)(in_t0 + uVar4 * 4) = param_3[9] + (*piVar3 >> (uVar4 & 0x1f));
  uVar1 = COR_05_OBJ_134();
  return uVar1;
}



undefined4
COR_05_OBJ_134(undefined4 param_1,undefined4 param_2,int *param_3,int param_4,int param_5,
              undefined4 param_6,undefined4 param_7,undefined4 param_8)

{
  undefined4 uVar1;
  int iVar2;
  int *piVar3;
  uint uVar4;
  int in_t0;
  int param_11;
  
  while( true ) {
    uVar4 = param_4 + 1;
    piVar3 = param_3 + 1;
    if (6 < (int)uVar4) {
      return param_8;
    }
    if (uVar4 != 4) break;
    iVar2 = param_11 >> 4;
    if (param_11 < 0) {
      param_11 = param_11 + (param_5 >> 4);
      if (-1 < param_11) {
        uVar1 = COR_05_OBJ_130();
        return uVar1;
      }
    }
    else {
      iVar2 = -iVar2;
      param_11 = param_11 - (param_5 >> 4);
      if (-1 < param_11) {
        uVar1 = COR_05_OBJ_130();
        return uVar1;
      }
    }
    param_5 = param_5 + iVar2;
    param_4 = 4;
    param_3 = piVar3;
  }
  iVar2 = param_3[9];
  if (-1 < iVar2) {
    param_3[2] = *piVar3 - (iVar2 >> (uVar4 & 0x1f));
    *(int *)(in_t0 + uVar4 * 4) = param_3[9] - (*piVar3 >> (uVar4 & 0x1f));
    uVar1 = COR_05_OBJ_134();
    return uVar1;
  }
  param_3[2] = *piVar3 + (iVar2 >> (uVar4 & 0x1f));
  *(int *)(in_t0 + uVar4 * 4) = param_3[9] + (*piVar3 >> (uVar4 & 0x1f));
  uVar1 = COR_05_OBJ_134();
  return uVar1;
}



int csqrt(int a)

{
  int iVar1;
  long lVar2;
  uint uVar3;
  
  if (a == 0) {
    iVar1 = COR_05_OBJ_1D8();
    return iVar1;
  }
  lVar2 = Lzc(a);
  uVar3 = 8 - lVar2 >> 1;
  if (-1 < 8 - lVar2) {
    iVar1 = COR_05_OBJ_1AC(a >> ((uVar3 & 0xf) << 1));
    return iVar1;
  }
  iVar1 = a << ((uVar3 + 1) * -2 & 0x1f);
  if ((int)(uVar3 - 5) < 0) {
    csqrt_1(iVar1);
    iVar1 = COR_05_OBJ_1D8();
    return iVar1;
  }
  iVar1 = csqrt_1(iVar1);
  return iVar1 << (uVar3 - 5 & 0x1f);
}



int COR_05_OBJ_1AC(void)

{
  int iVar1;
  int unaff_s0;
  
  if ((int)(&DAT_fffffffa + unaff_s0) < 0) {
    csqrt_1();
    iVar1 = COR_05_OBJ_1D8();
    return iVar1;
  }
  iVar1 = csqrt_1();
  return iVar1 << ((uint)(&DAT_fffffffa + unaff_s0) & 0x1f);
}



void COR_05_OBJ_1D8(void)

{
  return;
}



int catan(int a)

{
  int iVar1;
  int *piVar2;
  uint uVar3;
  int *piVar4;
  int *piVar5;
  int *piVar6;
  int local_a8 [14];
  int local_70 [14];
  int local_38 [12];
  int iStack_8;
  
  piVar2 = local_a8;
  uVar3 = 0;
  piVar6 = local_38;
  piVar5 = &DAT_800a021c;
  piVar4 = local_70;
  local_a8[0] = 0x1000;
  local_70[0] = a;
  local_38[0] = 0;
  do {
    piVar6 = piVar6 + 1;
    piVar4 = piVar4 + 1;
    iVar1 = piVar2[0xe];
    if (iVar1 < 0) {
      piVar2[1] = *piVar2 - (iVar1 >> (uVar3 & 0x1f));
      *piVar4 = piVar2[0xe] + (*piVar2 >> (uVar3 & 0x1f));
      iVar1 = COR_06_OBJ_A4();
      return iVar1;
    }
    piVar2[1] = *piVar2 + (iVar1 >> (uVar3 & 0x1f));
    *piVar4 = piVar2[0xe] - (*piVar2 >> (uVar3 & 0x1f));
    *piVar6 = piVar2[0x1c] + *piVar5;
    piVar5 = piVar5 + 1;
    uVar3 = uVar3 + 1;
    piVar2 = piVar2 + 1;
  } while ((int)uVar3 < 0xc);
  return iStack_8;
}



undefined4 COR_06_OBJ_A4(undefined4 param_1,int *param_2,uint param_3,int *param_4)

{
  undefined4 uVar1;
  int in_v0;
  int iVar2;
  int *piVar3;
  int *in_t0;
  int *in_t1;
  undefined4 param_11;
  
  while( true ) {
    *in_t1 = in_v0;
    in_t1 = in_t1 + 1;
    in_t0 = in_t0 + 1;
    param_4 = param_4 + 1;
    param_3 = param_3 + 1;
    piVar3 = param_2 + 1;
    if (0xb < (int)param_3) {
      return param_11;
    }
    iVar2 = param_2[0xf];
    if (iVar2 < 0) break;
    param_2[2] = *piVar3 + (iVar2 >> (param_3 & 0x1f));
    *param_4 = param_2[0xf] - (*piVar3 >> (param_3 & 0x1f));
    in_v0 = param_2[0x1d] + *in_t0;
    param_2 = piVar3;
  }
  param_2[2] = *piVar3 - (iVar2 >> (param_3 & 0x1f));
  *param_4 = param_2[0xf] + (*piVar3 >> (param_3 & 0x1f));
  uVar1 = COR_06_OBJ_A4();
  return uVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

void InitGeom(void)

{
  undefined4 unaff_retaddr;
  
  DAT_800a024c = unaff_retaddr;
  _patch_gte();
  setCopReg(0,Status,Status | 0x40000000,0);
  gte_ldZSF3(0x155);
  gte_ldZSF4(0x100);
  gte_ldH(1000);
  gte_ldDQA(0xffffef9e);
  gte_ldDQB(0x1400000);
  gte_ldOFX(0);
  gte_ldOFY(0);
  return;
}



void SetRotMatrix(MATRIX *m)

{
  gte_ldR11R12(*(undefined4 *)m->m[0]);
  gte_ldR13R21(*(undefined4 *)(m->m[0] + 2));
  gte_ldR22R23(*(undefined4 *)(m->m[1] + 1));
  gte_ldR31R32(*(undefined4 *)m->m[2]);
  gte_ldR33(*(undefined4 *)(m->m[2] + 2));
  return;
}



void SetTransMatrix(MATRIX *m)

{
  gte_ldtr(m->t[0],m->t[1],m->t[2]);
  return;
}



void LightColor(VECTOR *_2,VECTOR *_3)

{
  gte_ldlvl(_2);
  gte_lc_b();
  gte_stlvl(_3);
  return;
}



void DpqColorLight(VECTOR *_2,CVECTOR *_3,long p,CVECTOR *v2)

{
  gte_ldlvl(_2);
  gte_ldrgb(_3);
  gte_ldIR0(p);
  gte_dpcl_b();
  gte_strgb(v2);
  return;
}



void DpqColor3(CVECTOR *_2,CVECTOR *_3,CVECTOR *v2,long p,CVECTOR *v3,CVECTOR *v4,CVECTOR *v5)

{
  undefined auStackX_0 [16];
  
  gte_ldrgb3(_2,_3,v2);
  gte_ldIR0(p);
  gte_dpct_b();
  gte_strgb3(*(CVECTOR **)((int)register0x00000074 + 0x10),
             *(CVECTOR **)((int)register0x00000074 + 0x14),
             *(CVECTOR **)((int)register0x00000074 + 0x18));
  return;
}



void Intpl(VECTOR *_2,long p,CVECTOR *_3)

{
  gte_ldlvl(_2);
  gte_ldIR0(p);
  gte_intpl_b();
  gte_strgb(_3);
  return;
}



VECTOR * Square12(VECTOR *_2,VECTOR *_3)

{
  gte_ldlvl(_2);
  gte_sqr12_b();
  gte_stlvnl(_3);
  return _3;
}



VECTOR * Square0(VECTOR *_2,VECTOR *_3)

{
  gte_ldlvl(_2);
  gte_sqr0_b(0);
  gte_stlvnl(_3);
  return _3;
}



long AverageZ3(long sz0,long sz1,long sz2)

{
  long lVar1;
  
  gte_ldsz3(sz0,sz1,sz2);
  gte_avsz3_b();
  lVar1 = gte_stOTZ();
  return lVar1;
}



long AverageZ4(long sz0,long sz1,long sz2,long sz3)

{
  long lVar1;
  
  gte_ldsz4(sz0,sz1,sz2,sz3);
  gte_avsz4_b();
  lVar1 = gte_stOTZ();
  return lVar1;
}



void OuterProduct12(VECTOR *_2,VECTOR *_3,VECTOR *v2)

{
  undefined4 uVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  
  uVar1 = gte_stR11R12();
  uVar2 = gte_stR22R23();
  uVar3 = gte_stR33();
  gte_ldR11R12(_2->vx);
  gte_ldR22R23(_2->vy);
  gte_ldR33(_2->vz);
  gte_ldopv2(_3);
  gte_op12_b();
  gte_stlvnl(v2);
  gte_ldR11R12(uVar1);
  gte_ldR22R23(uVar2);
  gte_ldR33(uVar3);
  return;
}



void OuterProduct0(VECTOR *_2,VECTOR *_3,VECTOR *v2)

{
  undefined4 uVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  
  uVar1 = gte_stR11R12();
  uVar2 = gte_stR22R23();
  uVar3 = gte_stR33();
  gte_ldR11R12(_2->vx);
  gte_ldR22R23(_2->vy);
  gte_ldR33(_2->vz);
  gte_ldopv2(_3);
  gte_op0_b(0);
  gte_stlvnl(v2);
  gte_ldR11R12(uVar1);
  gte_ldR22R23(uVar2);
  gte_ldR33(uVar3);
  return;
}



long Lzc(long data)

{
  long lVar1;
  
  gte_ldLZCS(data);
  lVar1 = gte_stLZCR();
  return lVar1;
}



void RotTrans(SVECTOR *_2,VECTOR *_3,long *flag)

{
  long lVar1;
  
  gte_ldv0(_2);
  copFunction(2,0x480012);
  gte_stlvnl(_3);
  lVar1 = gte_stFLAG();
  *flag = lVar1;
  return;
}



MATRIX * RotMatrixZ(long r,MATRIX *m)

{
  MATRIX *pMVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  
  if (-1 < r) {
    iVar3 = (int)(short)*(int *)(&DAT_800a025c + (r & 0xfffU) * 4);
    iVar2 = *(int *)(&DAT_800a025c + (r & 0xfffU) * 4) >> 0x10;
    iVar4 = (int)m->m[0][0];
    iVar7 = (int)m->m[1][0];
    iVar5 = (int)m->m[0][1];
    iVar8 = (int)m->m[1][1];
    iVar6 = (int)m->m[0][2];
    iVar9 = (int)m->m[1][2];
    m->m[0][0] = (short)(iVar2 * iVar4 - iVar3 * iVar7 >> 0xc);
    m->m[0][1] = (short)(iVar2 * iVar5 - iVar3 * iVar8 >> 0xc);
    m->m[0][2] = (short)(iVar2 * iVar6 - iVar3 * iVar9 >> 0xc);
    m->m[1][0] = (short)(iVar3 * iVar4 + iVar2 * iVar7 >> 0xc);
    m->m[1][1] = (short)(iVar3 * iVar5 + iVar2 * iVar8 >> 0xc);
    m->m[1][2] = (short)(iVar3 * iVar6 + iVar2 * iVar9 >> 0xc);
    return m;
  }
  pMVar1 = (MATRIX *)FGO_06_OBJ_64();
  return pMVar1;
}



void FGO_06_OBJ_64(undefined4 param_1,short *param_2)

{
  short sVar1;
  short sVar2;
  short sVar3;
  int in_t0;
  int in_t1;
  
  sVar1 = *param_2;
  sVar2 = param_2[1];
  sVar3 = param_2[2];
  *param_2 = (short)(in_t0 * sVar1 - in_t1 * param_2[3] >> 0xc);
  param_2[1] = (short)(in_t0 * sVar2 - in_t1 * param_2[4] >> 0xc);
  param_2[2] = (short)(in_t0 * sVar3 - in_t1 * param_2[5] >> 0xc);
  param_2[3] = (short)(in_t1 * sVar1 + in_t0 * param_2[3] >> 0xc);
  param_2[4] = (short)(in_t1 * sVar2 + in_t0 * param_2[4] >> 0xc);
  param_2[5] = (short)(in_t1 * sVar3 + in_t0 * param_2[5] >> 0xc);
  return;
}



void _patch_gte(void)

{
  int iVar1;
  undefined4 *puVar2;
  undefined4 uVar3;
  undefined4 *puVar4;
  undefined4 unaff_retaddr;
  
  DAT_800a61bc = unaff_retaddr;
  FUN_8008676c();
  iVar1 = (*(code *)&SUB_000000b0)();
  puVar4 = &PATCHGTE_OBJ_68;
  puVar2 = *(undefined4 **)(iVar1 + 0x18);
  do {
    uVar3 = *puVar4;
    puVar4 = puVar4 + 1;
    *puVar2 = uVar3;
    puVar2 = puVar2 + 1;
  } while (puVar4 != (undefined4 *)DecDCTReset);
  FlushCache();
  FUN_8008677c();
  return;
}



void DecDCTReset(int mode)

{
  if (mode == 0) {
    ResetCallback();
  }
  MDEC_reset(mode);
  return;
}



DECDCTENV * DecDCTGetEnv(DECDCTENV *env)

{
  undefined4 uVar1;
  int iVar2;
  undefined4 *puVar3;
  DECDCTENV *pDVar4;
  u_char *puVar5;
  short *psVar6;
  
  puVar3 = &DAT_800a4260;
  iVar2 = 0xf;
  pDVar4 = env;
  do {
    uVar1 = *puVar3;
    puVar3 = puVar3 + 1;
    iVar2 = iVar2 + -1;
    *(undefined4 *)pDVar4->iq_y = uVar1;
    pDVar4 = (DECDCTENV *)(pDVar4->iq_y + 4);
  } while (iVar2 != -1);
  puVar5 = env->iq_c;
  puVar3 = &DAT_800a42a0;
  iVar2 = 0xf;
  do {
    uVar1 = *puVar3;
    puVar3 = puVar3 + 1;
    iVar2 = iVar2 + -1;
    *(undefined4 *)puVar5 = uVar1;
    puVar5 = puVar5 + 4;
  } while (iVar2 != -1);
  psVar6 = env->dct;
  puVar3 = &DAT_800a42e4;
  iVar2 = 0x1f;
  do {
    uVar1 = *puVar3;
    puVar3 = puVar3 + 1;
    iVar2 = iVar2 + -1;
    *(undefined4 *)psVar6 = uVar1;
    psVar6 = psVar6 + 2;
  } while (iVar2 != -1);
  return env;
}



DECDCTENV * DecDCTPutEnv(DECDCTENV *env)

{
  undefined4 uVar1;
  int iVar2;
  DECDCTENV *pDVar3;
  u_char *puVar4;
  undefined4 *puVar5;
  
  puVar5 = &DAT_800a4260;
  iVar2 = 0xf;
  pDVar3 = env;
  do {
    puVar4 = pDVar3->iq_y;
    pDVar3 = (DECDCTENV *)(pDVar3->iq_y + 4);
    iVar2 = iVar2 + -1;
    *puVar5 = *(undefined4 *)puVar4;
    puVar5 = puVar5 + 1;
  } while (iVar2 != -1);
  puVar5 = &DAT_800a42a0;
  puVar4 = env->iq_c;
  iVar2 = 0xf;
  do {
    uVar1 = *(undefined4 *)puVar4;
    puVar4 = puVar4 + 4;
    iVar2 = iVar2 + -1;
    *puVar5 = uVar1;
    puVar5 = puVar5 + 1;
  } while (iVar2 != -1);
  MDEC_in(&DAT_800a425c,0x20);
  MDEC_in(&DAT_800a42e0,0x20);
  return env;
}



int DecDCTBufSize(u_long *bs)

{
  return (uint)*(ushort *)bs;
}



void DecDCTin(u_long *buf,int mode)

{
  if ((mode & 1U) != 0) {
    LIBPRESS_OBJ_19C();
    return;
  }
  *buf = *buf | 0x8000000;
  if ((mode & 2U) != 0) {
    LIBPRESS_OBJ_1C8();
    return;
  }
  *buf = *buf & 0xfdffffff;
  MDEC_in(buf,*(undefined2 *)buf);
  return;
}



void LIBPRESS_OBJ_19C(uint *param_1,uint param_2)

{
  uint in_v0;
  
  *param_1 = in_v0;
  if ((param_2 & 2) != 0) {
    LIBPRESS_OBJ_1C8();
    return;
  }
  *param_1 = *param_1 & 0xfdffffff;
  MDEC_in(param_1,*(undefined2 *)param_1);
  return;
}



void LIBPRESS_OBJ_1C8(undefined4 *param_1)

{
  undefined4 in_v0;
  
  *param_1 = in_v0;
  MDEC_in(param_1,*(undefined2 *)param_1);
  return;
}



// Possible SSNOFF.OBJ/SsSetNoiseOff
// Possible SSQUIT.OBJ/SsQuit
// Possible _OP_VDEL.OBJ/__builtin_vec_delete
// Possible _OP_VNEW.OBJ/__builtin_vec_new
// Possible GS_106.OBJ/GsSetProjection
// Possible SEND.OBJ/SendPAD

void DecDCTout(u_long *buf,int size)

{
  MDEC_out();
  return;
}



int DecDCTinSync(int mode)

{
  int iVar1;
  uint uVar2;
  
  if (mode == 0) {
    MDEC_in_sync();
    iVar1 = LIBPRESS_OBJ_234();
    return iVar1;
  }
  uVar2 = MDEC_status();
  return uVar2 >> 0x1d & 1;
}



void LIBPRESS_OBJ_234(void)

{
  return;
}



int DecDCToutSync(int mode)

{
  int iVar1;
  uint uVar2;
  
  if (mode == 0) {
    MDEC_out_sync();
    iVar1 = LIBPRESS_OBJ_270();
    return iVar1;
  }
  uVar2 = MDEC_status();
  return uVar2 >> 0x18 & 1;
}



void LIBPRESS_OBJ_270(void)

{
  return;
}



int DecDCTinCallback(func *func)

{
  int iVar1;
  
  iVar1 = DMACallback(0,func);
  return iVar1;
}



int DecDCToutCallback(func *func)

{
  int iVar1;
  
  iVar1 = DMACallback(1,func);
  return iVar1;
}



void MDEC_reset(int param_1)

{
  if (param_1 == 0) {
    *(undefined4 *)PTR_MDEC_REG1_800a43a0 = 0x80000000;
    *(undefined4 *)PTR_DMA_MDEC_IN_CHCR_800a4374 = 0;
    *(undefined4 *)PTR_DMA_MDEC_OUT_CHCR_800a4380 = 0;
    *(undefined4 *)PTR_MDEC_REG1_800a43a0 = 0x60000000;
    MDEC_in(&DAT_800a425c,0x20);
    MDEC_in(&DAT_800a42e0,0x20);
    LIBPRESS_OBJ_3B4();
    return;
  }
  if (param_1 != 1) {
    LIBPRESS_OBJ_3A4();
    return;
  }
  *(undefined4 *)PTR_MDEC_REG1_800a43a0 = 0x80000000;
  *(undefined4 *)PTR_DMA_MDEC_IN_CHCR_800a4374 = 0;
  *(undefined4 *)PTR_DMA_MDEC_OUT_CHCR_800a4380 = 0;
  *(undefined4 *)PTR_MDEC_REG1_800a43a0 = 0x60000000;
  LIBPRESS_OBJ_3B4();
  return;
}



void LIBPRESS_OBJ_3A4(void)

{
  printf("MDEC_rest:bad option(%d)\n");
  return;
}



void LIBPRESS_OBJ_3B4(void)

{
  return;
}



void MDEC_in(undefined4 *param_1,uint param_2)

{
  MDEC_in_sync();
  *(uint *)PTR_DMA_DPCR_800a43a4 = *(uint *)PTR_DMA_DPCR_800a43a4 | 0x88;
  *(undefined4 **)PTR_DMA_MDEC_IN_MADR_800a436c = param_1 + 1;
  *(uint *)PTR_DMA_MDEC_IN_BCR_800a4370 = (param_2 >> 5) << 0x10 | 0x20;
  *(undefined4 *)PTR_MDEC_REG0_800a439c = *param_1;
  *(undefined4 *)PTR_DMA_MDEC_IN_CHCR_800a4374 = 0x1000201;
  return;
}



void MDEC_out(undefined4 param_1,uint param_2)

{
  MDEC_out_sync();
  *(uint *)PTR_DMA_DPCR_800a43a4 = *(uint *)PTR_DMA_DPCR_800a43a4 | 0x88;
  *(undefined4 *)PTR_DMA_MDEC_OUT_CHCR_800a4380 = 0;
  *(undefined4 *)PTR_DMA_MDEC_OUT_MADR_800a4378 = param_1;
  *(uint *)PTR_DMA_MDEC_OUT_BCR_800a437c = (param_2 >> 5) << 0x10 | 0x20;
  *(undefined4 *)PTR_DMA_MDEC_OUT_CHCR_800a4380 = 0x1000200;
  return;
}



undefined4 MDEC_in_sync(void)

{
  uint uVar1;
  undefined4 uVar2;
  int local_10;
  
  local_10 = 0x100000;
  uVar1 = *(uint *)PTR_MDEC_REG1_800a43a0;
  while( true ) {
    if ((uVar1 & 0x20000000) == 0) {
      return 0;
    }
    local_10 = local_10 + -1;
    if (local_10 == -1) break;
    uVar1 = *(uint *)PTR_MDEC_REG1_800a43a0;
  }
  timeout("MDEC_in_sync");
  uVar2 = LIBPRESS_OBJ_570();
  return uVar2;
}



void LIBPRESS_OBJ_570(void)

{
  return;
}



undefined4 MDEC_out_sync(void)

{
  uint uVar1;
  undefined4 uVar2;
  int local_10;
  
  local_10 = 0x100000;
  uVar1 = *(uint *)PTR_DMA_MDEC_OUT_CHCR_800a4380;
  while( true ) {
    if ((uVar1 & 0x1000000) == 0) {
      return 0;
    }
    local_10 = local_10 + -1;
    if (local_10 == -1) break;
    uVar1 = *(uint *)PTR_DMA_MDEC_OUT_CHCR_800a4380;
  }
  timeout("MDEC_out_sync");
  uVar2 = LIBPRESS_OBJ_608();
  return uVar2;
}



void LIBPRESS_OBJ_608(void)

{
  return;
}



undefined4 MDEC_status(void)

{
  return *(undefined4 *)PTR_MDEC_REG1_800a43a0;
}



undefined4 timeout(undefined4 param_1)

{
  uint uVar1;
  
  printf("%s timeout:\n",param_1);
  uVar1 = *(uint *)PTR_MDEC_REG1_800a43a0;
  printf("\t DMA=(%d,%d), ADDR=(0x%08x->0x%08x)\n",
         *(uint *)PTR_DMA_MDEC_IN_CHCR_800a4374 >> 0x18 & 1,
         *(uint *)PTR_DMA_MDEC_OUT_CHCR_800a4380 >> 0x18 & 1,
         *(undefined4 *)PTR_DMA_MDEC_IN_MADR_800a436c,*(undefined4 *)PTR_DMA_MDEC_OUT_MADR_800a4378)
  ;
  printf("\t FIFO=(%d,%d),BUSY=%d,DREQ=(%d,%d),RGB24=%d,STP=%d\n",~uVar1 >> 0x1f,uVar1 >> 0x1e & 1,
         uVar1 >> 0x1d & 1,uVar1 >> 0x1c & 1,uVar1 >> 0x1b & 1,uVar1 >> 0x19 & 1,uVar1 >> 0x17 & 1);
  *(undefined4 *)PTR_MDEC_REG1_800a43a0 = 0x80000000;
  *(undefined4 *)PTR_DMA_MDEC_IN_CHCR_800a4374 = 0;
  *(undefined4 *)PTR_DMA_MDEC_OUT_CHCR_800a4380 = 0;
  *(undefined4 *)PTR_MDEC_REG1_800a43a0 = 0x60000000;
  return 0;
}



int DecDCTvlcSize2(int size)

{
  int iVar1;
  
  iVar1 = VLC_C_OBJ_0;
  if (0 < size + -1) {
    VLC_C_OBJ_0 = size << 1;
    return iVar1;
  }
  VLC_C_OBJ_0 = 0xffffff;
  return iVar1;
}



int DecDCTvlc2(u_long *bs,u_long *buf,u_short *table)

{
  bool bVar1;
  undefined2 uVar2;
  undefined2 uVar3;
  undefined2 uVar4;
  undefined2 *puVar5;
  u_short *puVar6;
  uint uVar7;
  uint uVar8;
  u_long *puVar9;
  undefined2 *puVar10;
  undefined2 *puVar11;
  uint uVar12;
  uint uVar13;
  uint uVar14;
  uint uVar15;
  int asset_magic_bytes;
  uint uVar16;
  undefined2 *puVar17;
  int iVar18;
  int iVar19;
  int iVar20;
  ushort vlc_ptr_;
  
  if (bs == (u_long *)0x0) {
    puVar17 = DAT_8008e58c + VLC_C_OBJ_0;
    uVar7 = DAT_8008e590;
    uVar8 = DAT_8008e594;
    puVar9 = VLC_C_OBJ_370;
    puVar5 = DAT_8008e58c;
    asset_magic_bytes = DAT_8008e598;
    uVar16 = DAT_8008e59c;
    iVar18 = DAT_8008e5a0;
    iVar19 = DAT_8008e5a4;
    iVar20 = DAT_8008e5a8;
    goto VLC_C_OBJ_200;
  }
  iVar18 = 0;
  iVar19 = 0;
                    // With the input bs of 00 2F 00 38 03 00 02 00 12 07 E6 5D
                    // 
                    // 00 2F is loaded into t0
                    // 00 38 into t1
                    // 03 00 into t4
                    // 02 00 into t2
                    // 12 07 into v0
                    // e6 5d into v1
  iVar20 = 0;
  puVar17 = (undefined2 *)((int)buf + VLC_C_OBJ_0 * 2);
                    // potentially takes blb and decodes?
  uVar2 = *(undefined2 *)((int)bs + 2);
                    // takes 0x9 - 0xd
  uVar3 = *(undefined2 *)(bs + 2);
  uVar4 = *(undefined2 *)((int)bs + 10);
                    // loads the 5th byte
                    // 
  asset_magic_bytes = (uint)*(ushort *)(bs + 1) << 10;
  uVar16 = (uint)(-1 < (int)(*(ushort *)((int)bs + 6) - 3));
  puVar9 = bs + 3;
  uVar8 = 0;
  *(undefined2 *)buf = *(undefined2 *)bs;
  *(undefined2 *)((int)buf + 2) = uVar2;
  uVar14 = CONCAT22(uVar3,uVar4);
  puVar11 = (undefined2 *)((int)buf + 2);
VLC_C_OBJ_E4:
  if (uVar16 == 0) {
    if (uVar14 >> 0x16 == 0x1ff) goto VLC_C_OBJ_308;
    uVar7 = uVar14 << 10;
    uVar13 = uVar8 + 10;
    uVar8 = uVar13 & 0xf;
    if ((uVar13 & 0x10) != 0) {
      vlc_ptr_ = *(ushort *)puVar9;
      puVar9 = (u_long *)((int)puVar9 + 2);
      uVar7 = uVar7 | (uint)vlc_ptr_ << uVar8;
    }
    puVar11[1] = (ushort)asset_magic_bytes | (ushort)(uVar14 >> 0x16);
  }
  else {
    if (uVar14 >> 0x16 == 0x3ff) {
VLC_C_OBJ_308:
      asset_magic_bytes = 0x40;
      do {
        puVar11 = puVar11 + 1;
        *puVar11 = 0xfe00;
        bVar1 = asset_magic_bytes != 0;
        asset_magic_bytes = asset_magic_bytes + -1;
      } while (bVar1);
      setCopReg(0,Status,Status | 0x20000,0);
      return 0;
    }
    puVar6 = table + 0x200;
    if (-1 < (int)(uVar16 - 3)) {
      puVar6 = table;
    }
    uVar13 = (uint)puVar6[(uVar14 >> 0x18) * 2];
    uVar15 = (uint)(puVar6 + (uVar14 >> 0x18) * 2)[1];
    uVar12 = 0;
    uVar7 = uVar14 << (uVar13 & 0x1f);
    if (uVar15 != 0) {
      uVar12 = uVar7 >> (0x20 - uVar15 & 0x1f);
      bVar1 = -1 < (int)uVar7;
      uVar7 = uVar7 << (uVar15 & 0x1f);
      if (bVar1) {
        uVar12 = uVar12 - (0xffffffffU >> (0x20 - uVar15 & 0x1f));
      }
      uVar8 = uVar8 + uVar15;
    }
    uVar13 = uVar8 + uVar13;
    uVar8 = uVar13 & 0xf;
    if ((uVar13 & 0x10) != 0) {
      vlc_ptr_ = *(ushort *)puVar9;
      puVar9 = (u_long *)((int)puVar9 + 2);
      uVar7 = uVar7 | (uint)vlc_ptr_ << uVar8;
    }
    uVar14 = iVar20 + uVar12;
    if ((int)(uVar16 - 2) < 1) {
      uVar14 = iVar19 + uVar12;
      if (uVar16 == 2) {
        iVar19 = iVar19 + uVar12;
      }
      else {
        uVar14 = iVar18 + uVar12;
        iVar18 = iVar18 + uVar12;
      }
    }
    else {
      iVar20 = iVar20 + uVar12;
    }
    bVar1 = uVar16 == 6;
    puVar11[1] = (ushort)asset_magic_bytes | (ushort)((uVar14 & 0xff) << 2);
    uVar16 = uVar16 + 1;
    if (bVar1) {
      uVar16 = 1;
    }
  }
  puVar5 = puVar11 + 2;
  if (-1 < (int)puVar11 + (2 - (int)puVar17)) {
    VLC_C_OBJ_370 = puVar9;
    DAT_8008e58c = puVar11 + 2;
    DAT_8008e590 = uVar7;
    DAT_8008e594 = uVar8;
    DAT_8008e598 = asset_magic_bytes;
    DAT_8008e59c = uVar16;
    DAT_8008e5a0 = iVar18;
    DAT_8008e5a4 = iVar19;
    DAT_8008e5a8 = iVar20;
    return 1;
  }
VLC_C_OBJ_200:
  puVar10 = puVar5;
  uVar13 = *(uint *)(table + (uVar7 >> 0x13) * 4 + 0x400);
  if (uVar13 == 0) {
    uVar7 = uVar7 << 8;
    uVar14 = uVar8 + 8;
    uVar8 = uVar14 & 0xf;
    if ((uVar14 & 0x10) != 0) {
      vlc_ptr_ = *(ushort *)puVar9;
      puVar9 = (u_long *)((int)puVar9 + 2);
      uVar7 = uVar7 | (uint)vlc_ptr_ << uVar8;
    }
    uVar13 = *(uint *)(table + (uVar7 >> 0x17) * 2 + 0x8400);
    uVar12 = 0;
  }
  else {
    uVar12 = *(uint *)((int)(table + (uVar7 >> 0x13) * 4 + 0x400) + 4);
  }
  uVar7 = uVar7 << (uVar13 & 0x1f);
  uVar14 = uVar8 + (uVar13 & 0xff);
  uVar8 = uVar14 & 0xf;
  if ((uVar14 & 0x10) != 0) {
    vlc_ptr_ = *(ushort *)puVar9;
    puVar9 = (u_long *)((int)puVar9 + 2);
    uVar7 = uVar7 | (uint)vlc_ptr_ << uVar8;
  }
  puVar11 = puVar10;
  if (uVar13 >> 0x10 == 0x7c1f) goto VLC_C_OBJ_2E4;
  *puVar10 = (short)(uVar13 >> 0x10);
  uVar14 = uVar7;
  if (uVar13 >> 0x10 != 0xfe00) goto code_r0x8008e4b4;
  goto VLC_C_OBJ_E4;
code_r0x8008e4b4:
  puVar11 = puVar10 + 1;
  puVar5 = puVar11;
  if (uVar12 != 0) {
    if ((uVar12 & 0xffff) != 0x7c1f) {
      *puVar11 = (short)uVar12;
      if ((uVar12 & 0xffff) == 0xfe00) goto VLC_C_OBJ_E4;
      uVar13 = uVar12 >> 0x10;
      puVar11 = puVar10 + 2;
      puVar5 = puVar11;
      if (uVar13 == 0) goto VLC_C_OBJ_200;
      if (uVar13 != 0x7c1f) {
        *puVar11 = (short)(uVar12 >> 0x10);
        if (uVar13 != 0xfe00) {
          puVar5 = puVar10 + 3;
          goto VLC_C_OBJ_200;
        }
        goto VLC_C_OBJ_E4;
      }
    }
VLC_C_OBJ_2E4:
    *puVar11 = (short)(uVar7 >> 0x10);
    vlc_ptr_ = *(ushort *)puVar9;
    puVar9 = (u_long *)((int)puVar9 + 2);
    uVar7 = uVar7 << 0x10 | (uint)vlc_ptr_ << uVar8;
    puVar5 = puVar11 + 1;
  }
  goto VLC_C_OBJ_200;
}



void DecDCTvlcBuild(u_short *table)

{
  byte bVar1;
  uint uVar2;
  int iVar3;
  ushort *puVar4;
  int iVar5;
  byte *pbVar6;
  byte *pbVar7;
  
  iVar3 = 0;
  pbVar6 = &DAT_800a43a8;
  while( true ) {
    bVar1 = *pbVar6;
    uVar2 = (uint)bVar1;
    pbVar7 = pbVar6 + 1;
    if (uVar2 < 0xf0) {
      if (iVar3 == 0) {
        do {
          bVar1 = *pbVar7;
          pbVar7 = pbVar7 + 1;
          uVar2 = uVar2 - 1;
          *(byte *)table = bVar1;
          table = (u_short *)((int)table + 1);
        } while (-1 < (int)uVar2);
        BUILD_OBJ_B0();
        return;
      }
      do {
        uVar2 = uVar2 - 1;
        *(undefined *)table = *(undefined *)((int)table - iVar3);
        table = (u_short *)((int)table + 1);
      } while (-1 < (int)uVar2);
      BUILD_OBJ_B0();
      return;
    }
    if (uVar2 == 0xf0) break;
    pbVar6 = pbVar6 + 2;
    iVar3 = CONCAT11(bVar1,*pbVar7) - 0xf0ff;
    iVar5 = 4;
    if (iVar3 == 0xf00) {
      puVar4 = table + 4;
      do {
        iVar5 = iVar5 + 1;
        *puVar4 = *puVar4 ^ puVar4[-4];
        puVar4 = puVar4 + 1;
      } while (iVar5 < 0x8800);
      return;
    }
  }
  BUILD_OBJ_B0();
  return;
}



void BUILD_OBJ_20(int param_1,undefined4 param_2,byte *param_3,byte *param_4)

{
  byte bVar1;
  uint uVar2;
  int in_v1;
  ushort *puVar3;
  int iVar4;
  byte *pbVar5;
  int in_t0;
  int in_t1;
  uint in_t2;
  
  while( true ) {
    bVar1 = *param_4;
    uVar2 = (uint)bVar1;
    pbVar5 = param_4 + 1;
    if (uVar2 < 0xf0) {
      if (in_v1 == 0) {
        do {
          bVar1 = *pbVar5;
          pbVar5 = pbVar5 + 1;
          uVar2 = uVar2 - 1;
          *param_3 = bVar1;
          param_3 = param_3 + 1;
        } while (-1 < (int)uVar2);
        BUILD_OBJ_B0();
        return;
      }
      do {
        uVar2 = uVar2 - 1;
        *param_3 = param_3[-in_v1];
        param_3 = param_3 + 1;
      } while (-1 < (int)uVar2);
      BUILD_OBJ_B0();
      return;
    }
    if (uVar2 == in_t2) break;
    param_4 = param_4 + 2;
    in_v1 = (uint)CONCAT11(bVar1,*pbVar5) + in_t0;
    iVar4 = 4;
    if (in_v1 == in_t1) {
      puVar3 = (ushort *)(param_1 + 8);
      do {
        iVar4 = iVar4 + 1;
        *puVar3 = *puVar3 ^ puVar3[-4];
        puVar3 = puVar3 + 1;
      } while (iVar4 < 0x8800);
      return;
    }
  }
  BUILD_OBJ_B0();
  return;
}



// this function is the first to start loading info at 0x800bc4b4 and 0x800af450
// 
// it recieves a pointer to the start of the game blb data in the first param
// 
// second param is initially set to 0x7
// 
// third param is also pointing to the gamedata
// 
// fourth is set to 0x800a43a8

void BUILD_OBJ_B0(int game_blb_base,undefined4 param_2,byte *param_3,byte *param_4)

{
  byte bVar1;
  uint uVar2;
  int in_v1;
  ushort *puVar3;
  int byte_idx;
  byte *pbVar4;
  int in_t0;
  int in_t1;
  uint in_t2;
  
  while( true ) {
    byte_idx = 4;
    if (in_v1 == in_t1) {
      puVar3 = (ushort *)(game_blb_base + 8);
      do {
        byte_idx = byte_idx + 1;
        *puVar3 = *puVar3 ^ puVar3[-4];
        puVar3 = puVar3 + 1;
      } while (byte_idx < 0x8800);
      return;
    }
    bVar1 = *param_4;
    uVar2 = (uint)bVar1;
    pbVar4 = param_4 + 1;
    if (uVar2 < 0xf0) break;
    if (uVar2 == in_t2) {
      BUILD_OBJ_B0();
      return;
    }
    param_4 = param_4 + 2;
    in_v1 = (uint)CONCAT11(bVar1,*pbVar4) + in_t0;
  }
  if (in_v1 == 0) {
    do {
      bVar1 = *pbVar4;
      pbVar4 = pbVar4 + 1;
      uVar2 = uVar2 - 1;
      *param_3 = bVar1;
      param_3 = param_3 + 1;
    } while (-1 < (int)uVar2);
    BUILD_OBJ_B0();
    return;
  }
  do {
    uVar2 = uVar2 - 1;
    *param_3 = param_3[-in_v1];
    param_3 = param_3 + 1;
  } while (-1 < (int)uVar2);
  BUILD_OBJ_B0();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Possible SNMAIN.OBJ/__SN_ENTRY_POINT

void start(void)

{
  undefined4 *puVar1;
  code *pcVar2;
  undefined4 unaff_s0;
  undefined **ppuVar3;
  undefined4 unaff_s1;
  int iVar4;
  uint uVar5;
  undefined4 unaff_retaddr;
  undefined4 uVar6;
  
  puVar1 = &DAT_800a6188;
  do {
    *puVar1 = 0;
    puVar1 = puVar1 + 1;
  } while (puVar1 < &DAT_800ae448);
  uVar5 = DAT_800a6114 - 8U | 0x80000000;
  DAT_800a51c0 = ((DAT_800a6114 - 8U) - DAT_800a6118) - 0xae448;
  DAT_800a51bc = &DAT_800ae448;
  DAT_800a61cc = unaff_retaddr;
  InitHeap((ulong *)&DAT_800ae44c,DAT_800a51c0);
  uVar6 = 0x8008e738;
  main();
  iVar4 = _u_char;
  trap(1);
  *(undefined4 *)(uVar5 - 0xc) = unaff_s0;
  *(undefined4 *)(uVar5 - 8) = unaff_s1;
  *(undefined4 *)(uVar5 - 4) = uVar6;
  if (iVar4 == 0) {
    _u_char = 1;
    ppuVar3 = &PTR_FUN_8009082c;
    iVar4 = 4;
    do {
      pcVar2 = (code *)*ppuVar3;
      ppuVar3 = (code **)ppuVar3 + 1;
      iVar4 = iVar4 + -1;
      (*pcVar2)();
    } while (iVar4 != 0);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __main(void)

{
  code *func;
  undefined **func_ptr;
  int func_count;
  
  if (_u_char == 0) {
    _u_char = 1;
    func_ptr = &PTR_FUN_8009082c;
                    // executes (in order)
                    // FUN_80015430
                    // FUN_800196fc
                    // UndefinedFunction_80025c00
                    // FUN_80082F14
    func_count = 4;
    do {
      func = (code *)*func_ptr;
      func_ptr = (code **)func_ptr + 1;
      func_count = func_count + -1;
      (*func)();
    } while (func_count != 0);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __do_global_dtors(void)

{
  code *pcVar1;
  undefined **ppuVar2;
  int iVar3;
  
  if (_u_char != 0) {
    ppuVar2 = &PTR_FUN_8009083c;
    iVar3 = 3;
    do {
      pcVar1 = (code *)*ppuVar2;
      ppuVar2 = (code **)ppuVar2 + 1;
      iVar3 = iVar3 + -1;
      (*pcVar1)();
    } while (iVar3 != 0);
  }
  return;
}



void InitHeap(ulong *param_1,ulong param_2)

{
  (*(code *)&LAB_000000a0)();
  return;
}



void __builtin_delete(void *param_1)

{
  if (param_1 != (void *)0x0) {
    free(param_1);
  }
  return;
}



void free(void *param_1)

{
  (*(code *)&LAB_000000a0)();
  return;
}



// Possible UT_ROFF.OBJ/SsUtReverbOff
// Possible S_I.OBJ/SpuInit

void init_sound(void)

{
  _SpuInit();
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

void _SpuInit(void)

{
  undefined2 *puVar1;
  int iVar2;
  int in_a0;
  
  ResetCallback();
  _spu_init();
  if (in_a0 == 0) {
    iVar2 = 0x17;
    puVar1 = &DAT_800a5246;
    do {
      *puVar1 = 0xc000;
      iVar2 = iVar2 + -1;
      puVar1 = puVar1 + -1;
    } while (-1 < iVar2);
  }
  SpuStart();
  DAT_800a51f0 = 0;
  DAT_800a51f4 = 0;
  DAT_800a5200 = 0;
  DAT_800a5204 = 0;
  DAT_800a5206 = 0;
  DAT_800a5208 = 0;
  DAT_800a520c = 0;
  DAT_800a51f8 = DAT_800a56b8;
  _spu_FsetRXX(0xd1,DAT_800a56b8,0);
  DAT_800a56ac = 0;
  DAT_800a56b0 = 0;
  DAT_800a56b4 = 0;
  DAT_800a51ec = 0;
  DAT_800a566c = 0;
  DAT_800a51e8 = 0;
  DAT_800a5214 = 0;
  DAT_800a5210 = 0;
  DAT_800a5648 = 0;
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

void SpuStart(void)

{
  if (DAT_800a564c == 0) {
    DAT_800a564c = 1;
    FUN_8008676c();
    _SpuDataCallback(_spu_FiDMA);
    DAT_800a51e4 = OpenEvent(0xf0000009,0x20,0x2000,0);
    EnableEvent();
    FUN_8008677c();
  }
  return;
}



void OpenEvent(void)

{
  (*(code *)&SUB_000000b0)();
  return;
}



void EnableEvent(void)

{
  (*(code *)&SUB_000000b0)();
  return;
}



undefined4 _spu_init(int param_1)

{
  undefined *puVar1;
  undefined *puVar2;
  undefined4 uVar3;
  uint uVar4;
  int iVar5;
  undefined2 *puVar6;
  
  *(uint *)PTR_DMA_DPCR_800a5660 = *(uint *)PTR_DMA_DPCR_800a5660 | 0xb0000;
  puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
  DAT_800a566c = 0;
  DAT_800a5670 = 0;
  DAT_800a5668 = 0;
  *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = 0;
  *(undefined2 *)(puVar1 + 0x182) = 0;
  *(undefined2 *)(puVar1 + 0x1aa) = 0;
  _spu_Fw1ts();
  puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
  *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = 0;
  *(undefined2 *)(puVar1 + 0x182) = 0;
  puVar2 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
  if ((*(ushort *)(puVar1 + 0x1ae) & 0x7ff) != 0) {
    uVar4 = 1;
    do {
      if (0xf00 < uVar4) {
        printf("SPU:T/O [%s]\n","wait (reset)");
        uVar3 = SPU_OBJ_DC(0);
        return uVar3;
      }
      uVar4 = uVar4 + 1;
    } while ((*(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1ae) & 0x7ff) != 0);
  }
  iVar5 = 0;
  puVar6 = &DAT_800acbe8;
  DAT_800a5674 = 2;
  DAT_800a5678 = 3;
  DAT_800a567c = 8;
  DAT_800a5680 = 7;
  *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1ac) = 4;
  *(undefined2 *)(puVar2 + 0x184) = 0;
  *(undefined2 *)(puVar2 + 0x186) = 0;
  *(undefined2 *)(puVar2 + 0x18c) = 0xffff;
  *(undefined2 *)(puVar2 + 0x18e) = 0xffff;
  *(undefined2 *)(puVar2 + 0x198) = 0;
  *(undefined2 *)(puVar2 + 0x19a) = 0;
  do {
    *puVar6 = 0;
    puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
    iVar5 = iVar5 + 1;
    puVar6 = puVar6 + 1;
  } while (iVar5 < 10);
  if (param_1 == 0) {
    DAT_800a5668 = 0x200;
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 400) = 0;
    *(undefined2 *)(puVar1 + 0x192) = 0;
    *(undefined2 *)(puVar1 + 0x194) = 0;
    *(undefined2 *)(puVar1 + 0x196) = 0;
    *(undefined2 *)(puVar1 + 0x1b0) = 0;
    *(undefined2 *)(puVar1 + 0x1b2) = 0;
    *(undefined2 *)(puVar1 + 0x1b4) = 0;
    *(undefined2 *)(puVar1 + 0x1b6) = 0;
    _spu_FwriteByIO(&DAT_800a5690,0x10);
    iVar5 = 0;
    puVar6 = (undefined2 *)PTR_VOICE_00_LEFT_RIGHT_800a5650;
    do {
      *puVar6 = 0;
      puVar6[1] = 0;
      puVar6[2] = 0x3fff;
      puVar6[3] = 0x200;
      puVar6[4] = 0;
      puVar6[5] = 0;
      puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
      iVar5 = iVar5 + 1;
      puVar6 = puVar6 + 8;
    } while (iVar5 < 0x18);
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x188) = 0xffff;
    *(undefined2 *)(puVar1 + 0x18a) = 0xff;
    _spu_Fw1ts();
    _spu_Fw1ts();
    _spu_Fw1ts();
    _spu_Fw1ts();
    puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x18c) = 0xffff;
    *(undefined2 *)(puVar1 + 0x18e) = 0xff;
    _spu_Fw1ts();
    _spu_Fw1ts();
    _spu_Fw1ts();
    _spu_Fw1ts();
  }
  DAT_800a5684 = 1;
  *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) = 0xc000;
  DAT_800a5688 = 0;
  DAT_800a568c = 0;
  return 0;
}



undefined4 SPU_OBJ_DC(int param_1)

{
  undefined *puVar1;
  int iVar2;
  undefined2 *puVar3;
  int unaff_s0;
  
  puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
  puVar3 = &DAT_800acbe8;
  DAT_800a5674 = 2;
  DAT_800a5678 = 3;
  DAT_800a567c = 8;
  DAT_800a5680 = 7;
  *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1ac) = 4;
  *(undefined2 *)(puVar1 + 0x184) = 0;
  *(undefined2 *)(puVar1 + 0x186) = 0;
  *(undefined2 *)(puVar1 + 0x18c) = 0xffff;
  *(undefined2 *)(puVar1 + 0x18e) = 0xffff;
  *(undefined2 *)(puVar1 + 0x198) = 0;
  *(undefined2 *)(puVar1 + 0x19a) = 0;
  do {
    *puVar3 = 0;
    puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
    param_1 = param_1 + 1;
    puVar3 = puVar3 + 1;
  } while (param_1 < 10);
  if (unaff_s0 == 0) {
    DAT_800a5668 = 0x200;
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 400) = 0;
    *(undefined2 *)(puVar1 + 0x192) = 0;
    *(undefined2 *)(puVar1 + 0x194) = 0;
    *(undefined2 *)(puVar1 + 0x196) = 0;
    *(undefined2 *)(puVar1 + 0x1b0) = 0;
    *(undefined2 *)(puVar1 + 0x1b2) = 0;
    *(undefined2 *)(puVar1 + 0x1b4) = 0;
    *(undefined2 *)(puVar1 + 0x1b6) = 0;
    _spu_FwriteByIO(&DAT_800a5690,0x10);
    iVar2 = 0;
    puVar3 = (undefined2 *)PTR_VOICE_00_LEFT_RIGHT_800a5650;
    do {
      *puVar3 = 0;
      puVar3[1] = 0;
      puVar3[2] = 0x3fff;
      puVar3[3] = 0x200;
      puVar3[4] = 0;
      puVar3[5] = 0;
      puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
      iVar2 = iVar2 + 1;
      puVar3 = puVar3 + 8;
    } while (iVar2 < 0x18);
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x188) = 0xffff;
    *(undefined2 *)(puVar1 + 0x18a) = 0xff;
    _spu_Fw1ts();
    _spu_Fw1ts();
    _spu_Fw1ts();
    _spu_Fw1ts();
    puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x18c) = 0xffff;
    *(undefined2 *)(puVar1 + 0x18e) = 0xff;
    _spu_Fw1ts();
    _spu_Fw1ts();
    _spu_Fw1ts();
    _spu_Fw1ts();
  }
  DAT_800a5684 = 1;
  *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) = 0xc000;
  DAT_800a5688 = 0;
  DAT_800a568c = 0;
  return 0;
}



void _spu_FwriteByIO(undefined2 *param_1,uint param_2)

{
  ushort uVar1;
  undefined2 uVar2;
  ushort uVar3;
  bool bVar4;
  undefined *puVar5;
  int iVar6;
  uint uVar7;
  uint uVar8;
  
  uVar1 = *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1ae);
  *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1a6) = DAT_800a5668;
  _spu_Fw1ts();
  bVar4 = param_2 < 0x41;
  if (param_2 != 0) {
    do {
      puVar5 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
      uVar8 = 0x40;
      if (bVar4) {
        uVar8 = param_2;
      }
      iVar6 = 0;
      if (0 < (int)uVar8) {
        do {
          uVar2 = *param_1;
          param_1 = param_1 + 1;
          iVar6 = iVar6 + 2;
          *(undefined2 *)(puVar5 + 0x1a8) = uVar2;
        } while (iVar6 < (int)uVar8);
      }
      *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
           *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) & 0xffcf | 0x10;
      _spu_Fw1ts();
      if ((*(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1ae) & 0x400) != 0) {
        uVar7 = 1;
        do {
          if (0xf00 < uVar7) {
            printf("SPU:T/O [%s]\n","wait (wrdy H -> L)");
            SPU_OBJ_3AC();
            return;
          }
          uVar7 = uVar7 + 1;
        } while ((*(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1ae) & 0x400) != 0);
      }
      param_2 = param_2 - uVar8;
      _spu_Fw1ts();
      _spu_Fw1ts();
      bVar4 = param_2 < 0x41;
    } while (param_2 != 0);
  }
  puVar5 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
       *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) & 0xffcf;
  uVar3 = *(ushort *)(puVar5 + 0x1ae);
  uVar8 = 1;
  while( true ) {
    if ((uVar3 & 0x7ff) == (uVar1 & 0x7ff)) {
      return;
    }
    if (0xf00 < uVar8) break;
    uVar3 = *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1ae);
    uVar8 = uVar8 + 1;
  }
  printf("SPU:T/O [%s]\n","wait (dmaf clear/W)");
  SPU_OBJ_440();
  return;
}



void SPU_OBJ_3AC(void)

{
  undefined2 uVar1;
  ushort uVar2;
  undefined *puVar3;
  int iVar4;
  uint uVar5;
  uint unaff_s0;
  uint unaff_s1;
  undefined2 *unaff_s2;
  ushort unaff_s3;
  
  do {
    do {
      unaff_s1 = unaff_s1 - unaff_s0;
      _spu_Fw1ts();
      _spu_Fw1ts();
      puVar3 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
      if (unaff_s1 == 0) {
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) & 0xffcf;
        uVar2 = *(ushort *)(puVar3 + 0x1ae);
        uVar5 = 1;
        while( true ) {
          if ((uVar2 & 0x7ff) == unaff_s3) {
            return;
          }
          if (0xf00 < uVar5) break;
          uVar2 = *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1ae);
          uVar5 = uVar5 + 1;
        }
        printf("SPU:T/O [%s]\n","wait (dmaf clear/W)");
        SPU_OBJ_440();
        return;
      }
      unaff_s0 = 0x40;
      if (unaff_s1 < 0x41) {
        unaff_s0 = unaff_s1;
      }
      iVar4 = 0;
      if (0 < (int)unaff_s0) {
        do {
          uVar1 = *unaff_s2;
          unaff_s2 = unaff_s2 + 1;
          iVar4 = iVar4 + 2;
          *(undefined2 *)(puVar3 + 0x1a8) = uVar1;
        } while (iVar4 < (int)unaff_s0);
      }
      *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
           *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) & 0xffcf | 0x10;
      _spu_Fw1ts();
    } while ((*(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1ae) & 0x400) == 0);
    uVar5 = 1;
    do {
      if (0xf00 < uVar5) {
        printf("SPU:T/O [%s]\n","wait (wrdy H -> L)");
        SPU_OBJ_3AC();
        return;
      }
      uVar5 = uVar5 + 1;
    } while ((*(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1ae) & 0x400) != 0);
  } while( true );
}



void SPU_OBJ_440(void)

{
  return;
}



void _spu_FiDMA(void)

{
  undefined *puVar1;
  uint uVar2;
  
  if (DAT_800a56a0 == 0) {
    _spu_Fw1ts();
  }
  puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
       *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) & 0xffcf;
  if ((*(ushort *)(puVar1 + 0x1aa) & 0x30) != 0) {
    uVar2 = 1;
    do {
      if (0xf00 < uVar2) break;
      uVar2 = uVar2 + 1;
    } while ((*(ushort *)(puVar1 + 0x1aa) & 0x30) != 0);
  }
  if (DAT_800a5688 == (code *)0x0) {
    DeliverEvent(0xf0000009,0x20);
    return;
  }
  (*DAT_800a5688)();
  SPU_OBJ_510();
  return;
}



void SPU_OBJ_510(void)

{
  return;
}



void _spu_Fr_(undefined4 param_1,undefined2 param_2,int param_3)

{
  *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1a6) = param_2;
  _spu_Fw1ts();
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
       *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 0x30;
  _spu_Fw1ts();
  _spu_FsetDelayR();
  *(undefined4 *)PTR_DMA_SPU_MADR_800a5654 = param_1;
  *(uint *)PTR_DMA_SPU_BCR_800a5658 = param_3 << 0x10 | 0x10;
  DAT_800a56a0 = 1;
  *(undefined4 *)PTR_DMA_SPU_CHCR_800a565c = 0x1000200;
  return;
}



undefined4 _spu_t(int param_1,uint param_2,uint param_3)

{
  ushort uVar1;
  undefined4 uVar2;
  uint uVar3;
  ushort uVar4;
  
  if (param_1 == 1) {
    DAT_800a56a0 = 0;
    if (*(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1a6) != DAT_800a5668) {
      uVar3 = 1;
      do {
        if (0xf00 < uVar3) {
          DAT_800a56a0 = 0;
          return 0xfffffffe;
        }
        uVar3 = uVar3 + 1;
      } while (*(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1a6) != DAT_800a5668);
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) & 0xffcf | 0x20;
    uVar2 = SPU_OBJ_848();
    return uVar2;
  }
  if (param_1 < 2) {
    if (param_1 != 0) {
      uVar2 = SPU_OBJ_848();
      return uVar2;
    }
    DAT_800a56a0 = 1;
    if (*(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1a6) != DAT_800a5668) {
      uVar3 = 1;
      do {
        if (0xf00 < uVar3) {
          DAT_800a56a0 = 1;
          return 0xfffffffe;
        }
        uVar3 = uVar3 + 1;
      } while (*(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1a6) != DAT_800a5668);
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 0x30;
    uVar2 = SPU_OBJ_848();
    return uVar2;
  }
  if (param_1 == 2) {
    DAT_800a5668 = (short)(param_2 >> (DAT_800a5678 & 0x1f));
    *(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1a6) = DAT_800a5668;
    uVar2 = SPU_OBJ_848();
    return uVar2;
  }
  if (param_1 == 3) {
    uVar4 = 0x20;
    if (DAT_800a56a0 == 1) {
      uVar4 = 0x30;
    }
    uVar3 = 1;
    uVar1 = *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa);
    while ((uVar1 & 0x30) != uVar4) {
      if (0xf00 < uVar3) {
        return 0xfffffffe;
      }
      uVar3 = uVar3 + 1;
      uVar1 = *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa);
    }
    if (DAT_800a56a0 != 1) {
      _spu_FsetDelayW();
      DAT_800a56a8 = (param_3 >> 6) + (uint)((param_3 & 0x3f) != 0);
      DAT_800a56a4 = param_2;
      *(uint *)PTR_DMA_SPU_MADR_800a5654 = param_2;
      *(uint *)PTR_DMA_SPU_BCR_800a5658 = DAT_800a56a8 << 0x10 | 0x10;
      uVar2 = 0x1000201;
      if (DAT_800a56a0 == 1) {
        uVar2 = 0x1000200;
      }
      *(undefined4 *)PTR_DMA_SPU_CHCR_800a565c = uVar2;
      return 0;
    }
    _spu_FsetDelayR();
    uVar2 = SPU_OBJ_7C0();
    return uVar2;
  }
  uVar2 = SPU_OBJ_848();
  return uVar2;
}



undefined4 SPU_OBJ_7C0(undefined4 param_1,undefined4 param_2,uint param_3)

{
  uint *unaff_s0;
  
  DAT_800a56a4 = unaff_s0[-1];
  DAT_800a56a8 = (*unaff_s0 >> 6) + (uint)((*unaff_s0 & 0x3f) != 0);
  *(uint *)PTR_DMA_SPU_MADR_800a5654 = DAT_800a56a4;
  *(uint *)PTR_DMA_SPU_BCR_800a5658 = DAT_800a56a8 << 0x10 | 0x10;
  param_3 = param_3 | 0x201;
  if (DAT_800a56a0 == 1) {
    param_3 = 0x1000200;
  }
  *(uint *)PTR_DMA_SPU_CHCR_800a565c = param_3;
  return 0;
}



void SPU_OBJ_848(void)

{
  return;
}



undefined4 _spu_Fw(undefined4 param_1,undefined4 param_2)

{
  undefined4 uVar1;
  
  if (DAT_800a566c == 0) {
    _spu_t(2,(uint)DAT_800a5668 << (DAT_800a5678 & 0x1f));
    _spu_t(1);
    _spu_t(3,param_1,param_2);
    uVar1 = SPU_OBJ_8CC();
    return uVar1;
  }
  _spu_FwriteByIO(param_1,param_2);
  return param_2;
}



void SPU_OBJ_8CC(void)

{
  return;
}



undefined4 _spu_Fr(undefined4 param_1,undefined4 param_2)

{
  _spu_t(2,(uint)DAT_800a5668 << (DAT_800a5678 & 0x1f));
  _spu_t(0);
  _spu_t(3,param_1,param_2);
  return param_2;
}



void _spu_FsetRXX(int param_1,uint param_2,int param_3)

{
  if (param_3 == 0) {
    *(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + param_1 * 2) = (short)param_2;
    SPU_OBJ_98C();
    return;
  }
  *(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + param_1 * 2) =
       (short)(param_2 >> (DAT_800a5678 & 0x1f));
  return;
}



void SPU_OBJ_98C(void)

{
  return;
}



uint _spu_FsetRXXa(int param_1,uint param_2)

{
  uint uVar1;
  
  if (DAT_800a5674 != 0) {
    if (DAT_800a567c == 0) {
      trap(0x1c00);
    }
    if (param_2 % DAT_800a567c != 0) {
      param_2 = param_2 + DAT_800a567c & ~DAT_800a5680;
    }
  }
  if (param_1 != -2) {
    if (param_1 == -1) {
      uVar1 = SPU_OBJ_A30();
      return uVar1;
    }
    *(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + param_1 * 2) =
         (short)(param_2 >> (DAT_800a5678 & 0x1f));
    return param_2;
  }
  uVar1 = SPU_OBJ_A30();
  return uVar1;
}



void SPU_OBJ_A30(void)

{
  return;
}



uint _spu_FgetRXXa(int param_1,int param_2)

{
  uint uVar1;
  
  if (param_2 != -1) {
    uVar1 = SPU_OBJ_A6C();
    return uVar1;
  }
  return (uint)*(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + param_1 * 2);
}



void SPU_OBJ_A6C(void)

{
  return;
}



void _spu_FsetPCR(int param_1)

{
  *(uint *)PTR_DMA_DPCR_800a5660 = *(uint *)PTR_DMA_DPCR_800a5660 & 0xfff8ffff;
  if (param_1 != 0) {
    SPU_OBJ_AC4(0x30000);
    return;
  }
  *(uint *)PTR_DMA_DPCR_800a5660 = *(uint *)PTR_DMA_DPCR_800a5660 | 0x50000;
  return;
}



void SPU_OBJ_AC4(uint param_1)

{
  uint *in_v0;
  uint in_v1;
  
  *in_v0 = in_v1 | param_1;
  return;
}



void _spu_FsetDelayW(void)

{
  *(uint *)PTR_SPU_DELAY_800a5664 = *(uint *)PTR_SPU_DELAY_800a5664 & 0xf0ffffff | 0x20000000;
  return;
}



void _spu_FsetDelayR(void)

{
  *(uint *)PTR_SPU_DELAY_800a5664 = *(uint *)PTR_SPU_DELAY_800a5664 & 0xf0ffffff | 0x22000000;
  return;
}



void _spu_Fw1ts(void)

{
  SPU_OBJ_B74();
  return;
}



void SPU_OBJ_B74(void)

{
  int local_res0;
  
  for (; local_res0 < 0x3c; local_res0 = local_res0 + 1) {
  }
  return;
}



void _SpuDataCallback(undefined4 param_1)

{
  DMACallback(4,param_1);
  return;
}



void CloseEvent(void)

{
  (*(code *)&SUB_000000b0)();
  return;
}



void DisableEvent(void)

{
  (*(code *)&SUB_000000b0)();
  return;
}



void SpuSetVoiceAttr(SpuVoiceAttr *arg)

{
  _SpuRSetVoiceAttr((long)arg,0,(SpuVoiceAttr *)0x17);
  return;
}



void SpuSetKey(long on_off,ulong voice_bit)

{
  undefined *puVar1;
  uint uVar2;
  ushort uVar3;
  ushort uVar4;
  
  puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
  uVar2 = voice_bit & 0xffffff;
  uVar3 = (ushort)uVar2;
  uVar4 = (ushort)(uVar2 >> 0x10);
  if (on_off == 0) {
    if ((DAT_800a5648 & 1) == 0) {
      *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x18c) = uVar3;
      *(ushort *)(puVar1 + 0x18e) = uVar4;
      DAT_800a51e8 = DAT_800a51e8 & ~uVar2;
    }
    else {
      DAT_800a5214 = DAT_800a5214 | 1;
      DAT_800a5210 = DAT_800a5210 & ~uVar2;
      if ((DAT_800acbe8 & uVar2) != 0) {
        DAT_800acbe8 = DAT_800acbe8 & (ushort)~uVar2;
      }
      DAT_800acbec = uVar3;
      DAT_800acbee = uVar4;
      if (((uint)DAT_800acbea & uVar2 >> 0x10) != 0) {
        DAT_800acbea = DAT_800acbea & ~uVar4;
        S_SK_OBJ_1F4();
        return;
      }
    }
  }
  else if (on_off == 1) {
    if ((DAT_800a5648 & 1) == 0) {
      *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x188) = uVar3;
      *(ushort *)(puVar1 + 0x18a) = uVar4;
      S_SK_OBJ_1EC();
      return;
    }
    DAT_800a5214 = DAT_800a5214 | 1;
    DAT_800a5210 = DAT_800a5210 | uVar2;
    if ((DAT_800acbec & uVar2) != 0) {
      DAT_800acbec = DAT_800acbec & ~uVar3;
    }
    DAT_800acbe8 = uVar3;
    DAT_800acbea = uVar4;
    if (((uint)DAT_800acbee & uVar2 >> 0x10) != 0) {
      DAT_800acbee = DAT_800acbee & ~uVar4;
      S_SK_OBJ_1F4();
      return;
    }
  }
  return;
}



void S_SK_OBJ_1EC(void)

{
  undefined4 in_v0;
  
  DAT_800a51e8 = in_v0;
  return;
}



void S_SK_OBJ_1F4(void)

{
  return;
}



// WARNING: Removing unreachable block (ram,0x8008f8cc)
// WARNING: Removing unreachable block (ram,0x8008f908)
// WARNING: Removing unreachable block (ram,0x8008f8f8)
// WARNING: Removing unreachable block (ram,0x8008f900)
// WARNING: Removing unreachable block (ram,0x8008f910)

long SpuGetKeyStatus(ulong voice_bit)

{
  uint uVar1;
  long lVar2;
  uint uVar3;
  
  uVar3 = 0;
  uVar1 = 1;
  do {
    if ((voice_bit & uVar1) != 0) {
      lVar2 = S_GKS_OBJ_2C(voice_bit,uVar3);
      return lVar2;
    }
    uVar3 = uVar3 + 1;
    uVar1 = 1 << (uVar3 & 0x1f);
  } while ((int)uVar3 < 0x18);
  lVar2 = S_GKS_OBJ_8C();
  return lVar2;
}



int S_GKS_OBJ_2C(undefined4 param_1,uint param_2)

{
  int iVar1;
  
  if (param_2 == 0xffffffff) {
    iVar1 = S_GKS_OBJ_8C();
    return iVar1;
  }
  if ((DAT_800a51e8 & 1 << (param_2 & 0x1f)) == 0) {
    iVar1 = (uint)(*(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + param_2 * 0x10 + 0xc) != 0) << 1;
  }
  else {
    iVar1 = 3;
    if (*(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + param_2 * 0x10 + 0xc) != 0) {
      iVar1 = S_GKS_OBJ_8C();
      return iVar1;
    }
  }
  return iVar1;
}



void S_GKS_OBJ_8C(void)

{
  return;
}



// Possible S_W.OBJ/SpuWrite

ulong SpuRead(uchar *addr,ulong size)

{
  if (0x7eff0 < size) {
    size = 0x7eff0;
  }
  _spu_Fw(addr,size);
  if (DAT_800a5688 == 0) {
    DAT_800a5684 = 0;
  }
  return size;
}



ulong SpuSetTransferStartAddr(ulong addr)

{
  ulong uVar1;
  
  if (addr - 0x1010 < 0x7efe9) {
    DAT_800a5668 = _spu_FsetRXXa(0xffffffff);
    uVar1 = S_STSA_OBJ_48();
    return uVar1;
  }
  return 0;
}



void S_STSA_OBJ_48(void)

{
  return;
}



long SpuSetTransferMode(long mode)

{
  long lVar1;
  
  if ((mode != 0) && (mode == 1)) {
    lVar1 = S_STM_OBJ_1C();
    return lVar1;
  }
  DAT_800a51ec = mode;
  DAT_800a566c = 0;
  return 0;
}



void S_STM_OBJ_1C(undefined4 param_1)

{
  undefined4 in_v0;
  
  DAT_800a51ec = param_1;
  DAT_800a566c = in_v0;
  return;
}



long SpuIsTransferCompleted(long flag)

{
  bool bVar1;
  long lVar2;
  int iVar3;
  
  if ((DAT_800a51ec != 1) && (DAT_800a5684 != 1)) {
    iVar3 = TestEvent(DAT_800a51e4);
    if (flag == 1) {
      bVar1 = iVar3 == 0;
      iVar3 = 1;
      if (bVar1) {
        do {
          iVar3 = TestEvent(DAT_800a51e4);
        } while (iVar3 == 0);
        lVar2 = S_ITC_OBJ_88();
        return lVar2;
      }
    }
    else if (iVar3 != 1) {
      return iVar3;
    }
    DAT_800a5684 = iVar3;
    return iVar3;
  }
  lVar2 = S_ITC_OBJ_90();
  return lVar2;
}



void S_ITC_OBJ_88(void)

{
  undefined4 in_v0;
  
  DAT_800a5684 = in_v0;
  return;
}



void S_ITC_OBJ_90(void)

{
  return;
}



void TestEvent(void)

{
  (*(code *)&SUB_000000b0)();
  return;
}



void SpuSetCommonAttr(SpuCommonAttr *attr)

{
  bool bVar1;
  ushort uVar2;
  ushort uVar3;
  ushort uVar4;
  uint uVar5;
  
  uVar3 = 0;
  uVar5 = attr->mask;
  bVar1 = uVar5 == 0;
  uVar4 = 0;
  if (bVar1) {
S_SCA_OBJ_30:
    switch((attr->mvolmode).left) {
    default:
S_SCA_OBJ_94:
      uVar3 = (attr->mvol).left;
      uVar2 = 0;
      break;
    case 1:
      uVar2 = 0x8000;
      break;
    case 2:
      uVar2 = 0x9000;
      break;
    case 3:
      uVar2 = 0xa000;
      break;
    case 4:
      uVar2 = 0xb000;
      break;
    case 5:
      uVar2 = 0xc000;
      break;
    case 6:
      uVar2 = 0xd000;
      break;
    case 7:
      uVar2 = 0xe000;
    }
    if (uVar2 != 0) {
      uVar3 = (attr->mvol).left;
      if (0x7f < (short)uVar3) {
        S_SCA_OBJ_CC(attr,uVar2,0x7f);
        return;
      }
      if ((short)uVar3 < 0) {
        uVar3 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = uVar3 & 0x7fff | uVar2;
  }
  else if ((uVar5 & 1) != 0) {
    if ((uVar5 & 4) != 0) goto S_SCA_OBJ_30;
    goto S_SCA_OBJ_94;
  }
  if (bVar1) {
S_SCA_OBJ_F8:
    switch((attr->mvolmode).right) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar3 = 0x8000;
      break;
    case 2:
      uVar3 = 0x9000;
      break;
    case 3:
      uVar3 = 0xa000;
      break;
    case 4:
      uVar3 = 0xb000;
      break;
    case 5:
      uVar3 = 0xc000;
      break;
    case 6:
      uVar3 = 0xd000;
      break;
    case 7:
      uVar3 = 0xe000;
    }
  }
  else {
    if ((uVar5 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((uVar5 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    uVar4 = (attr->mvol).right;
    uVar3 = 0;
  }
  if (uVar3 != 0) {
    uVar4 = (attr->mvol).right;
    if (0x7f < (short)uVar4) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)uVar4 < 0) {
      uVar4 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = uVar4 & 0x7fff | uVar3;
S_SCA_OBJ_1A8:
  if ((bVar1) || ((uVar5 & 0x40) != 0)) {
    *(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = (attr->cd).volume.left;
  }
  if ((bVar1) || ((uVar5 & 0x80) != 0)) {
    *(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = (attr->cd).volume.right;
  }
  if ((bVar1) || ((uVar5 & 0x400) != 0)) {
    *(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = (attr->ext).volume.left;
  }
  if ((bVar1) || ((uVar5 & 0x800) != 0)) {
    *(short *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = (attr->ext).volume.right;
  }
  if ((bVar1) || ((uVar5 & 0x100) != 0)) {
    if ((attr->cd).reverb == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((bVar1) || ((uVar5 & 0x200) != 0)) {
    if ((attr->cd).mix == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((bVar1) || ((uVar5 & 0x1000) != 0)) {
    if ((attr->ext).reverb == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((bVar1) || ((uVar5 & 0x2000) != 0)) {
    if ((attr->ext).mix == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_5C(int param_1)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 4);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_CC(param_1,0x8000,0x7f);
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = uVar1 & 0x7fff | 0x8000;
  if (in_t2 == 0) {
    if ((in_t1 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((in_t1 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    in_t0 = *(ushort *)(param_1 + 6);
    uVar1 = 0;
  }
  else {
S_SCA_OBJ_F8:
    switch(*(undefined2 *)(param_1 + 10)) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar1 = 0x8000;
      break;
    case 2:
      uVar1 = 0x9000;
      break;
    case 3:
      uVar1 = 0xa000;
      break;
    case 4:
      uVar1 = 0xb000;
      break;
    case 5:
      uVar1 = 0xc000;
      break;
    case 6:
      uVar1 = 0xd000;
      break;
    case 7:
      uVar1 = 0xe000;
    }
  }
  if (uVar1 != 0) {
    in_t0 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)in_t0) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)in_t0 < 0) {
      in_t0 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | uVar1;
S_SCA_OBJ_1A8:
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_64(int param_1)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 4);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_CC(param_1,0x9000,0x7f);
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = uVar1 & 0x7fff | 0x9000;
  if (in_t2 == 0) {
    if ((in_t1 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((in_t1 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    in_t0 = *(ushort *)(param_1 + 6);
    uVar1 = 0;
  }
  else {
S_SCA_OBJ_F8:
    switch(*(undefined2 *)(param_1 + 10)) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar1 = 0x8000;
      break;
    case 2:
      uVar1 = 0x9000;
      break;
    case 3:
      uVar1 = 0xa000;
      break;
    case 4:
      uVar1 = 0xb000;
      break;
    case 5:
      uVar1 = 0xc000;
      break;
    case 6:
      uVar1 = 0xd000;
      break;
    case 7:
      uVar1 = 0xe000;
    }
  }
  if (uVar1 != 0) {
    in_t0 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)in_t0) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)in_t0 < 0) {
      in_t0 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | uVar1;
S_SCA_OBJ_1A8:
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_6C(int param_1)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 4);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_CC(param_1,0xa000,0x7f);
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = uVar1 & 0x7fff | 0xa000;
  if (in_t2 == 0) {
    if ((in_t1 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((in_t1 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    in_t0 = *(ushort *)(param_1 + 6);
    uVar1 = 0;
  }
  else {
S_SCA_OBJ_F8:
    switch(*(undefined2 *)(param_1 + 10)) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar1 = 0x8000;
      break;
    case 2:
      uVar1 = 0x9000;
      break;
    case 3:
      uVar1 = 0xa000;
      break;
    case 4:
      uVar1 = 0xb000;
      break;
    case 5:
      uVar1 = 0xc000;
      break;
    case 6:
      uVar1 = 0xd000;
      break;
    case 7:
      uVar1 = 0xe000;
    }
  }
  if (uVar1 != 0) {
    in_t0 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)in_t0) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)in_t0 < 0) {
      in_t0 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | uVar1;
S_SCA_OBJ_1A8:
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_74(int param_1)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 4);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_CC(param_1,0xb000,0x7f);
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = uVar1 & 0x7fff | 0xb000;
  if (in_t2 == 0) {
    if ((in_t1 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((in_t1 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    in_t0 = *(ushort *)(param_1 + 6);
    uVar1 = 0;
  }
  else {
S_SCA_OBJ_F8:
    switch(*(undefined2 *)(param_1 + 10)) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar1 = 0x8000;
      break;
    case 2:
      uVar1 = 0x9000;
      break;
    case 3:
      uVar1 = 0xa000;
      break;
    case 4:
      uVar1 = 0xb000;
      break;
    case 5:
      uVar1 = 0xc000;
      break;
    case 6:
      uVar1 = 0xd000;
      break;
    case 7:
      uVar1 = 0xe000;
    }
  }
  if (uVar1 != 0) {
    in_t0 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)in_t0) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)in_t0 < 0) {
      in_t0 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | uVar1;
S_SCA_OBJ_1A8:
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_7C(int param_1)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 4);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_CC(param_1,0xc000,0x7f);
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = uVar1 & 0x7fff | 0xc000;
  if (in_t2 == 0) {
    if ((in_t1 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((in_t1 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    in_t0 = *(ushort *)(param_1 + 6);
    uVar1 = 0;
  }
  else {
S_SCA_OBJ_F8:
    switch(*(undefined2 *)(param_1 + 10)) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar1 = 0x8000;
      break;
    case 2:
      uVar1 = 0x9000;
      break;
    case 3:
      uVar1 = 0xa000;
      break;
    case 4:
      uVar1 = 0xb000;
      break;
    case 5:
      uVar1 = 0xc000;
      break;
    case 6:
      uVar1 = 0xd000;
      break;
    case 7:
      uVar1 = 0xe000;
    }
  }
  if (uVar1 != 0) {
    in_t0 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)in_t0) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)in_t0 < 0) {
      in_t0 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | uVar1;
S_SCA_OBJ_1A8:
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_84(int param_1)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 4);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_CC(param_1,0xd000,0x7f);
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = uVar1 & 0x7fff | 0xd000;
  if (in_t2 == 0) {
    if ((in_t1 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((in_t1 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    in_t0 = *(ushort *)(param_1 + 6);
    uVar1 = 0;
  }
  else {
S_SCA_OBJ_F8:
    switch(*(undefined2 *)(param_1 + 10)) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar1 = 0x8000;
      break;
    case 2:
      uVar1 = 0x9000;
      break;
    case 3:
      uVar1 = 0xa000;
      break;
    case 4:
      uVar1 = 0xb000;
      break;
    case 5:
      uVar1 = 0xc000;
      break;
    case 6:
      uVar1 = 0xd000;
      break;
    case 7:
      uVar1 = 0xe000;
    }
  }
  if (uVar1 != 0) {
    in_t0 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)in_t0) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)in_t0 < 0) {
      in_t0 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | uVar1;
S_SCA_OBJ_1A8:
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_8C(int param_1)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 4);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_CC(param_1,0xe000,0x7f);
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = uVar1 & 0x7fff | 0xe000;
  if (in_t2 == 0) {
    if ((in_t1 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((in_t1 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    in_t0 = *(ushort *)(param_1 + 6);
    uVar1 = 0;
  }
  else {
S_SCA_OBJ_F8:
    switch(*(undefined2 *)(param_1 + 10)) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar1 = 0x8000;
      break;
    case 2:
      uVar1 = 0x9000;
      break;
    case 3:
      uVar1 = 0xa000;
      break;
    case 4:
      uVar1 = 0xb000;
      break;
    case 5:
      uVar1 = 0xc000;
      break;
    case 6:
      uVar1 = 0xd000;
      break;
    case 7:
      uVar1 = 0xe000;
    }
  }
  if (uVar1 != 0) {
    in_t0 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)in_t0) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)in_t0 < 0) {
      in_t0 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | uVar1;
S_SCA_OBJ_1A8:
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x8008fb60)
// WARNING: Removing unreachable block (ram,0x8008fb74)
// WARNING: Removing unreachable block (ram,0x8008fb7c)
// WARNING: Removing unreachable block (ram,0x8008fb84)
// WARNING: Removing unreachable block (ram,0x8008fb88)

void S_SCA_OBJ_94(int param_1)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = *(ushort *)(param_1 + 4) & 0x7fff;
  if (in_t2 == 0) {
    if ((in_t1 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((in_t1 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    in_t0 = *(ushort *)(param_1 + 6);
    uVar1 = 0;
  }
  else {
S_SCA_OBJ_F8:
    switch(*(undefined2 *)(param_1 + 10)) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar1 = 0x8000;
      break;
    case 2:
      uVar1 = 0x9000;
      break;
    case 3:
      uVar1 = 0xa000;
      break;
    case 4:
      uVar1 = 0xb000;
      break;
    case 5:
      uVar1 = 0xc000;
      break;
    case 6:
      uVar1 = 0xd000;
      break;
    case 7:
      uVar1 = 0xe000;
    }
  }
  if (uVar1 != 0) {
    in_t0 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)in_t0) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)in_t0 < 0) {
      in_t0 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | uVar1;
S_SCA_OBJ_1A8:
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_9C(int param_1,int param_2,ushort param_3)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  if (param_2 != 0) {
    param_3 = *(ushort *)(param_1 + 4);
    if (0x7f < (short)param_3) {
      S_SCA_OBJ_CC(param_1,param_2,0x7f);
      return;
    }
    if ((short)param_3 < 0) {
      param_3 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = param_3 & 0x7fff | (ushort)param_2;
  if (in_t2 == 0) {
    if ((in_t1 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((in_t1 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    in_t0 = *(ushort *)(param_1 + 6);
    uVar1 = 0;
  }
  else {
S_SCA_OBJ_F8:
    switch(*(undefined2 *)(param_1 + 10)) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar1 = 0x8000;
      break;
    case 2:
      uVar1 = 0x9000;
      break;
    case 3:
      uVar1 = 0xa000;
      break;
    case 4:
      uVar1 = 0xb000;
      break;
    case 5:
      uVar1 = 0xc000;
      break;
    case 6:
      uVar1 = 0xd000;
      break;
    case 7:
      uVar1 = 0xe000;
    }
  }
  if (uVar1 != 0) {
    in_t0 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)in_t0) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)in_t0 < 0) {
      in_t0 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | uVar1;
S_SCA_OBJ_1A8:
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_CC(int param_1,ushort param_2,ushort param_3)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x180) = param_3 & 0x7fff | param_2;
  if (in_t2 == 0) {
    if ((in_t1 & 2) == 0) goto S_SCA_OBJ_1A8;
    if ((in_t1 & 8) != 0) goto S_SCA_OBJ_F8;
S_SCA_OBJ_15C:
    in_t0 = *(ushort *)(param_1 + 6);
    uVar1 = 0;
  }
  else {
S_SCA_OBJ_F8:
    switch(*(undefined2 *)(param_1 + 10)) {
    default:
      goto S_SCA_OBJ_15C;
    case 1:
      uVar1 = 0x8000;
      break;
    case 2:
      uVar1 = 0x9000;
      break;
    case 3:
      uVar1 = 0xa000;
      break;
    case 4:
      uVar1 = 0xb000;
      break;
    case 5:
      uVar1 = 0xc000;
      break;
    case 6:
      uVar1 = 0xd000;
      break;
    case 7:
      uVar1 = 0xe000;
    }
  }
  if (uVar1 != 0) {
    in_t0 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)in_t0) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)in_t0 < 0) {
      in_t0 = 0;
    }
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | uVar1;
S_SCA_OBJ_1A8:
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_124(int param_1)

{
  ushort uVar1;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 6);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_194();
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = uVar1 & 0x7fff | 0x8000;
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_12C(int param_1)

{
  ushort uVar1;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 6);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_194();
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = uVar1 & 0x7fff | 0x9000;
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_134(int param_1)

{
  ushort uVar1;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 6);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_194();
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = uVar1 & 0x7fff | 0xa000;
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_13C(int param_1)

{
  ushort uVar1;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 6);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_194();
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = uVar1 & 0x7fff | 0xb000;
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_144(int param_1)

{
  ushort uVar1;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 6);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_194();
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = uVar1 & 0x7fff | 0xc000;
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_14C(int param_1)

{
  ushort uVar1;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 6);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_194();
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = uVar1 & 0x7fff | 0xd000;
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_154(int param_1)

{
  ushort uVar1;
  uint in_t1;
  int in_t2;
  
  uVar1 = *(ushort *)(param_1 + 6);
  if (0x7f < (short)uVar1) {
    S_SCA_OBJ_194();
    return;
  }
  if ((short)uVar1 < 0) {
    uVar1 = 0;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = uVar1 & 0x7fff | 0xe000;
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x8008fc28)
// WARNING: Removing unreachable block (ram,0x8008fc3c)
// WARNING: Removing unreachable block (ram,0x8008fc44)
// WARNING: Removing unreachable block (ram,0x8008fc4c)
// WARNING: Removing unreachable block (ram,0x8008fc50)

void S_SCA_OBJ_15C(int param_1)

{
  uint in_t1;
  int in_t2;
  
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = *(ushort *)(param_1 + 6) & 0x7fff;
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_164(int param_1,int param_2)

{
  ushort uVar1;
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  uVar1 = in_t0 & 0x7fff;
  if (param_2 != 0) {
    uVar1 = *(ushort *)(param_1 + 6);
    if (0x7f < (short)uVar1) {
      S_SCA_OBJ_194();
      return;
    }
    if ((short)uVar1 < 0) {
      uVar1 = 0;
    }
    uVar1 = uVar1 & 0x7fff;
  }
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = uVar1 | (ushort)param_2;
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_194(int param_1,ushort param_2)

{
  ushort in_t0;
  uint in_t1;
  int in_t2;
  
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x182) = in_t0 & 0x7fff | param_2;
  if ((in_t2 != 0) || ((in_t1 & 0x40) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = *(undefined2 *)(param_1 + 0x10);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x80) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b2) = *(undefined2 *)(param_1 + 0x12);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x400) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b4) = *(undefined2 *)(param_1 + 0x1c);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x800) != 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b6) = *(undefined2 *)(param_1 + 0x1e);
  }
  if ((in_t2 != 0) || ((in_t1 & 0x100) != 0)) {
    if (*(int *)(param_1 + 0x14) == 0) {
      S_SCA_OBJ_288();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 4;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_288(int param_1)

{
  int in_v0;
  undefined2 in_v1;
  uint in_t1;
  int in_t2;
  
  *(undefined2 *)(in_v0 + 0x1aa) = in_v1;
  if ((in_t2 != 0) || ((in_t1 & 0x200) != 0)) {
    if (*(int *)(param_1 + 0x18) == 0) {
      S_SCA_OBJ_2DC();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 1;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_2DC(int param_1)

{
  int in_v0;
  undefined2 in_v1;
  uint in_t1;
  int in_t2;
  
  *(undefined2 *)(in_v0 + 0x1aa) = in_v1;
  if ((in_t2 != 0) || ((in_t1 & 0x1000) != 0)) {
    if (*(int *)(param_1 + 0x20) == 0) {
      S_SCA_OBJ_330();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 8;
  }
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_330(int param_1)

{
  int in_v0;
  undefined2 in_v1;
  uint in_t1;
  int in_t2;
  
  *(undefined2 *)(in_v0 + 0x1aa) = in_v1;
  if ((in_t2 != 0) || ((in_t1 & 0x2000) != 0)) {
    if (*(int *)(param_1 + 0x24) == 0) {
      S_SCA_OBJ_384();
      return;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1aa) | 2;
  }
  return;
}



void S_SCA_OBJ_384(void)

{
  int in_v0;
  undefined2 in_v1;
  
  *(undefined2 *)(in_v0 + 0x1aa) = in_v1;
  return;
}



long _SpuRSetVoiceAttr(long min_,long max_,SpuVoiceAttr *arg)

{
  bool bVar1;
  bool bVar2;
  undefined2 uVar3;
  long lVar4;
  uint uVar5;
  uint uVar6;
  int iVar7;
  ushort uVar8;
  int in_a3;
  uint uVar9;
  uint uVar10;
  uint uVar11;
  
  uVar11 = 0;
  uVar10 = 0;
  uVar9 = *(uint *)(min_ + 4);
  bVar1 = (SpuVoiceAttr *)max_ == arg;
  bVar2 = uVar9 == 0;
  if (max_ < 0) {
    max_ = 0;
  }
  if (max_ < 0x18) {
    if (0x17 < (int)arg) {
      arg = (SpuVoiceAttr *)0x17;
    }
    if ((-1 < (int)arg) && (max_ <= (int)arg)) {
      do {
        if ((int)((int)&arg->voice + 1) <= max_) {
          if (in_a3 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
        if ((bVar1) || ((*(uint *)min_ & 1 << (max_ & 0x1fU)) != 0)) {
          if ((bVar2) || ((uVar9 & 0x10) != 0)) {
            *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 4) =
                 *(undefined2 *)(min_ + 0x14);
          }
          if ((bVar2) || ((uVar9 & 0x40) != 0)) {
            (&DAT_800a5218)[max_] = *(undefined2 *)(min_ + 0x18);
          }
          if ((bVar2) || ((uVar9 & 0x20) != 0)) {
            uVar3 = _spu_note2pitch((ushort)(&DAT_800a5218)[max_] >> 8,(&DAT_800a5218)[max_] & 0xff,
                                    *(ushort *)(min_ + 0x16) >> 8,*(ushort *)(min_ + 0x16) & 0xff);
            *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 4) = uVar3;
          }
          if ((bVar2) || ((uVar9 & 0x20000) != 0)) {
            *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 8) =
                 *(undefined2 *)(min_ + 0x3a);
          }
          if ((bVar2) || ((uVar9 & 0x40000) != 0)) {
            *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 10) =
                 *(undefined2 *)(min_ + 0x3c);
          }
          if (bVar2) {
SR_SV_OBJ_1C0:
            switch(*(undefined2 *)(min_ + 0xc)) {
            default:
SR_SV_OBJ_224:
              uVar11 = (uint)*(ushort *)(min_ + 8);
              uVar8 = 0;
              break;
            case 1:
              uVar8 = 0x8000;
              break;
            case 2:
              uVar8 = 0x9000;
              break;
            case 3:
              uVar8 = 0xa000;
              break;
            case 4:
              uVar8 = 0xb000;
              break;
            case 5:
              uVar8 = 0xc000;
              break;
            case 6:
              uVar8 = 0xd000;
              break;
            case 7:
              uVar8 = 0xe000;
            }
            if (uVar8 != 0) {
              uVar11 = (uint)*(short *)(min_ + 8);
              if (0x7f < (int)uVar11) {
                lVar4 = SR_SV_OBJ_25C();
                return lVar4;
              }
              if ((int)uVar11 < 0) {
                uVar11 = 0;
              }
            }
            *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10) =
                 (ushort)uVar11 & 0x7fff | uVar8;
          }
          else if ((uVar9 & 1) != 0) {
            if ((uVar9 & 4) != 0) goto SR_SV_OBJ_1C0;
            goto SR_SV_OBJ_224;
          }
          if (bVar2) {
SR_SV_OBJ_290:
            switch(*(undefined2 *)(min_ + 0xe)) {
            default:
SR_SV_OBJ_2F4:
              uVar10 = (uint)*(ushort *)(min_ + 10);
              uVar8 = 0;
              break;
            case 1:
              uVar8 = 0x8000;
              break;
            case 2:
              uVar8 = 0x9000;
              break;
            case 3:
              uVar8 = 0xa000;
              break;
            case 4:
              uVar8 = 0xb000;
              break;
            case 5:
              uVar8 = 0xc000;
              break;
            case 6:
              uVar8 = 0xd000;
              break;
            case 7:
              uVar8 = 0xe000;
            }
            if (uVar8 != 0) {
              uVar10 = (uint)*(short *)(min_ + 10);
              if (0x7f < (int)uVar10) {
                lVar4 = SR_SV_OBJ_32C();
                return lVar4;
              }
              if ((int)uVar10 < 0) {
                uVar10 = 0;
              }
            }
            *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 2) =
                 (ushort)uVar10 & 0x7fff | uVar8;
          }
          else if ((uVar9 & 2) != 0) {
            if ((uVar9 & 8) != 0) goto SR_SV_OBJ_290;
            goto SR_SV_OBJ_2F4;
          }
          if ((bVar2) || ((uVar9 & 0x10000) != 0)) {
            _spu_FsetRXXa(max_ << 3 | 7,*(undefined4 *)(min_ + 0x20));
          }
          if ((bVar2) || ((uVar9 & 0x80) != 0)) {
            _spu_FsetRXXa(max_ << 3 | 3,*(undefined4 *)(min_ + 0x1c));
          }
          if (bVar2) {
SR_SV_OBJ_39C:
            if ((*(int *)(min_ + 0x24) != 1) && (*(int *)(min_ + 0x24) == 5)) {
              lVar4 = SR_SV_OBJ_3C0();
              return lVar4;
            }
code_r0x80090210:
            uVar5 = (uint)*(ushort *)(min_ + 0x30);
            if (0x7f < uVar5) {
              uVar5 = 0x7f;
            }
            *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 8) =
                 *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 8) & 0xff |
                 (ushort)(uVar5 << 8);
          }
          else if ((uVar9 & 0x800) != 0) {
            if ((uVar9 & 0x100) != 0) goto SR_SV_OBJ_39C;
            goto code_r0x80090210;
          }
          if ((bVar2) || ((uVar9 & 0x1000) != 0)) {
            uVar5 = (uint)*(ushort *)(min_ + 0x32);
            if (0xf < uVar5) {
              uVar5 = 0xf;
            }
            *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 8) =
                 *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 8) & 0xff0f |
                 (ushort)(uVar5 << 4);
          }
          if ((bVar2) || ((uVar9 & 0x8000) != 0)) {
            uVar8 = *(ushort *)(min_ + 0x38);
            if (0xf < uVar8) {
              uVar8 = 0xf;
            }
            *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 8) =
                 uVar8 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 8) & 0xfff0;
          }
          if (bVar2) {
SR_SV_OBJ_4C4:
            iVar7 = *(int *)(min_ + 0x28);
            if (iVar7 == 3) {
              uVar5 = 0x100;
            }
            else if (iVar7 < 4) {
              uVar5 = 0;
              if (iVar7 != 1) {
                lVar4 = SR_SV_OBJ_514();
                return lVar4;
              }
            }
            else {
              if (iVar7 == 5) {
                lVar4 = SR_SV_OBJ_514();
                return lVar4;
              }
              uVar5 = 0x300;
              if (iVar7 != 7) {
                lVar4 = SR_SV_OBJ_514();
                return lVar4;
              }
            }
code_r0x80090364:
            uVar6 = (uint)*(ushort *)(min_ + 0x34);
            if (0x7f < uVar6) {
              uVar6 = 0x7f;
            }
            *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 10) =
                 *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 10) & 0x3f |
                 (ushort)((uVar6 | uVar5) << 6);
          }
          else if ((uVar9 & 0x2000) != 0) {
            uVar5 = 0;
            if ((uVar9 & 0x200) != 0) goto SR_SV_OBJ_4C4;
            goto code_r0x80090364;
          }
          if (bVar2) {
SR_SV_OBJ_574:
            if ((*(int *)(min_ + 0x2c) != 3) && (*(int *)(min_ + 0x2c) == 7)) {
              lVar4 = SR_SV_OBJ_598();
              return lVar4;
            }
          }
          else {
            if ((uVar9 & 0x4000) == 0) goto SR_SV_OBJ_5DC;
            if ((uVar9 & 0x400) != 0) goto SR_SV_OBJ_574;
          }
          uVar8 = *(ushort *)(min_ + 0x36);
          if (0x1f < uVar8) {
            uVar8 = 0x1f;
          }
          *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 10) =
               *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + max_ * 0x10 + 10) & 0xffc0 | uVar8;
        }
SR_SV_OBJ_5DC:
        max_ = max_ + 1;
      } while( true );
    }
  }
  lVar4 = SR_SV_OBJ_608();
  return lVar4;
}



undefined4 SR_SV_OBJ_1EC(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x8009003c:
  uVar5 = 0x8000;
SR_SV_OBJ_22C:
  do {
    if (uVar5 != 0) {
      unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
      if (0x7f < (int)unaff_s6) {
        uVar2 = SR_SV_OBJ_25C();
        return uVar2;
      }
      if ((int)unaff_s6 < 0) {
        unaff_s6 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2) = (ushort)unaff_s6 & 0x7fff | uVar5
    ;
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_1C0;
    } while ((unaff_s1 & 1) == 0);
    if ((unaff_s1 & 4) == 0) {
SR_SV_OBJ_224:
      unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
      uVar5 = 0;
      goto SR_SV_OBJ_22C;
    }
SR_SV_OBJ_1C0:
    switch(*(undefined2 *)(unaff_s0 + 3)) {
    default:
      goto SR_SV_OBJ_224;
    case 1:
      goto code_r0x8009003c;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_1F4(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x80090044:
  uVar5 = 0x9000;
SR_SV_OBJ_22C:
  do {
    if (uVar5 != 0) {
      unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
      if (0x7f < (int)unaff_s6) {
        uVar2 = SR_SV_OBJ_25C();
        return uVar2;
      }
      if ((int)unaff_s6 < 0) {
        unaff_s6 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2) = (ushort)unaff_s6 & 0x7fff | uVar5
    ;
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_1C0;
    } while ((unaff_s1 & 1) == 0);
    if ((unaff_s1 & 4) == 0) {
SR_SV_OBJ_224:
      unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
      uVar5 = 0;
      goto SR_SV_OBJ_22C;
    }
SR_SV_OBJ_1C0:
    switch(*(undefined2 *)(unaff_s0 + 3)) {
    default:
      goto SR_SV_OBJ_224;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      goto code_r0x80090044;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_1FC(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x8009004c:
  uVar5 = 0xa000;
SR_SV_OBJ_22C:
  do {
    if (uVar5 != 0) {
      unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
      if (0x7f < (int)unaff_s6) {
        uVar2 = SR_SV_OBJ_25C();
        return uVar2;
      }
      if ((int)unaff_s6 < 0) {
        unaff_s6 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2) = (ushort)unaff_s6 & 0x7fff | uVar5
    ;
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_1C0;
    } while ((unaff_s1 & 1) == 0);
    if ((unaff_s1 & 4) == 0) {
SR_SV_OBJ_224:
      unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
      uVar5 = 0;
      goto SR_SV_OBJ_22C;
    }
SR_SV_OBJ_1C0:
    switch(*(undefined2 *)(unaff_s0 + 3)) {
    default:
      goto SR_SV_OBJ_224;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      goto code_r0x8009004c;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_204(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x80090054:
  uVar5 = 0xb000;
SR_SV_OBJ_22C:
  do {
    if (uVar5 != 0) {
      unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
      if (0x7f < (int)unaff_s6) {
        uVar2 = SR_SV_OBJ_25C();
        return uVar2;
      }
      if ((int)unaff_s6 < 0) {
        unaff_s6 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2) = (ushort)unaff_s6 & 0x7fff | uVar5
    ;
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_1C0;
    } while ((unaff_s1 & 1) == 0);
    if ((unaff_s1 & 4) == 0) {
SR_SV_OBJ_224:
      unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
      uVar5 = 0;
      goto SR_SV_OBJ_22C;
    }
SR_SV_OBJ_1C0:
    switch(*(undefined2 *)(unaff_s0 + 3)) {
    default:
      goto SR_SV_OBJ_224;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      goto code_r0x80090054;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_20C(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x8009005c:
  uVar5 = 0xc000;
SR_SV_OBJ_22C:
  do {
    if (uVar5 != 0) {
      unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
      if (0x7f < (int)unaff_s6) {
        uVar2 = SR_SV_OBJ_25C();
        return uVar2;
      }
      if ((int)unaff_s6 < 0) {
        unaff_s6 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2) = (ushort)unaff_s6 & 0x7fff | uVar5
    ;
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_1C0;
    } while ((unaff_s1 & 1) == 0);
    if ((unaff_s1 & 4) == 0) {
SR_SV_OBJ_224:
      unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
      uVar5 = 0;
      goto SR_SV_OBJ_22C;
    }
SR_SV_OBJ_1C0:
    switch(*(undefined2 *)(unaff_s0 + 3)) {
    default:
      goto SR_SV_OBJ_224;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      goto code_r0x8009005c;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_214(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x80090064:
  uVar5 = 0xd000;
SR_SV_OBJ_22C:
  do {
    if (uVar5 != 0) {
      unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
      if (0x7f < (int)unaff_s6) {
        uVar2 = SR_SV_OBJ_25C();
        return uVar2;
      }
      if ((int)unaff_s6 < 0) {
        unaff_s6 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2) = (ushort)unaff_s6 & 0x7fff | uVar5
    ;
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_1C0;
    } while ((unaff_s1 & 1) == 0);
    if ((unaff_s1 & 4) == 0) {
SR_SV_OBJ_224:
      unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
      uVar5 = 0;
      goto SR_SV_OBJ_22C;
    }
SR_SV_OBJ_1C0:
    switch(*(undefined2 *)(unaff_s0 + 3)) {
    default:
      goto SR_SV_OBJ_224;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      goto code_r0x80090064;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_21C(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x8009006c:
  uVar5 = 0xe000;
SR_SV_OBJ_22C:
  do {
    if (uVar5 != 0) {
      unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
      if (0x7f < (int)unaff_s6) {
        uVar2 = SR_SV_OBJ_25C();
        return uVar2;
      }
      if ((int)unaff_s6 < 0) {
        unaff_s6 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2) = (ushort)unaff_s6 & 0x7fff | uVar5
    ;
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_1C0;
    } while ((unaff_s1 & 1) == 0);
    if ((unaff_s1 & 4) == 0) {
SR_SV_OBJ_224:
      unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
      uVar5 = 0;
      goto SR_SV_OBJ_22C;
    }
SR_SV_OBJ_1C0:
    switch(*(undefined2 *)(unaff_s0 + 3)) {
    default:
      goto SR_SV_OBJ_224;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      goto code_r0x8009006c;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_224(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint uVar6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x80090074:
  do {
    uVar6 = (uint)*(ushort *)(unaff_s0 + 2);
    uVar5 = 0;
SR_SV_OBJ_22C:
    if (uVar5 != 0) {
      uVar6 = (uint)*(short *)(unaff_s0 + 2);
      if (0x7f < (int)uVar6) {
        uVar2 = SR_SV_OBJ_25C();
        return uVar2;
      }
      if ((int)uVar6 < 0) {
        uVar6 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2) = (ushort)uVar6 & 0x7fff | uVar5;
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_1C0;
    } while ((unaff_s1 & 1) == 0);
  } while ((unaff_s1 & 4) == 0);
SR_SV_OBJ_1C0:
  switch(*(undefined2 *)(unaff_s0 + 3)) {
  default:
    goto code_r0x80090074;
  case 1:
    uVar5 = 0x8000;
    break;
  case 2:
    uVar5 = 0x9000;
    break;
  case 3:
    uVar5 = 0xa000;
    break;
  case 4:
    uVar5 = 0xb000;
    break;
  case 5:
    uVar5 = 0xc000;
    break;
  case 6:
    uVar5 = 0xd000;
    break;
  case 7:
    uVar5 = 0xe000;
  }
  goto SR_SV_OBJ_22C;
}



undefined4
SR_SV_OBJ_22C(undefined4 param_1,int param_2,undefined4 param_3,undefined4 param_4,int param_5)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  
code_r0x8009007c:
  do {
    if (param_2 != 0) {
      unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
      if (0x7f < (int)unaff_s6) {
        uVar2 = SR_SV_OBJ_25C();
        return uVar2;
      }
      if ((int)unaff_s6 < 0) {
        unaff_s6 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2) =
         (ushort)unaff_s6 & 0x7fff | (ushort)param_2;
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (param_5 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_1C0;
    } while ((unaff_s1 & 1) == 0);
    if ((unaff_s1 & 4) == 0) {
SR_SV_OBJ_224:
      unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
      param_2 = 0;
      goto code_r0x8009007c;
    }
SR_SV_OBJ_1C0:
    switch(*(undefined2 *)(unaff_s0 + 3)) {
    default:
      goto SR_SV_OBJ_224;
    case 1:
      param_2 = 0x8000;
      break;
    case 2:
      param_2 = 0x9000;
      break;
    case 3:
      param_2 = 0xa000;
      break;
    case 4:
      param_2 = 0xb000;
      break;
    case 5:
      param_2 = 0xc000;
      break;
    case 6:
      param_2 = 0xd000;
      break;
    case 7:
      param_2 = 0xe000;
    }
  } while( true );
}



undefined4
SR_SV_OBJ_25C(undefined4 param_1,ushort param_2,undefined4 param_3,undefined4 param_4,int param_5)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  
  do {
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2) =
         (ushort)unaff_s6 & 0x7fff | param_2;
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (param_5 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_1C0;
    } while ((unaff_s1 & 1) == 0);
    if ((unaff_s1 & 4) == 0) {
SR_SV_OBJ_224:
      unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
      param_2 = 0;
    }
    else {
SR_SV_OBJ_1C0:
      switch(*(undefined2 *)(unaff_s0 + 3)) {
      default:
        goto SR_SV_OBJ_224;
      case 1:
        param_2 = 0x8000;
        break;
      case 2:
        param_2 = 0x9000;
        break;
      case 3:
        param_2 = 0xa000;
        break;
      case 4:
        param_2 = 0xb000;
        break;
      case 5:
        param_2 = 0xc000;
        break;
      case 6:
        param_2 = 0xd000;
        break;
      case 7:
        param_2 = 0xe000;
      }
    }
    if (param_2 != 0) {
      unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
      if (0x7f < (int)unaff_s6) {
        uVar2 = SR_SV_OBJ_25C();
        return uVar2;
      }
      if ((int)unaff_s6 < 0) {
        unaff_s6 = 0;
      }
    }
  } while( true );
}



undefined4 SR_SV_OBJ_2BC(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x8009010c:
  uVar5 = 0x8000;
SR_SV_OBJ_2FC:
  do {
    if (uVar5 != 0) {
      unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
      if (0x7f < (int)unaff_s5) {
        uVar2 = SR_SV_OBJ_32C();
        return uVar2;
      }
      if ((int)unaff_s5 < 0) {
        unaff_s5 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
         (ushort)unaff_s5 & 0x7fff | uVar5;
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_290;
    } while ((unaff_s1 & 2) == 0);
    if ((unaff_s1 & 8) == 0) {
SR_SV_OBJ_2F4:
      unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
      uVar5 = 0;
      goto SR_SV_OBJ_2FC;
    }
SR_SV_OBJ_290:
    switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
    default:
      goto SR_SV_OBJ_2F4;
    case 1:
      goto code_r0x8009010c;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_2C4(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x80090114:
  uVar5 = 0x9000;
SR_SV_OBJ_2FC:
  do {
    if (uVar5 != 0) {
      unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
      if (0x7f < (int)unaff_s5) {
        uVar2 = SR_SV_OBJ_32C();
        return uVar2;
      }
      if ((int)unaff_s5 < 0) {
        unaff_s5 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
         (ushort)unaff_s5 & 0x7fff | uVar5;
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_290;
    } while ((unaff_s1 & 2) == 0);
    if ((unaff_s1 & 8) == 0) {
SR_SV_OBJ_2F4:
      unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
      uVar5 = 0;
      goto SR_SV_OBJ_2FC;
    }
SR_SV_OBJ_290:
    switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
    default:
      goto SR_SV_OBJ_2F4;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      goto code_r0x80090114;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_2CC(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x8009011c:
  uVar5 = 0xa000;
SR_SV_OBJ_2FC:
  do {
    if (uVar5 != 0) {
      unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
      if (0x7f < (int)unaff_s5) {
        uVar2 = SR_SV_OBJ_32C();
        return uVar2;
      }
      if ((int)unaff_s5 < 0) {
        unaff_s5 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
         (ushort)unaff_s5 & 0x7fff | uVar5;
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_290;
    } while ((unaff_s1 & 2) == 0);
    if ((unaff_s1 & 8) == 0) {
SR_SV_OBJ_2F4:
      unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
      uVar5 = 0;
      goto SR_SV_OBJ_2FC;
    }
SR_SV_OBJ_290:
    switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
    default:
      goto SR_SV_OBJ_2F4;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      goto code_r0x8009011c;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_2D4(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x80090124:
  uVar5 = 0xb000;
SR_SV_OBJ_2FC:
  do {
    if (uVar5 != 0) {
      unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
      if (0x7f < (int)unaff_s5) {
        uVar2 = SR_SV_OBJ_32C();
        return uVar2;
      }
      if ((int)unaff_s5 < 0) {
        unaff_s5 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
         (ushort)unaff_s5 & 0x7fff | uVar5;
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_290;
    } while ((unaff_s1 & 2) == 0);
    if ((unaff_s1 & 8) == 0) {
SR_SV_OBJ_2F4:
      unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
      uVar5 = 0;
      goto SR_SV_OBJ_2FC;
    }
SR_SV_OBJ_290:
    switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
    default:
      goto SR_SV_OBJ_2F4;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      goto code_r0x80090124;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_2DC(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x8009012c:
  uVar5 = 0xc000;
SR_SV_OBJ_2FC:
  do {
    if (uVar5 != 0) {
      unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
      if (0x7f < (int)unaff_s5) {
        uVar2 = SR_SV_OBJ_32C();
        return uVar2;
      }
      if ((int)unaff_s5 < 0) {
        unaff_s5 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
         (ushort)unaff_s5 & 0x7fff | uVar5;
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_290;
    } while ((unaff_s1 & 2) == 0);
    if ((unaff_s1 & 8) == 0) {
SR_SV_OBJ_2F4:
      unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
      uVar5 = 0;
      goto SR_SV_OBJ_2FC;
    }
SR_SV_OBJ_290:
    switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
    default:
      goto SR_SV_OBJ_2F4;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      goto code_r0x8009012c;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_2E4(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x80090134:
  uVar5 = 0xd000;
SR_SV_OBJ_2FC:
  do {
    if (uVar5 != 0) {
      unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
      if (0x7f < (int)unaff_s5) {
        uVar2 = SR_SV_OBJ_32C();
        return uVar2;
      }
      if ((int)unaff_s5 < 0) {
        unaff_s5 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
         (ushort)unaff_s5 & 0x7fff | uVar5;
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_290;
    } while ((unaff_s1 & 2) == 0);
    if ((unaff_s1 & 8) == 0) {
SR_SV_OBJ_2F4:
      unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
      uVar5 = 0;
      goto SR_SV_OBJ_2FC;
    }
SR_SV_OBJ_290:
    switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
    default:
      goto SR_SV_OBJ_2F4;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      goto code_r0x80090134;
    case 7:
      uVar5 = 0xe000;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_2EC(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x8009013c:
  uVar5 = 0xe000;
SR_SV_OBJ_2FC:
  do {
    if (uVar5 != 0) {
      unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
      if (0x7f < (int)unaff_s5) {
        uVar2 = SR_SV_OBJ_32C();
        return uVar2;
      }
      if ((int)unaff_s5 < 0) {
        unaff_s5 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
         (ushort)unaff_s5 & 0x7fff | uVar5;
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_290;
    } while ((unaff_s1 & 2) == 0);
    if ((unaff_s1 & 8) == 0) {
SR_SV_OBJ_2F4:
      unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
      uVar5 = 0;
      goto SR_SV_OBJ_2FC;
    }
SR_SV_OBJ_290:
    switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
    default:
      goto SR_SV_OBJ_2F4;
    case 1:
      uVar5 = 0x8000;
      break;
    case 2:
      uVar5 = 0x9000;
      break;
    case 3:
      uVar5 = 0xa000;
      break;
    case 4:
      uVar5 = 0xb000;
      break;
    case 5:
      uVar5 = 0xc000;
      break;
    case 6:
      uVar5 = 0xd000;
      break;
    case 7:
      goto code_r0x8009013c;
    }
  } while( true );
}



undefined4 SR_SV_OBJ_2F4(void)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint uVar6;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  int in_stack_00000010;
  
code_r0x80090144:
  do {
    uVar6 = (uint)*(ushort *)((int)unaff_s0 + 10);
    uVar5 = 0;
SR_SV_OBJ_2FC:
    if (uVar5 != 0) {
      uVar6 = (uint)*(short *)((int)unaff_s0 + 10);
      if (0x7f < (int)uVar6) {
        uVar2 = SR_SV_OBJ_32C();
        return uVar2;
      }
      if ((int)uVar6 < 0) {
        uVar6 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
         (ushort)uVar6 & 0x7fff | uVar5;
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (in_stack_00000010 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_290;
    } while ((unaff_s1 & 2) == 0);
  } while ((unaff_s1 & 8) == 0);
SR_SV_OBJ_290:
  switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
  default:
    goto code_r0x80090144;
  case 1:
    uVar5 = 0x8000;
    break;
  case 2:
    uVar5 = 0x9000;
    break;
  case 3:
    uVar5 = 0xa000;
    break;
  case 4:
    uVar5 = 0xb000;
    break;
  case 5:
    uVar5 = 0xc000;
    break;
  case 6:
    uVar5 = 0xd000;
    break;
  case 7:
    uVar5 = 0xe000;
  }
  goto SR_SV_OBJ_2FC;
}



undefined4
SR_SV_OBJ_2FC(undefined4 param_1,int param_2,undefined4 param_3,undefined4 param_4,int param_5)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  
code_r0x8009014c:
  do {
    if (param_2 != 0) {
      unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
      if (0x7f < (int)unaff_s5) {
        uVar2 = SR_SV_OBJ_32C();
        return uVar2;
      }
      if ((int)unaff_s5 < 0) {
        unaff_s5 = 0;
      }
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
         (ushort)unaff_s5 & 0x7fff | (ushort)param_2;
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (param_5 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_290;
    } while ((unaff_s1 & 2) == 0);
    if ((unaff_s1 & 8) == 0) {
SR_SV_OBJ_2F4:
      unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
      param_2 = 0;
      goto code_r0x8009014c;
    }
SR_SV_OBJ_290:
    switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
    default:
      goto SR_SV_OBJ_2F4;
    case 1:
      param_2 = 0x8000;
      break;
    case 2:
      param_2 = 0x9000;
      break;
    case 3:
      param_2 = 0xa000;
      break;
    case 4:
      param_2 = 0xb000;
      break;
    case 5:
      param_2 = 0xc000;
      break;
    case 6:
      param_2 = 0xd000;
      break;
    case 7:
      param_2 = 0xe000;
    }
  } while( true );
}



undefined4
SR_SV_OBJ_32C(undefined4 param_1,ushort param_2,undefined4 param_3,undefined4 param_4,int param_5)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  
  do {
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 2) =
         (ushort)unaff_s5 & 0x7fff | param_2;
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (param_5 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_290;
    } while ((unaff_s1 & 2) == 0);
    if ((unaff_s1 & 8) == 0) {
SR_SV_OBJ_2F4:
      unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
      param_2 = 0;
    }
    else {
SR_SV_OBJ_290:
      switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
      default:
        goto SR_SV_OBJ_2F4;
      case 1:
        param_2 = 0x8000;
        break;
      case 2:
        param_2 = 0x9000;
        break;
      case 3:
        param_2 = 0xa000;
        break;
      case 4:
        param_2 = 0xb000;
        break;
      case 5:
        param_2 = 0xc000;
        break;
      case 6:
        param_2 = 0xd000;
        break;
      case 7:
        param_2 = 0xe000;
      }
    }
    if (param_2 != 0) {
      unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
      if (0x7f < (int)unaff_s5) {
        uVar2 = SR_SV_OBJ_32C();
        return uVar2;
      }
      if ((int)unaff_s5 < 0) {
        unaff_s5 = 0;
      }
    }
  } while( true );
}



undefined4
SR_SV_OBJ_3C0(undefined4 param_1,undefined4 param_2,uint param_3,undefined4 param_4,int param_5)

{
  undefined2 uVar1;
  uint uVar2;
  undefined4 uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  
  do {
    uVar2 = (uint)*(ushort *)(unaff_s0 + 0xc);
    if (0x7f < uVar2) {
      uVar2 = 0x7f;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff |
         (ushort)((uVar2 | param_3) << 8);
    do {
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar2 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar2) {
          uVar2 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xff0f |
             (ushort)(uVar2 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar2 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar2 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar2 = 0;
          if (uVar4 != 1) {
            uVar3 = SR_SV_OBJ_514();
            return uVar3;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar3 = SR_SV_OBJ_514();
            return uVar3;
          }
          uVar2 = 0x300;
          if (uVar4 != 7) {
            uVar3 = SR_SV_OBJ_514();
            return uVar3;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
             (ushort)((uVar4 | uVar2) << 6);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar3 = SR_SV_OBJ_598();
          return uVar3;
        }
code_r0x800903e8:
        uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar5) {
          uVar5 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar5;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (param_5 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar3 = SR_SV_OBJ_25C();
            return uVar3;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar3 = SR_SV_OBJ_32C();
            return uVar3;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_39C;
    } while ((unaff_s1 & 0x800) == 0);
    param_3 = 0;
    if ((unaff_s1 & 0x100) != 0) {
SR_SV_OBJ_39C:
      if (unaff_s0[9] == 1) {
        param_3 = 0;
      }
      else {
        param_3 = 0;
        if (unaff_s0[9] == 5) {
          uVar3 = SR_SV_OBJ_3C0();
          return uVar3;
        }
      }
    }
  } while( true );
}



undefined4
SR_SV_OBJ_514(undefined4 param_1,undefined4 param_2,uint param_3,undefined4 param_4,int param_5)

{
  undefined2 uVar1;
  uint uVar2;
  undefined4 uVar3;
  ushort uVar4;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  
  do {
    uVar2 = (uint)*(ushort *)(unaff_s0 + 0xd);
    if (0x7f < uVar2) {
      uVar2 = 0x7f;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0x3f |
         (ushort)((uVar2 | param_3) << 6);
    do {
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x4000) != 0) {
          if ((unaff_s1 & 0x400) != 0) goto SR_SV_OBJ_574;
          goto code_r0x800903e8;
        }
      }
      else {
SR_SV_OBJ_574:
        if ((unaff_s0[0xb] != 3) && (unaff_s0[0xb] == 7)) {
          uVar3 = SR_SV_OBJ_598();
          return uVar3;
        }
code_r0x800903e8:
        uVar4 = *(ushort *)((int)unaff_s0 + 0x36);
        if (0x1f < uVar4) {
          uVar4 = 0x1f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 | uVar4;
      }
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (param_5 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar4 = 0;
          break;
        case 1:
          uVar4 = 0x8000;
          break;
        case 2:
          uVar4 = 0x9000;
          break;
        case 3:
          uVar4 = 0xa000;
          break;
        case 4:
          uVar4 = 0xb000;
          break;
        case 5:
          uVar4 = 0xc000;
          break;
        case 6:
          uVar4 = 0xd000;
          break;
        case 7:
          uVar4 = 0xe000;
        }
        if (uVar4 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar3 = SR_SV_OBJ_25C();
            return uVar3;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar4;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar4 = 0;
          break;
        case 1:
          uVar4 = 0x8000;
          break;
        case 2:
          uVar4 = 0x9000;
          break;
        case 3:
          uVar4 = 0xa000;
          break;
        case 4:
          uVar4 = 0xb000;
          break;
        case 5:
          uVar4 = 0xc000;
          break;
        case 6:
          uVar4 = 0xd000;
          break;
        case 7:
          uVar4 = 0xe000;
        }
        if (uVar4 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar3 = SR_SV_OBJ_32C();
            return uVar3;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar4;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar3 = SR_SV_OBJ_3C0();
          return uVar3;
        }
code_r0x80090210:
        uVar2 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar2) {
          uVar2 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) & 0xff |
             (ushort)(uVar2 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar2 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar2) {
          uVar2 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) & 0xff0f |
             (ushort)(uVar2 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar4 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar4) {
          uVar4 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             uVar4 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) & 0xfff0;
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_4C4;
    } while ((unaff_s1 & 0x2000) == 0);
    param_3 = 0;
    if ((unaff_s1 & 0x200) != 0) {
SR_SV_OBJ_4C4:
      uVar2 = unaff_s0[10];
      if (uVar2 == 3) {
        param_3 = 0x100;
      }
      else if ((int)uVar2 < 4) {
        param_3 = 0;
        if (uVar2 != 1) {
          uVar3 = SR_SV_OBJ_514();
          return uVar3;
        }
      }
      else {
        if (uVar2 == 5) {
          uVar3 = SR_SV_OBJ_514();
          return uVar3;
        }
        param_3 = 0x300;
        if (uVar2 != 7) {
          uVar3 = SR_SV_OBJ_514();
          return uVar3;
        }
      }
    }
  } while( true );
}



undefined4
SR_SV_OBJ_598(undefined4 param_1,undefined4 param_2,ushort param_3,undefined4 param_4,int param_5)

{
  undefined2 uVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  ushort uVar5;
  uint *unaff_s0;
  uint unaff_s1;
  int unaff_s2;
  uint unaff_s3;
  uint unaff_s4;
  uint unaff_s5;
  uint unaff_s6;
  int unaff_s7;
  int unaff_s8;
  
  do {
    uVar5 = *(ushort *)((int)unaff_s0 + 0x36);
    if (0x1f < uVar5) {
      uVar5 = 0x1f;
    }
    *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) =
         *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s3 * 2 + 10) & 0xffc0 |
         uVar5 | param_3;
    do {
      do {
        unaff_s4 = unaff_s4 + 1;
        if (unaff_s7 <= (int)unaff_s4) {
          if (param_5 == 0) {
            _spu_Fw1ts();
          }
          return 0;
        }
      } while ((unaff_s8 == 0) && ((*unaff_s0 & 1 << (unaff_s4 & 0x1f)) == 0));
      unaff_s3 = unaff_s4 * 8;
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) =
             *(undefined2 *)(unaff_s0 + 5);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40) != 0)) {
        (&DAT_800a5218)[unaff_s4] = *(undefined2 *)(unaff_s0 + 6);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20) != 0)) {
        uVar1 = _spu_note2pitch((ushort)(&DAT_800a5218)[unaff_s4] >> 8,
                                (&DAT_800a5218)[unaff_s4] & 0xff,
                                *(ushort *)((int)unaff_s0 + 0x16) >> 8,
                                *(ushort *)((int)unaff_s0 + 0x16) & 0xff);
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 4) = uVar1;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x20000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(undefined2 *)((int)unaff_s0 + 0x3a);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x40000) != 0)) {
        *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(undefined2 *)(unaff_s0 + 0xf);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 1) != 0) {
          if ((unaff_s1 & 4) != 0) goto SR_SV_OBJ_1C0;
          goto SR_SV_OBJ_224;
        }
      }
      else {
SR_SV_OBJ_1C0:
        switch(*(undefined2 *)(unaff_s0 + 3)) {
        default:
SR_SV_OBJ_224:
          unaff_s6 = (uint)*(ushort *)(unaff_s0 + 2);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s6 = (uint)*(short *)(unaff_s0 + 2);
          if (0x7f < (int)unaff_s6) {
            uVar2 = SR_SV_OBJ_25C();
            return uVar2;
          }
          if ((int)unaff_s6 < 0) {
            unaff_s6 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10) =
             (ushort)unaff_s6 & 0x7fff | uVar5;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 2) != 0) {
          if ((unaff_s1 & 8) != 0) goto SR_SV_OBJ_290;
          goto SR_SV_OBJ_2F4;
        }
      }
      else {
SR_SV_OBJ_290:
        switch(*(undefined2 *)((int)unaff_s0 + 0xe)) {
        default:
SR_SV_OBJ_2F4:
          unaff_s5 = (uint)*(ushort *)((int)unaff_s0 + 10);
          uVar5 = 0;
          break;
        case 1:
          uVar5 = 0x8000;
          break;
        case 2:
          uVar5 = 0x9000;
          break;
        case 3:
          uVar5 = 0xa000;
          break;
        case 4:
          uVar5 = 0xb000;
          break;
        case 5:
          uVar5 = 0xc000;
          break;
        case 6:
          uVar5 = 0xd000;
          break;
        case 7:
          uVar5 = 0xe000;
        }
        if (uVar5 != 0) {
          unaff_s5 = (uint)*(short *)((int)unaff_s0 + 10);
          if (0x7f < (int)unaff_s5) {
            uVar2 = SR_SV_OBJ_32C();
            return uVar2;
          }
          if ((int)unaff_s5 < 0) {
            unaff_s5 = 0;
          }
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 2) =
             (ushort)unaff_s5 & 0x7fff | uVar5;
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x10000) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 7,unaff_s0[8]);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x80) != 0)) {
        _spu_FsetRXXa(unaff_s3 | 3,unaff_s0[7]);
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x800) != 0) {
          if ((unaff_s1 & 0x100) != 0) goto SR_SV_OBJ_39C;
          goto code_r0x80090210;
        }
      }
      else {
SR_SV_OBJ_39C:
        if ((unaff_s0[9] != 1) && (unaff_s0[9] == 5)) {
          uVar2 = SR_SV_OBJ_3C0();
          return uVar2;
        }
code_r0x80090210:
        uVar3 = (uint)*(ushort *)(unaff_s0 + 0xc);
        if (0x7f < uVar3) {
          uVar3 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) & 0xff |
             (ushort)(uVar3 << 8);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x1000) != 0)) {
        uVar3 = (uint)*(ushort *)((int)unaff_s0 + 0x32);
        if (0xf < uVar3) {
          uVar3 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) & 0xff0f |
             (ushort)(uVar3 << 4);
      }
      if ((unaff_s2 != 0) || ((unaff_s1 & 0x8000) != 0)) {
        uVar5 = *(ushort *)(unaff_s0 + 0xe);
        if (0xf < uVar5) {
          uVar5 = 0xf;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) =
             uVar5 | *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 8) & 0xfff0;
      }
      if (unaff_s2 == 0) {
        if ((unaff_s1 & 0x2000) != 0) {
          uVar3 = 0;
          if ((unaff_s1 & 0x200) != 0) goto SR_SV_OBJ_4C4;
          goto code_r0x80090364;
        }
      }
      else {
SR_SV_OBJ_4C4:
        uVar4 = unaff_s0[10];
        if (uVar4 == 3) {
          uVar3 = 0x100;
        }
        else if ((int)uVar4 < 4) {
          uVar3 = 0;
          if (uVar4 != 1) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
        else {
          if (uVar4 == 5) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
          uVar3 = 0x300;
          if (uVar4 != 7) {
            uVar2 = SR_SV_OBJ_514();
            return uVar2;
          }
        }
code_r0x80090364:
        uVar4 = (uint)*(ushort *)(unaff_s0 + 0xd);
        if (0x7f < uVar4) {
          uVar4 = 0x7f;
        }
        *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) =
             *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + unaff_s4 * 0x10 + 10) & 0x3f |
             (ushort)((uVar4 | uVar3) << 6);
      }
      if (unaff_s2 != 0) goto SR_SV_OBJ_574;
    } while ((unaff_s1 & 0x4000) == 0);
    param_3 = 0;
    if ((unaff_s1 & 0x400) != 0) {
SR_SV_OBJ_574:
      if (unaff_s0[0xb] == 3) {
        param_3 = 0;
      }
      else {
        param_3 = 0;
        if (unaff_s0[0xb] == 7) {
          uVar2 = SR_SV_OBJ_598();
          return uVar2;
        }
      }
    }
  } while( true );
}



void SR_SV_OBJ_608(void)

{
  return;
}



uint _spu_2pitch(int param_1,uint param_2)

{
  uint uVar1;
  int iVar2;
  int iVar3;
  int local_8;
  
  uVar1 = 0x103b;
  local_8 = param_1 * 0x103b;
  iVar3 = param_1 << 0xc;
  iVar2 = 0;
  if (param_2 >> 5 != 0) {
    local_8 = param_1 * 0x103b;
    do {
      iVar3 = local_8;
      uVar1 = uVar1 * 0x103b >> 0xc;
      local_8 = param_1 * uVar1;
      iVar2 = iVar2 + 1;
    } while (iVar2 < (int)(param_2 >> 5));
  }
  return iVar3 + ((uint)(local_8 - iVar3) >> 5) * (param_2 & 0x1f) >> 0xc;
}



uint _spu_note2pitch(uint param_1,uint param_2,uint param_3,uint param_4)

{
  uint uVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  uint uVar5;
  int local_8;
  
  iVar4 = ((param_3 & 0xffff) * 0x80 + (param_4 & 0xffff)) -
          ((param_1 & 0xffff) * 0x80 + (param_2 & 0xffff));
  iVar3 = iVar4;
  if (iVar4 < 0) {
    iVar3 = -iVar4;
  }
  uVar2 = iVar3 / 0x600;
  uVar1 = iVar3 % 0x600;
  if (-1 < iVar4) {
    uVar1 = S_N2P_OBJ_11C();
    return uVar1;
  }
  if (uVar1 != 0) {
    uVar2 = uVar2 + 1;
    uVar1 = 0x600 - uVar1;
  }
  uVar5 = 0x1000 >> (uVar2 & 0x1f) & 0xffff;
  uVar2 = 0x103b;
  local_8 = uVar5 * 0x103b;
  iVar4 = uVar5 << 0xc;
  iVar3 = 0;
  if ((int)uVar1 < 0) {
    uVar1 = -uVar1;
  }
  if (uVar1 >> 5 != 0) {
    local_8 = uVar5 * 0x103b;
    do {
      iVar4 = local_8;
      uVar2 = uVar2 * 0x103b >> 0xc;
      local_8 = uVar5 * uVar2;
      iVar3 = iVar3 + 1;
    } while (iVar3 < (int)(uVar1 >> 5));
  }
  uVar2 = iVar4 + ((uint)(local_8 - iVar4) >> 5) * (uVar1 & 0x1f) >> 0xc;
  uVar1 = uVar2 & 0xffff;
  if (0x3fff < uVar2) {
    uVar1 = 0x3fff;
  }
  return uVar1;
}



uint S_N2P_OBJ_11C(void)

{
  uint in_v0;
  uint in_v1;
  uint uVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  int local_res8;
  
  uVar3 = in_v0 & 0xffff;
  uVar1 = 0x103b;
  local_res8 = uVar3 * 0x103b;
  iVar4 = uVar3 << 0xc;
  iVar2 = 0;
  if ((int)in_v1 < 0) {
    in_v1 = -in_v1;
  }
  if (in_v1 >> 5 != 0) {
    local_res8 = uVar3 * 0x103b;
    do {
      iVar4 = local_res8;
      uVar1 = uVar1 * 0x103b >> 0xc;
      local_res8 = uVar3 * uVar1;
      iVar2 = iVar2 + 1;
    } while (iVar2 < (int)(in_v1 >> 5));
  }
  uVar3 = iVar4 + ((uint)(local_res8 - iVar4) >> 5) * (in_v1 & 0x1f) >> 0xc;
  uVar1 = uVar3 & 0xffff;
  if (0x3fff < uVar3) {
    uVar1 = 0x3fff;
  }
  return uVar1;
}



uint _spu_pitch2note(uint param_1,uint param_2,uint param_3)

{
  uint uVar1;
  int iVar2;
  int iVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  int iVar7;
  int iVar8;
  
  uVar6 = 0xf;
  uVar1 = (int)(~param_3 & 0xffff) >> 0xf;
  do {
    if ((uVar1 & 1) == 0) {
      uVar1 = S_N2P_OBJ_208();
      return uVar1;
    }
    uVar6 = uVar6 - 1;
    uVar1 = (int)(~param_3 & 0xffff) >> (uVar6 & 0x1f);
  } while (-1 < (int)uVar6);
  iVar7 = 0;
  uVar1 = 0x1000;
  do {
    uVar4 = uVar1 * 0x103b >> 0xc;
    iVar3 = 0;
    iVar8 = 0;
    uVar5 = uVar4 - uVar1 >> 5;
    uVar6 = uVar5;
    do {
      if ((uVar1 + iVar8 >> 0xc <= (param_3 & 0xffff)) &&
         (iVar2 = iVar7 * 0x20 + iVar3, (param_3 & 0xffff) < uVar1 + uVar6 >> 0xc))
      goto S_N2P_OBJ_2B0;
      uVar6 = uVar6 + uVar5;
      iVar3 = iVar3 + 1;
      iVar8 = iVar8 + uVar5;
    } while (iVar3 < 0x20);
    iVar7 = iVar7 + 1;
    uVar1 = uVar4;
  } while (iVar7 < 0x30);
  iVar2 = 0x600;
S_N2P_OBJ_2B0:
  iVar7 = iVar2;
  if (iVar2 < 0) {
    iVar7 = iVar2 + 0x7f;
  }
  return ((param_1 & 0xffff) + (iVar7 >> 7) + -0x90) * 0x100 |
         (param_2 & 0xffff) + iVar2 + (iVar7 >> 7) * -0x80;
}



uint S_N2P_OBJ_208(uint param_1,uint param_2)

{
  int iVar1;
  uint in_v1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  uint in_t8;
  int iVar9;
  
  iVar8 = 1 << (in_v1 & 0x1f);
  uVar4 = 0x1000;
  iVar6 = 0;
  iVar9 = iVar8 * 0x1000;
  do {
    uVar4 = uVar4 * 0x103b >> 0xc;
    iVar2 = 0;
    iVar7 = 0;
    uVar5 = iVar8 * uVar4 - iVar9 >> 5;
    uVar3 = uVar5;
    do {
      if (((uint)(iVar9 + iVar7) >> 0xc <= (param_1 & 0xffff)) &&
         (iVar1 = iVar6 * 0x20 + iVar2, (param_1 & 0xffff) < iVar9 + uVar3 >> 0xc))
      goto S_N2P_OBJ_2B0;
      uVar3 = uVar3 + uVar5;
      iVar2 = iVar2 + 1;
      iVar7 = iVar7 + uVar5;
    } while (iVar2 < 0x20);
    iVar6 = iVar6 + 1;
    iVar9 = iVar8 * uVar4;
  } while (iVar6 < 0x30);
  iVar1 = 0x600;
S_N2P_OBJ_2B0:
  iVar6 = iVar1;
  if (iVar1 < 0) {
    iVar6 = iVar1 + 0x7f;
  }
  return ((in_t8 & 0xffff) + (iVar6 >> 7) + (int)(&DAT_fffffff4 + in_v1) * 0xc) * 0x100 |
         (param_2 & 0xffff) + iVar1 + (iVar6 >> 7) * -0x80;
}



void SpuSetVoiceVolume(int vNum,short volL,short volR)

{
  ushort *puVar1;
  
  puVar1 = (ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + vNum * 0x10);
  *puVar1 = volL & 0x7fff;
  puVar1[1] = volR & 0x7fff;
  _spu_Fw1ts();
  return;
}



void SpuSetVoicePitch(int vNum,ushort pitch)

{
  *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + vNum * 0x10 + 4) = pitch;
  _spu_Fw1ts();
  return;
}



void SpuGetVoicePitch(int vNum,ushort *pitch)

{
  *pitch = *(ushort *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + vNum * 0x10 + 4);
  return;
}



// Possible S_SCCV.OBJ/SpuSetCommonCDVolume

void FUN_80090810(undefined2 param_1,undefined2 param_2)

{
  undefined *puVar1;
  
  puVar1 = PTR_VOICE_00_LEFT_RIGHT_800a5650;
  *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_800a5650 + 0x1b0) = param_1;
  *(undefined2 *)(puVar1 + 0x1b2) = param_2;
  return;
}
