// Part 0
// WARNING: Instruction at (ram,0x8001004c) overlaps instruction at (ram,0x80010048)
// 

void FUN_80010000(undefined4 *param_1,int param_2,undefined param_3)

{
  undefined4 uVar1;
  
  uVar1 = CONCAT22(CONCAT11(param_3,param_3),CONCAT11(param_3,param_3));
  for (param_2 = param_2 + -0x10; -1 < param_2; param_2 = param_2 + -0x10) {
    *param_1 = uVar1;
    param_1[1] = uVar1;
    param_1[2] = uVar1;
    param_1[3] = uVar1;
    param_1 = param_1 + 4;
  }
  param_2 = param_2 + 0x10;
  *(undefined *)param_1 = param_3;
  if (param_2 != 0) {
    while( true ) {
      param_1 = (undefined4 *)((int)param_1 + 1);
      param_2 = param_2 + -1;
      if (param_2 == 0) break;
      *(undefined *)param_1 = param_3;
    }
  }
  return;
}



undefined4 FUN_80010068(undefined4 param_1,int *param_2,short param_3)

{
  undefined *puVar1;
  undefined uVar2;
  undefined uVar3;
  undefined uVar4;
  undefined uVar5;
  undefined uVar6;
  undefined uVar7;
  undefined uVar8;
  undefined uVar9;
  ushort uVar10;
  int iVar11;
  undefined *puVar12;
  undefined *puVar13;
  undefined *puVar14;
  uint uVar15;
  int iVar16;
  ushort *puVar17;
  int iVar18;
  undefined4 unaff_s0;
  undefined4 unaff_s1;
  undefined4 unaff_s2;
  undefined4 unaff_s3;
  
  iVar16 = *param_2;
  puVar17 = (ushort *)param_2[3];
  puVar12 = (undefined *)param_2[4];
  puVar13 = (undefined *)param_2[2];
  iVar18 = param_2[1];
  puVar14 = puVar13;
  DAT_1f800004 = unaff_s0;
  DAT_1f800008 = unaff_s1;
  DAT_1f80000c = unaff_s2;
  DAT_1f800010 = unaff_s3;
  if (*(short *)(param_2 + 5) == 0) {
    for (; iVar16 != 0; iVar16 = iVar16 + -1) {
      uVar10 = *puVar17;
      uVar15 = uVar10 & 0xff;
      if ((uVar10 & 0x8000) != 0) {
        param_3 = param_3 + -1;
        if (param_3 == -1) goto LAB_800102e4;
        puVar13 = puVar14 + iVar18;
        puVar14 = puVar13;
      }
      puVar13 = puVar13 + ((uVar10 & 0x7f00) >> 8);
      if ((uVar15 - 1 & 0xffff) != 0xffff) {
        for (iVar11 = uVar15 - 9; -1 < iVar11; iVar11 = iVar11 + -8) {
          uVar2 = *puVar12;
          uVar3 = puVar12[1];
          uVar4 = puVar12[2];
          uVar5 = puVar12[3];
          uVar6 = puVar12[4];
          uVar7 = puVar12[5];
          uVar8 = puVar12[6];
          uVar9 = puVar12[7];
          puVar12 = puVar12 + 8;
          *puVar13 = uVar2;
          puVar13[1] = uVar3;
          puVar13[2] = uVar4;
          puVar13[3] = uVar5;
          puVar13[4] = uVar6;
          puVar13[5] = uVar7;
          puVar13[6] = uVar8;
          puVar13[7] = uVar9;
          puVar13 = puVar13 + 8;
        }
        for (iVar11 = iVar11 + 4; -1 < iVar11; iVar11 = iVar11 + -4) {
          uVar2 = *puVar12;
          uVar3 = puVar12[1];
          uVar4 = puVar12[2];
          uVar5 = puVar12[3];
          puVar12 = puVar12 + 4;
          *puVar13 = uVar2;
          puVar13[1] = uVar3;
          puVar13[2] = uVar4;
          puVar13[3] = uVar5;
          puVar13 = puVar13 + 4;
        }
        iVar11 = iVar11 + 4;
        do {
          uVar2 = *puVar12;
          puVar12 = puVar12 + 1;
          iVar11 = iVar11 + -1;
          *puVar13 = uVar2;
          puVar13 = puVar13 + 1;
        } while (-1 < iVar11);
      }
      puVar17 = puVar17 + 1;
    }
  }
  else {
    for (; iVar16 != 0; iVar16 = iVar16 + -1) {
      uVar10 = *puVar17;
      uVar15 = uVar10 & 0xff;
      if ((uVar10 & 0x8000) != 0) {
        param_3 = param_3 + -1;
        if (param_3 == -1) {
LAB_800102e4:
          if (iVar16 != 0) {
            *param_2 = iVar16;
            param_2[3] = (int)puVar17;
            param_2[4] = (int)puVar12;
            param_2[2] = (int)puVar14;
            return 0;
          }
          return 1;
        }
        puVar13 = puVar14 + iVar18;
        puVar14 = puVar13;
      }
      puVar13 = puVar13 + -((uVar10 & 0x7f00) >> 8);
      if ((uVar15 - 1 & 0xffff) != 0xffff) {
        for (iVar11 = uVar15 - 9; -1 < iVar11; iVar11 = iVar11 + -8) {
          uVar2 = *puVar12;
          uVar3 = puVar12[1];
          uVar4 = puVar12[2];
          uVar5 = puVar12[3];
          uVar6 = puVar12[4];
          uVar7 = puVar12[5];
          uVar8 = puVar12[6];
          puVar1 = puVar12 + 7;
          puVar12 = puVar12 + 8;
          puVar13[-7] = *puVar1;
          puVar13[-6] = uVar8;
          puVar13[-5] = uVar7;
          puVar13[-4] = uVar6;
          puVar13[-3] = uVar5;
          puVar13[-2] = uVar4;
          puVar13[-1] = uVar3;
          *puVar13 = uVar2;
          puVar13 = puVar13 + -8;
        }
        for (iVar11 = iVar11 + 4; -1 < iVar11; iVar11 = iVar11 + -4) {
          uVar2 = *puVar12;
          uVar3 = puVar12[1];
          uVar4 = puVar12[2];
          puVar1 = puVar12 + 3;
          puVar12 = puVar12 + 4;
          puVar13[-3] = *puVar1;
          puVar13[-2] = uVar4;
          puVar13[-1] = uVar3;
          *puVar13 = uVar2;
          puVar13 = puVar13 + -4;
        }
        iVar11 = iVar11 + 4;
        do {
          uVar2 = *puVar12;
          puVar12 = puVar12 + 1;
          iVar11 = iVar11 + -1;
          *puVar13 = uVar2;
          puVar13 = puVar13 + -1;
        } while (-1 < iVar11);
      }
      puVar17 = puVar17 + 1;
    }
  }
  return 1;
}



undefined vsync_callback_func(void)

{
  return VSYNC_CALLBACK_RETURN_VALUE;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked
// Possible S_I.OBJ/SpuInit

void SsUtReverbOff(void)

{
  FUN_800889b4(0);
  return;
}



void setup_graphics(graphics *gfx)

{
  int vsync_callback;
  uint uVar1;
  u_long *ot;
  short sVar1;
  short sVar2;
  
  vsync_callback = vsync_callback_func();
  uVar1 = vsync_callback + 0xfU & 0xfffffff0;
  gfx[0x162].display_env.disp.x = (short)uVar1;
  gfx[0x162].display_env.disp.y = (short)(uVar1 >> 0x10);
  ResetGraph(0);
  SetGraphDebug(0);
  VSyncCallback((f *)0x800131fc);
  gfx->width = 320;
  gfx->height = 240;
  SetDefDrawEnv(&gfx->draw_env,0,0,(int)gfx->width,uVar3);
  SetDefDrawEnv((DRAWENV *)&gfx[0xab].draw_env.isbg,0,256,(int)gfx->width,(int)gfx->height);
  SetDefDispEnv(&gfx->display_env,0,256,(int)gfx->width,(int)gfx->height);
  SetDefDispEnv((DISPENV *)(gfx + 0xac),0,0,(int)gfx->width,(int)gfx->height);
  ot = gfx->field4_0x74;
  sVar1 = gfx->height;
  sVar2 = gfx->height;
  (gfx->display_env).screen.x = 0;
  gfx[0xac].draw_env.clip.w = 0;
  (gfx->display_env).screen.y = 0;
  gfx[0xac].draw_env.clip.h = 0;
  (gfx->display_env).screen.w = 0;
  gfx[0xac].draw_env.ofs[0] = 0;
  (gfx->draw_env).isbg = uVar6;
  (gfx->draw_env).r0 = red;
  (gfx->draw_env).g0 = green;
  (gfx->draw_env).b0 = blue;
  *(undefined *)(gfx[0xab].draw_env.dr_env.code + 4) = 1;
  *(undefined *)((int)gfx[0xab].draw_env.dr_env.code + 0x11) = 0;
  *(undefined *)((int)gfx[0xab].draw_env.dr_env.code + 0x12) = 0;
  *(undefined *)((int)gfx[0xab].draw_env.dr_env.code + 0x13) = 0;
  *(undefined *)(gfx[0x156].draw_env.dr_env.code + 5) = 0;
  gfx[0x156].draw_env.dr_env.code[4] = (u_long)&gfx->draw_env;
  (gfx->display_env).screen.h = sVar1;
  gfx[0xac].draw_env.ofs[1] = sVar2;
  ClearOTag(ot,1);
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x1014) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x1658) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x25fc) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x2dd0) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x3734) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x4228) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x503c) = 0;
  *(undefined2 *)((int)gfx[0x156].draw_env.dr_env.code + 0x16) = 0;
  *(undefined *)((int)&gfx[0x15a].display_env.screen.w + 1) = 0x10;
  FUN_80013b18(gfx,0,1);
  gfx[0x15b].display_env.disp.x = 0;
  gfx[0x15b].display_env.disp.y = 0;
  draw_video(gfx);
  draw_video(gfx);
  return;
}



void setup_ordering_tables(int ordering_tables)

{
  // disables vsync callback
  VSYNC_CALLBACK_RETURN_VALUE = 0;
  WAITING_FOR_VSYNC = true;
  ClearOTag(*(u_long **)(ordering_tables + 0x74),1);
  ClearOTag(*(u_long **)(ordering_tables + 0x50b4),1);
  return;
}



void draw_print_stream(void)

{
  FntFlush(-1);
  VSYNC_CALLBACK_RETURN_VALUE = 1;
  WAITING_FOR_VSYNC = false;
  return;
}



void vsync_if_required(void)

{
  if (!WAITING_FOR_VSYNC) {
    VSync(0);
  }
  return;
}



void draw_video(graphics *gfx)

{
  int iVar1;
  u_long uVar2;
  uint uVar3;
  
  WAITING_FOR_VSYNC = true;
  iVar1 = VSync(-1);
  PutDispEnv((DISPENV *)(gfx[0x156].draw_env.dr_env.code[4] + 0x5c));
  PutDrawEnv((DRAWENV *)gfx[0x156].draw_env.dr_env.code[4]);
  DrawOTag(*(u_long **)(gfx[0x156].draw_env.dr_env.code[4] + 0x70));
  uVar3 = *(byte *)(gfx[0x156].draw_env.dr_env.code + 5) + 1 & 1;
  uVar2 = (int)gfx + uVar3 * 0x5040 + 4;
  *(char *)(gfx[0x156].draw_env.dr_env.code + 5) = (char)uVar3;
  gfx[0x156].draw_env.dr_env.code[4] = uVar2;
  ClearOTag(*(u_long **)(uVar2 + 0x70),1);
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x1014) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x1658) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x25fc) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x2dd0) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x3734) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x4228) = 0;
  *(undefined2 *)(gfx[0x156].draw_env.dr_env.code[4] + 0x503c) = 0;
  gfx[0x15b].display_env.disp.x = (short)iVar1;
  gfx[0x15b].display_env.disp.y = (short)((uint)iVar1 >> 0x10);
  return;
}



undefined4 FUN_800138ec(short *param_1,short *param_2,char param_3,short param_4,short param_5)

{
  char cVar1;
  ushort uVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  short local_28;
  short local_26;
  
  if (param_3 == '\0') {
    uVar2 = (short)(param_4 + 1 >> 2) + 1;
  }
  else if (param_3 == '\x01') {
    uVar2 = (short)(param_4 + 1 >> 1) + 1;
  }
  else {
    uVar2 = param_4 + 1;
  }
  param_2[2] = uVar2 & 0xfffe;
  iVar4 = param_2[2] * 2 + 0xf;
  param_2[3] = param_5;
  if (iVar4 < 0) {
    iVar4 = param_2[2] * 2 + 0x1e;
  }
  uVar3 = (int)param_5 + 0xf;
  if ((int)uVar3 < 0) {
    uVar3 = (int)param_5 + 0x1e;
  }
  uVar6 = iVar4 >> 4 & 0xff;
  uVar5 = uVar3 >> 4 & 0xff;
  cVar1 = FUN_80014a98(param_1,&local_28,uVar6,uVar5);
  if ((cVar1 == '\0') &&
     (cVar1 = FUN_80014cf4(param_1,&local_28,uVar6,uVar5,param_3), cVar1 == '\0')) {
    uVar5 = FUN_800150c0(param_1);
    uVar7 = (iVar4 >> 4) + 1;
    uVar6 = uVar7 & 0xff;
    cVar1 = '\0';
    if (uVar6 <= (uVar5 & 0xff)) {
      do {
        cVar1 = FUN_80014a98(param_1,&local_28,uVar6,uVar3 >> 4 & 0xff);
        uVar7 = uVar7 + 1;
        uVar6 = uVar7 & 0xff;
        if ((uVar5 & 0xff) < uVar6) break;
      } while (cVar1 == '\0');
    }
    if (cVar1 == '\0') {
      return 0;
    }
  }
  *param_2 = *param_1 + local_28 * 8;
  param_2[1] = local_26 * 0x10 + 0x100;
  return 1;
}



void FUN_80013aac(short *param_1,undefined4 param_2,undefined4 param_3)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  short local_res4;
  short sStackX_6;
  short sStackX_a;
  
  sStackX_a = (short)((uint)param_3 >> 0x10);
  uVar2 = (int)sStackX_a + 0xf;
  if ((int)uVar2 < 0) {
    uVar2 = (int)sStackX_a + 0x1e;
  }
  local_res4 = (short)param_2;
  uVar1 = (int)local_res4 - (int)*param_1 >> 3;
  sStackX_6 = (short)((uint)param_2 >> 0x10);
  uVar3 = uVar1 & 0xffff;
  FUN_80015130(param_1,uVar3 | (sStackX_6 + -0x100 >> 4) << 0x10,uVar2 >> 4 & 0xff,uVar3,
               (short)uVar1);
  return;
}



void FUN_80013b18(graphics *gfx,ushort param_2,byte param_3)

{
  u_char *puVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint *puVar5;
  uint uVar6;
  int iVar7;
  RECT *pRVar8;
  byte bVar9;
  byte bVar10;
  uint uVar11;
  short sVar12;
  short sVar13;
  ushort uVar14;
  
  uVar11 = 0;
  sVar12 = 0xf0;
  sVar13 = (param_2 & 0xff) + (ushort)param_3;
  *(short *)(gfx[0x15b].draw_env.dr_env.code + 0xd) = sVar13 * 0x20;
  *(short *)((int)gfx[0x15b].draw_env.dr_env.code + 0x36) = sVar13 * 0x10;
  *(undefined2 *)(gfx[0x15b].draw_env.dr_env.code + 0xe) = 0;
  *(undefined2 *)((int)gfx[0x15b].draw_env.dr_env.code + 0x3a) = 0;
  for (uVar14 = 0; bVar9 = 0, (uVar14 & 0xff) < (param_2 & 0xff); uVar14 = uVar14 + 1) {
    do {
      uVar6 = uVar11 & 0xff;
      pRVar8 = &((DISPENV *)(&gfx[0x15a].draw_env + 1))->screen + uVar6 + 1;
      uVar2 = (&DAT_8009ae9c)[(uint)bVar9 * 2];
      uVar3 = (&DAT_8009aea0)[(uint)bVar9 * 2];
      puVar1 = &((DISPENV *)(&gfx[0x15a].draw_env + 1))->pad1 + uVar6 * 8;
      uVar4 = (uint)puVar1 & 3;
      *(uint *)(puVar1 + -uVar4) =
           *(uint *)(puVar1 + -uVar4) & -1 << (uVar4 + 1) * 8 | uVar2 >> (3 - uVar4) * 8;
      uVar4 = (uint)pRVar8 & 3;
      puVar5 = (uint *)((int)pRVar8 - uVar4);
      *puVar5 = *puVar5 & 0xffffffffU >> (4 - uVar4) * 8 | uVar2 << uVar4 * 8;
      uVar2 = (int)((DISPENV *)(&gfx[0x15a].draw_env + 1) + 1) + uVar6 * 8 + 3;
      uVar4 = uVar2 & 3;
      puVar5 = (uint *)(uVar2 - uVar4);
      *puVar5 = *puVar5 & -1 << (uVar4 + 1) * 8 | uVar3 >> (3 - uVar4) * 8;
      uVar2 = (uint)(u_long **)((int)((DISPENV *)(&gfx[0x15a].draw_env + 1) + 1) + uVar6 * 2 * 4) &
              3;
      puVar5 = (uint *)((int)(u_long **)
                             ((int)((DISPENV *)(&gfx[0x15a].draw_env + 1) + 1) + uVar6 * 2 * 4) -
                       uVar2);
      *puVar5 = *puVar5 & 0xffffffffU >> (4 - uVar2) * 8 | uVar3 << uVar2 * 8;
      *(short *)((int)((DISPENV *)(&gfx[0x15a].draw_env + 1) + 1) + uVar6 * 8 + 2) = sVar12;
      bVar9 = bVar9 + 1;
      uVar11 = uVar11 + 1;
    } while (bVar9 < 3);
    sVar12 = sVar12 + -0x10;
  }
  sVar13 = 0x1f0;
  for (bVar9 = 0; bVar10 = 0, bVar9 < param_3; bVar9 = bVar9 + 1) {
    do {
      uVar6 = uVar11 & 0xff;
      pRVar8 = &((DISPENV *)(&gfx[0x15a].draw_env + 1))->screen + uVar6 + 1;
      uVar2 = (&DAT_8009ae9c)[(uint)bVar10 * 2];
      uVar3 = (&DAT_8009aea0)[(uint)bVar10 * 2];
      puVar1 = &((DISPENV *)(&gfx[0x15a].draw_env + 1))->pad1 + uVar6 * 8;
      uVar4 = (uint)puVar1 & 3;
      *(uint *)(puVar1 + -uVar4) =
           *(uint *)(puVar1 + -uVar4) & -1 << (uVar4 + 1) * 8 | uVar2 >> (3 - uVar4) * 8;
      uVar4 = (uint)pRVar8 & 3;
      puVar5 = (uint *)((int)pRVar8 - uVar4);
      *puVar5 = *puVar5 & 0xffffffffU >> (4 - uVar4) * 8 | uVar2 << uVar4 * 8;
      uVar2 = (int)((DISPENV *)(&gfx[0x15a].draw_env + 1) + 1) + uVar6 * 8 + 3;
      uVar4 = uVar2 & 3;
      puVar5 = (uint *)(uVar2 - uVar4);
      *puVar5 = *puVar5 & -1 << (uVar4 + 1) * 8 | uVar3 >> (3 - uVar4) * 8;
      uVar2 = (uint)(u_long **)((int)((DISPENV *)(&gfx[0x15a].draw_env + 1) + 1) + uVar6 * 2 * 4) &
              3;
      puVar5 = (uint *)((int)(u_long **)
                             ((int)((DISPENV *)(&gfx[0x15a].draw_env + 1) + 1) + uVar6 * 2 * 4) -
                       uVar2);
      *puVar5 = *puVar5 & 0xffffffffU >> (4 - uVar2) * 8 | uVar3 << uVar2 * 8;
      *(short *)((int)((DISPENV *)(&gfx[0x15a].draw_env + 1) + 1) + uVar6 * 8 + 2) = sVar13;
      bVar10 = bVar10 + 1;
      uVar11 = uVar11 + 1;
    } while (bVar10 < 3);
    sVar13 = sVar13 + -0x10;
  }
  uVar11 = uVar11 & 0xff;
  if (uVar11 < 0xc) {
    do {
      iVar7 = uVar11 << 0x10;
      uVar11 = uVar11 + 1;
      iVar7 = iVar7 >> 0xd;
      *(u_char *)((int)(&((DISPENV *)(&gfx[0x15a].draw_env + 1))->screen + 1) + iVar7) = '\0';
      *(undefined2 *)((int)(&((DISPENV *)(&gfx[0x15a].draw_env + 1))->screen + 1) + iVar7 + 2) = 0;
    } while ((int)(uVar11 * 0x10000) >> 0x10 < 0xc);
  }
  *(byte *)((int)&gfx[0x15a].display_env.screen.w + 1) = '\x10' - param_3;
  FUN_800149e4(gfx);
  return;
}



undefined4 FUN_80013d0c(int param_1,uint param_2,byte param_3)

{
  uint uVar1;
  uint uVar2;
  uint *puVar3;
  char cVar4;
  short sVar5;
  uint uVar6;
  short sVar7;
  short sVar8;
  uint uVar9;
  undefined4 uVar10;
  undefined2 *puVar11;
  byte *pbVar12;
  undefined2 local_30;
  ushort local_2e;
  
  pbVar12 = (byte *)(param_1 + 0xa2a0);
  uVar9 = param_1 + 0xa2a4;
  for (sVar7 = 0; sVar7 < 0xc; sVar7 = sVar7 + 1) {
    if ((((*pbVar12 & 2) != 0) && ((*pbVar12 & 1) == param_3)) &&
       (uVar6 = 1, *(short *)(uVar9 - 2) != -1)) {
      sVar8 = 0;
      do {
        sVar5 = sVar8 + 1;
        if ((*(ushort *)(uVar9 - 2) & uVar6) == 0) {
          uVar6 = *(ushort *)(uVar9 - 2) | uVar6;
          *(short *)(uVar9 - 2) = (short)uVar6;
          uVar1 = uVar9 + 3 & 3;
          uVar2 = uVar9 & 3;
          uVar6 = (*(int *)((uVar9 + 3) - uVar1) << (3 - uVar1) * 8 |
                  uVar6 & 0xffffffffU >> (uVar1 + 1) * 8) & -1 << (4 - uVar2) * 8 |
                  *(uint *)(uVar9 - uVar2) >> uVar2 * 8;
          uVar9 = param_2 + 3 & 3;
          puVar3 = (uint *)((param_2 + 3) - uVar9);
          *puVar3 = *puVar3 & -1 << (uVar9 + 1) * 8 | uVar6 >> (3 - uVar9) * 8;
          uVar9 = param_2 & 3;
          *(uint *)(param_2 - uVar9) =
               *(uint *)(param_2 - uVar9) & 0xffffffffU >> (4 - uVar9) * 8 | uVar6 << uVar9 * 8;
          *(short *)(param_2 + 2) = *(short *)(param_2 + 2) + sVar8;
          goto joined_r0x80013de0;
        }
        uVar6 = uVar6 << 1;
        sVar8 = sVar5;
      } while (sVar5 < 0x10);
    }
    uVar9 = uVar9 + 8;
    pbVar12 = pbVar12 + 8;
  }
  pbVar12 = (byte *)(param_1 + 0xa2a0);
  sVar7 = 0;
  puVar11 = (undefined2 *)(param_1 + 0xa2a4);
  do {
    if (0xb < sVar7) {
      return 0;
    }
    if ((*pbVar12 & 2) == 0) {
      uVar10 = 0x10;
      if (param_3 == 1) {
        uVar10 = 0x100;
      }
      cVar4 = FUN_800138ec(param_1,&local_30,2,uVar10,0x10);
      if (cVar4 != '\0') {
        *pbVar12 = param_3 | 2;
        puVar11[-1] = 1;
        *puVar11 = local_30;
        puVar11[1] = local_2e;
        uVar9 = (int)puVar11 + 3U & 3;
        uVar6 = (uint)puVar11 & 3;
        uVar6 = (*(int *)(((int)puVar11 + 3U) - uVar9) << (3 - uVar9) * 8 |
                (uint)local_2e & 0xffffffffU >> (uVar9 + 1) * 8) & -1 << (4 - uVar6) * 8 |
                *(uint *)((int)puVar11 - uVar6) >> uVar6 * 8;
        uVar9 = param_2 + 3 & 3;
        puVar3 = (uint *)((param_2 + 3) - uVar9);
        *puVar3 = *puVar3 & -1 << (uVar9 + 1) * 8 | uVar6 >> (3 - uVar9) * 8;
        uVar9 = param_2 & 3;
        *(uint *)(param_2 - uVar9) =
             *(uint *)(param_2 - uVar9) & 0xffffffffU >> (4 - uVar9) * 8 | uVar6 << uVar9 * 8;
joined_r0x80013de0:
        if (param_3 == 1) {
          *(short *)(param_1 + 0xa304) = *(short *)(param_1 + 0xa304) + 1;
        }
        else {
          *(short *)(param_1 + 0xa306) = *(short *)(param_1 + 0xa306) + 1;
        }
        return 1;
      }
    }
    puVar11 = puVar11 + 4;
    pbVar12 = pbVar12 + 8;
    sVar7 = sVar7 + 1;
  } while( true );
}



// WARNING: Removing unreachable block (ram,0x800140c0)

void FUN_80013f4c(short *param_1,short *param_2)

{
  undefined *puVar1;
  short sVar2;
  uint uVar3;
  undefined2 uVar4;
  int iVar5;
  short *psVar6;
  short sVar7;
  short *psVar8;
  uint local_30;
  uint local_2c;
  undefined local_24 [4];
  undefined auStack_20 [8];
  undefined2 local_18;
  undefined2 local_16;
  
  psVar8 = param_1 + 0x5150;
  sVar7 = 0;
  psVar6 = param_1 + 0x5153;
  do {
    if (0xb < sVar7) {
      return;
    }
    if (((*(byte *)psVar8 & 2) != 0) && (psVar6[-1] == *param_2)) {
      if ((int)*psVar6 == (int)(short)(param_2[1] & 0xfff0)) {
        uVar3 = 1 << ((int)param_2[1] - (int)*psVar6 & 0x1fU);
        if (((ushort)psVar6[-2] & uVar3) != 0) {
          if ((*(byte *)psVar8 & 1) == 0) {
            param_1[0x5183] = param_1[0x5183] + -1;
          }
          else {
            param_1[0x5182] = param_1[0x5182] + -1;
          }
        }
        uVar3 = (uint)(ushort)psVar6[-2] & ~uVar3;
        psVar6[-2] = (short)uVar3;
        if ((uVar3 == 0) && ((*(byte *)psVar8 & 4) == 0)) {
          uVar4 = 0x10;
          if ((*(byte *)psVar8 & 1) != 0) {
            uVar4 = 0x100;
          }
          sVar7 = psVar6[-1];
          sVar2 = *psVar6;
          local_2c = CONCAT22(0x10,uVar4);
          local_30 = CONCAT22(sVar2,sVar7);
          puVar1 = local_24 + 3;
          uVar3 = (uint)puVar1 & 3;
          *(uint *)(puVar1 + -uVar3) =
               *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | local_30 >> (3 - uVar3) * 8;
          local_24 = (undefined  [4])local_30;
          puVar1 = auStack_20 + 3;
          uVar3 = (uint)puVar1 & 3;
          *(uint *)(puVar1 + -uVar3) =
               *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | local_2c >> (3 - uVar3) * 8;
          auStack_20._0_4_ = local_2c;
          uVar3 = (int)sVar7 - (int)*param_1 >> 3;
          iVar5 = sVar2 + -0x100 >> 4;
          local_16 = (undefined2)iVar5;
          local_18 = (undefined2)uVar3;
          FUN_80015130(param_1,uVar3 & 0xffff | iVar5 << 0x10,1);
          *(byte *)psVar8 = 0;
          return;
        }
      }
    }
    psVar6 = psVar6 + 4;
    psVar8 = psVar8 + 4;
    sVar7 = sVar7 + 1;
  } while( true );
}



int FUN_80014274(short *param_1,short *param_2,char param_3)

{
  short sVar1;
  bool bVar2;
  uint uVar3;
  short sVar4;
  uint uVar5;
  ushort uVar6;
  uint uVar7;
  
  sVar1 = param_1[0x5045];
  uVar3 = (int)sVar1 / 0xb0;
  uVar7 = (int)sVar1 % 0xb0;
  uVar6 = (ushort)uVar7;
  if (param_3 == '\x01') {
    bVar2 = (uVar7 & 0xff) < 0xaf;
  }
  else {
    uVar5 = uVar3 & 0xff;
    if (param_3 != '\x02') goto LAB_8001431c;
    bVar2 = (uVar7 & 0xff) < 0xad;
  }
  uVar5 = uVar3 & 0xff;
  if (!bVar2) {
    param_1[0x5045] = sVar1 - ((uVar6 & 0xff) - 0xb0);
    uVar6 = 0;
    uVar5 = uVar3 + 1 & 0xff;
  }
LAB_8001431c:
  sVar4 = *param_1;
  param_2[1] = (short)(uVar5 << 4);
  *param_2 = sVar4 + (uVar6 & 0xff) * 4;
  if (param_3 == '\0') {
    sVar4 = param_1[0x5045] + 1;
  }
  else if (param_3 == '\x01') {
    sVar4 = param_1[0x5045] + 2;
  }
  else {
    sVar4 = param_1[0x5045] + 4;
  }
  param_1[0x5045] = sVar4;
  return (int)sVar1;
}



void FUN_800143a0(int param_1,undefined4 param_2,uint param_3)

{
  *(undefined4 *)(param_1 + 0xa640) = param_2;
  if (param_3 >> 4 < 0x10000) {
    *(uint *)(param_1 + 0xa644) = param_3;
  }
  else {
    *(undefined4 *)(param_1 + 0xa644) = 0xffff0;
  }
  return;
}



int FUN_800143ec(int param_1,int param_2,int param_3,char param_4)

{
  ushort uVar1;
  undefined2 uVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  uint uVar6;
  uint uVar7;
  
  uVar1 = *(ushort *)(param_1 + 0xa648);
  uVar4 = param_2 * param_3 + 0x13U >> 4;
  uVar7 = 0xffff;
  while( true ) {
    uVar6 = (uint)uVar1;
    if (uVar6 == 0xffff) {
      return 0;
    }
    iVar5 = param_1 + uVar6 * 8;
    if (uVar4 <= *(ushort *)(iVar5 + 0xa324)) break;
    uVar1 = *(ushort *)(iVar5 + 0xa326);
    uVar7 = uVar6;
  }
  if (param_4 == '\0') {
    **(uint **)(iVar5 + 0xa320) = uVar4;
  }
  iVar3 = *(int *)(iVar5 + 0xa320);
  *(uint *)(iVar5 + 0xa320) = iVar3 + uVar4 * 0x10;
  *(short *)(iVar5 + 0xa324) = *(short *)(iVar5 + 0xa324) - (short)uVar4;
  uVar4 = *(ushort *)(param_1 + 0xa64c) - uVar4;
  uVar2 = (undefined2)uVar4;
  *(undefined2 *)(param_1 + 0xa64c) = uVar2;
  iVar3 = iVar3 + 4;
  if ((uVar4 & 0xffff) < (uint)*(ushort *)(param_1 + 0xa64e)) {
    *(undefined2 *)(param_1 + 0xa64e) = uVar2;
  }
  if (*(short *)(iVar5 + 0xa324) != 0) {
    return iVar3;
  }
  if (uVar7 == 0xffff) {
    *(undefined2 *)(param_1 + 0xa648) = *(undefined2 *)(iVar5 + 0xa326);
  }
  else {
    *(undefined2 *)(param_1 + uVar7 * 8 + 0xa326) = *(undefined2 *)(iVar5 + 0xa326);
  }
  *(undefined2 *)(param_1 + uVar6 * 8 + 0xa326) = *(undefined2 *)(param_1 + 0xa64a);
  *(ushort *)(param_1 + 0xa64a) = uVar1;
  return iVar3;
}



void potentially_load_asset_(int param_1,int param_2,int param_3,char param_4)

{
  ushort uVar1;
  undefined4 *puVar2;
  short sVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  uint uVar7;
  uint uVar8;
  undefined4 *puVar9;
  undefined4 *header_;
  
                    // header is 17 on boot up
  header_ = (undefined4 *)(param_2 + -4);
  if (param_4 == '\0') {
    uVar4 = (uint)*(ushort *)(param_2 + -4);
  }
  else {
    uVar4 = param_3 + 0x13U >> 4;
  }
  puVar9 = header_ + (uVar4 & 0xffff) * 4;
  *header_ = 0;
  uVar1 = *(ushort *)(param_1 + 0xa648);
  uVar7 = 0xffff;
  while( true ) {
    uVar8 = (uint)uVar1;
    sVar3 = (short)uVar4;
    if (uVar8 == 0xffff) break;
    iVar6 = param_1 + uVar8 * 8;
    puVar2 = *(undefined4 **)(iVar6 + 0xa320);
    if (puVar9 < puVar2) break;
    if (header_ == puVar2 + (uint)*(ushort *)(iVar6 + 0xa324) * 4) {
      *(ushort *)(iVar6 + 0xa324) = *(ushort *)(iVar6 + 0xa324) + sVar3;
      *(short *)(param_1 + 0xa64c) = *(short *)(param_1 + 0xa64c) + sVar3;
      uVar1 = *(ushort *)(iVar6 + 0xa326);
      if (uVar1 == 0xffff) {
        return;
      }
      iVar5 = param_1 + (uint)uVar1 * 8;
      if (puVar9 != *(undefined4 **)(iVar5 + 0xa320)) {
        return;
      }
      *(short *)(iVar6 + 0xa324) = *(short *)(iVar6 + 0xa324) + *(short *)(iVar5 + 0xa324);
      *(undefined2 *)(iVar6 + 0xa326) = *(undefined2 *)(iVar5 + 0xa326);
      *(undefined2 *)(iVar5 + 0xa326) = *(undefined2 *)(param_1 + 0xa64a);
      *(ushort *)(param_1 + 0xa64a) = uVar1;
      return;
    }
    if (puVar9 == puVar2) {
      *(undefined4 **)(iVar6 + 0xa320) = header_;
      *(short *)(iVar6 + 0xa324) = *(short *)(iVar6 + 0xa324) + sVar3;
      *(short *)(param_1 + 0xa64c) = *(short *)(param_1 + 0xa64c) + sVar3;
      return;
    }
    uVar1 = *(ushort *)(iVar6 + 0xa326);
    uVar7 = uVar8;
  }
  uVar1 = *(ushort *)(param_1 + 0xa64a);
  if (uVar1 != 0xffff) {
    iVar6 = param_1 + (uint)uVar1 * 8;
    *(undefined2 *)(param_1 + 0xa64a) = *(undefined2 *)(iVar6 + 0xa326);
    *(undefined4 **)(iVar6 + 0xa320) = header_;
    *(short *)(iVar6 + 0xa324) = sVar3;
    *(short *)(param_1 + 0xa64c) = *(short *)(param_1 + 0xa64c) + sVar3;
    if (uVar7 == 0xffff) {
      *(undefined2 *)(iVar6 + 0xa326) = *(undefined2 *)(param_1 + 0xa648);
      *(ushort *)(param_1 + 0xa648) = uVar1;
    }
    else {
      param_1 = param_1 + uVar7 * 8;
      *(undefined2 *)(iVar6 + 0xa326) = *(undefined2 *)(param_1 + 0xa326);
      *(ushort *)(param_1 + 0xa326) = uVar1;
    }
  }
  return;
}



void FUN_80014850(int param_1)

{
  uint uVar1;
  undefined2 uVar2;
  ushort uVar3;
  
  uVar3 = 1;
  *(undefined2 *)(param_1 + 0xa326) = 0xffff;
  uVar2 = (undefined2)(*(uint *)(param_1 + 0xa644) >> 4);
  *(undefined2 *)(param_1 + 0xa64c) = uVar2;
  *(undefined2 *)(param_1 + 0xa648) = 0;
  *(undefined2 *)(param_1 + 0xa64a) = 1;
  *(undefined2 *)(param_1 + 0xa64e) = uVar2;
  *(undefined4 *)(param_1 + 0xa320) = *(undefined4 *)(param_1 + 0xa640);
  *(undefined2 *)(param_1 + 0xa324) = *(undefined2 *)(param_1 + 0xa64c);
  uVar1 = 1;
  do {
    uVar3 = uVar3 + 1;
    *(ushort *)(param_1 + uVar1 * 8 + 0xa326) = uVar3;
    uVar1 = (uint)uVar3;
  } while (uVar3 < 99);
  *(undefined2 *)(param_1 + 0xa63e) = 0xffff;
  return;
}



void FUN_80014964(int param_1,undefined4 param_2)

{
  ushort uVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  uint uVar5;
  
  uVar1 = *(ushort *)(param_1 + 0xa648);
  while( true ) {
    uVar5 = (uint)uVar1;
    if (uVar5 == 0xffff) break;
    iVar2 = param_1 + uVar5 * 8;
    puVar4 = *(undefined4 **)(iVar2 + 0xa320);
    puVar3 = puVar4 + (uint)*(ushort *)(iVar2 + 0xa324) * 4;
    for (; puVar4 != puVar3; puVar4 = puVar4 + 1) {
      *puVar4 = param_2;
    }
    uVar1 = *(ushort *)(param_1 + uVar5 * 8 + 0xa326);
  }
  return;
}



void FUN_800149e4(int param_1)

{
  undefined uVar1;
  int iVar2;
  uint uVar3;
  byte bVar4;
  
  bVar4 = 0;
  do {
    uVar3 = (uint)bVar4;
    bVar4 = bVar4 + 1;
    uVar1 = *(undefined *)(param_1 + 0xa29d);
    iVar2 = param_1 + uVar3 * 6;
    *(undefined *)(iVar2 + 0xa08f) = 0xfe;
    *(undefined *)(iVar2 + 0xa090) = 0xfe;
    *(undefined2 *)(iVar2 + 0xa08c) = 0;
    *(undefined *)(iVar2 + 0xa08e) = uVar1;
  } while (bVar4 < 0x58);
  *(undefined *)(param_1 + 0xa08f) = 0xff;
  *(undefined *)(param_1 + 0xa090) = 0x58;
  *(undefined2 *)(param_1 + 0xa08c) = 0;
  *(undefined *)(param_1 + 0xa29c) = 0;
  *(undefined *)(param_1 + 0xa29e) = 0x58;
  return;
}



undefined4 FUN_80014a98(int param_1,ushort *param_2,char param_3,uint param_4)

{
  byte bVar1;
  byte bVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  int iVar7;
  uint uVar8;
  byte bVar9;
  uint uVar10;
  uint uVar11;
  ushort uVar12;
  byte bVar2;
  
  uVar12 = 0;
  bVar9 = *(byte *)(param_1 + 0xa29c);
  uVar10 = param_4 & 0xff;
  do {
    uVar11 = (uint)bVar9;
    if (uVar11 == 0xff) {
      return 0;
    }
    iVar7 = param_1 + uVar11 * 6;
    if ((*(char *)(iVar7 + 0xa090) == param_3) && (uVar10 <= *(byte *)(iVar7 + 0xa08e))) {
      uVar5 = 1;
      bVar9 = 0;
      uVar8 = (uint)*(ushort *)(iVar7 + 0xa08c);
      uVar4 = 0;
      if (*(byte *)(param_1 + 0xa29d) != 0) {
        do {
          bVar9 = bVar9 + 1;
          if ((uVar5 & uVar8) == 0) {
            if (bVar9 == uVar10) break;
          }
          else {
            bVar9 = 0;
          }
          uVar4 = uVar4 + 1;
          uVar5 = uVar5 << 1;
        } while ((uVar4 & 0xff) < (uint)*(byte *)(param_1 + 0xa29d));
        if ((uVar4 & 0xff) < (uint)*(byte *)(param_1 + 0xa29d)) {
          if (uVar8 == 0) {
            *(char *)(param_1 + 0xa29e) =
                 *(char *)(param_1 + 0xa29e) - *(char *)(param_1 + uVar11 * 6 + 0xa090);
          }
          uVar4 = uVar4 - (param_4 - 1);
          uVar6 = 1 << (uVar4 & 0x1f);
          uVar5 = 0;
          if (uVar10 != 0) {
            do {
              uVar8 = uVar8 | uVar6;
              uVar5 = uVar5 + 1;
              uVar6 = uVar6 << 1;
            } while ((uVar5 & 0xff) < uVar10);
          }
          uVar10 = 1;
          bVar2 = 0;
          bVar1 = 0;
          *(short *)(param_1 + uVar11 * 6 + 0xa08c) = (short)uVar8;
          *param_2 = uVar12 & 0xff;
          param_2[1] = (ushort)uVar4 & 0xff;
          bVar3 = 0;
          if (*(byte *)(param_1 + 0xa29d) != 0) {
            do {
              bVar9 = bVar9 + 1;
              bVar1 = bVar2;
              if ((uVar10 & uVar8 & 0xffff) == 0) {
                if (bVar2 <= bVar9) {
                  bVar1 = bVar9;
                }
              }
              else {
                bVar9 = 0;
              }
              bVar3 = bVar3 + 1;
              uVar10 = uVar10 << 1;
              bVar2 = bVar1;
            } while (bVar3 < *(byte *)(param_1 + 0xa29d));
          }
          *(byte *)(param_1 + uVar11 * 6 + 0xa08e) = bVar1;
          return 1;
        }
      }
    }
    iVar7 = param_1 + uVar11 * 6;
    bVar9 = *(byte *)(iVar7 + 0xa08f);
    uVar12 = uVar12 + *(byte *)(iVar7 + 0xa090);
  } while( true );
}



undefined4 FUN_80014cf4(int param_1,ushort *param_2,byte param_3,byte param_4,char param_5)

{
  char cVar1;
  byte bVar2;
  uint uVar3;
  char cVar4;
  int iVar5;
  undefined2 uVar6;
  int iVar7;
  uint uVar8;
  uint uVar9;
  byte bVar10;
  
  bVar10 = 0;
  bVar2 = *(byte *)(param_1 + 0xa29c);
  do {
    uVar9 = (uint)bVar2;
    if (uVar9 == 0xff) {
      return 0;
    }
    iVar5 = param_1 + uVar9 * 6;
    bVar2 = *(byte *)(iVar5 + 0xa090);
    if ((param_3 <= bVar2) && (*(short *)(iVar5 + 0xa08c) == 0)) {
      cVar1 = '\0';
      if (param_5 == '\x01') {
        cVar4 = '\x10';
      }
      else {
        cVar4 = '\b';
        if (param_5 == '\x02') {
          cVar4 = ' ';
        }
      }
      if ((byte)(cVar4 - param_3) < (bVar10 & 7)) {
        cVar1 = '\b' - (bVar10 & 7);
        bVar2 = bVar2 - cVar1;
      }
      if (param_3 <= bVar2) {
        uVar3 = uVar9;
        if (cVar1 != '\0') {
          uVar3 = FUN_80015070(param_1);
          iVar7 = param_1 + (uVar3 & 0xff) * 6;
          *(undefined *)(iVar7 + 0xa08e) = *(undefined *)(param_1 + 0xa29d);
          iVar5 = param_1 + uVar9 * 6;
          *(undefined *)(iVar7 + 0xa08f) = *(undefined *)(iVar5 + 0xa08f);
          cVar4 = *(char *)(iVar5 + 0xa090);
          bVar10 = bVar10 + cVar1;
          *(undefined2 *)(iVar7 + 0xa08c) = 0;
          *(char *)(iVar7 + 0xa090) = cVar4 - cVar1;
          *(char *)(iVar5 + 0xa08f) = (char)uVar3;
          *(char *)(iVar5 + 0xa090) = cVar1;
          uVar9 = uVar3 & 0xff;
        }
        iVar5 = param_1 + uVar9 * 6;
        if (*(byte *)(iVar5 + 0xa090) != param_3) {
          bVar2 = FUN_80015070(param_1);
          iVar7 = param_1 + (uint)bVar2 * 6;
          *(undefined *)(iVar7 + 0xa08e) = *(undefined *)(param_1 + 0xa29d);
          *(undefined *)(iVar7 + 0xa08f) = *(undefined *)(iVar5 + 0xa08f);
          cVar4 = *(char *)(iVar5 + 0xa090);
          *(undefined2 *)(iVar7 + 0xa08c) = 0;
          *(byte *)(iVar7 + 0xa090) = cVar4 - param_3;
          *(byte *)(iVar5 + 0xa08f) = bVar2;
          *(byte *)(iVar5 + 0xa090) = param_3;
        }
        uVar8 = 0;
        uVar6 = 0;
        uVar9 = 1;
        bVar2 = 0;
        if (param_4 != 0) {
          do {
            uVar8 = uVar8 | uVar9;
            uVar6 = (undefined2)uVar8;
            bVar2 = bVar2 + 1;
            uVar9 = uVar9 << 1;
          } while (bVar2 < param_4);
        }
        iVar5 = param_1 + (uVar3 & 0xff) * 6;
        *(undefined2 *)(iVar5 + 0xa08c) = uVar6;
        *(byte *)(iVar5 + 0xa08e) = *(char *)(param_1 + 0xa29d) - param_4;
        *param_2 = (ushort)bVar10;
        param_2[1] = 0;
        *(char *)(param_1 + 0xa29e) =
             *(char *)(param_1 + 0xa29e) - (*(char *)(iVar5 + 0xa090) + cVar1);
        return 1;
      }
    }
    iVar5 = param_1 + uVar9 * 6;
    bVar2 = *(byte *)(iVar5 + 0xa08f);
    bVar10 = bVar10 + *(char *)(iVar5 + 0xa090);
  } while( true );
}



uint FUN_80015070(int param_1)

{
  uint uVar1;
  byte bVar2;
  
  bVar2 = 0;
  uVar1 = 0;
  do {
    if (*(char *)(param_1 + uVar1 * 6 + 0xa08f) == -2) {
      return uVar1;
    }
    bVar2 = bVar2 + 1;
    uVar1 = (uint)bVar2;
  } while (bVar2 < 0x58);
  return 0;
}



byte FUN_800150c0(int param_1)

{
  byte bVar1;
  int iVar2;
  byte bVar3;
  
  bVar3 = 0;
  bVar1 = *(byte *)(param_1 + 0xa29c);
  while (bVar1 != 0xff) {
    iVar2 = param_1 + (uint)bVar1 * 6;
    bVar1 = *(byte *)(iVar2 + 0xa090);
    if (bVar3 < bVar1) {
      bVar3 = bVar1;
    }
    bVar1 = *(byte *)(iVar2 + 0xa08f);
  }
  return bVar3;
}



void FUN_80015130(int param_1,undefined4 param_2,byte param_3)

{
  byte bVar1;
  int iVar2;
  byte bVar3;
  int iVar4;
  uint uVar5;
  byte bVar6;
  uint uVar8;
  uint uVar9;
  uint uVar10;
  short local_res4;
  short sStackX_6;
  byte bVar7;
  
  uVar5 = 0;
  bVar6 = *(byte *)(param_1 + 0xa29c);
  uVar10 = 0xff;
  while( true ) {
    uVar9 = (uint)bVar6;
    if (uVar9 == 0xff) {
      return;
    }
    local_res4 = (short)param_2;
    if ((uVar5 & 0xff) == (int)local_res4) break;
    iVar4 = param_1 + uVar9 * 6;
    bVar6 = *(byte *)(iVar4 + 0xa08f);
    uVar5 = uVar5 + *(byte *)(iVar4 + 0xa090);
    uVar10 = uVar9;
  }
  bVar6 = 0;
  uVar8 = (uint)*(ushort *)(param_1 + uVar9 * 6 + 0xa08c);
  sStackX_6 = (short)((uint)param_2 >> 0x10);
  uVar5 = 1 << ((int)sStackX_6 & 0x1fU);
  if (param_3 != 0) {
    do {
      uVar8 = uVar8 ^ uVar5;
      bVar6 = bVar6 + 1;
      uVar5 = uVar5 << 1;
    } while (bVar6 < param_3);
  }
  uVar5 = 1;
  bVar7 = 0;
  bVar6 = 0;
  bVar1 = 0;
  *(short *)(param_1 + uVar9 * 6 + 0xa08c) = (short)uVar8;
  bVar3 = 0;
  if (*(byte *)(param_1 + 0xa29d) != 0) {
    do {
      bVar1 = bVar1 + 1;
      bVar6 = bVar7;
      if ((uVar5 & uVar8 & 0xffff) == 0) {
        if (bVar7 <= bVar1) {
          bVar6 = bVar1;
        }
      }
      else {
        bVar1 = 0;
      }
      bVar3 = bVar3 + 1;
      uVar5 = uVar5 << 1;
      bVar7 = bVar6;
    } while (bVar3 < *(byte *)(param_1 + 0xa29d));
  }
  iVar4 = param_1 + uVar9 * 6;
  *(byte *)(iVar4 + 0xa08e) = bVar6;
  if ((uVar8 & 0xffff) == 0) {
    *(char *)(param_1 + 0xa29e) = *(char *)(param_1 + 0xa29e) + *(char *)(iVar4 + 0xa090);
    if ((uVar10 != 0xff) && (iVar2 = param_1 + uVar10 * 6, *(short *)(iVar2 + 0xa08c) == 0)) {
      *(undefined *)(iVar2 + 0xa08f) = *(undefined *)(iVar4 + 0xa08f);
      *(char *)(iVar2 + 0xa090) = *(char *)(iVar2 + 0xa090) + *(char *)(iVar4 + 0xa090);
      *(undefined *)(iVar4 + 0xa08f) = 0xfe;
      *(undefined *)(iVar4 + 0xa090) = 0xfe;
      uVar9 = uVar10;
    }
    iVar4 = param_1 + uVar9 * 6;
    if ((*(byte *)(iVar4 + 0xa08f) != 0xff) &&
       (param_1 = param_1 + (uint)*(byte *)(iVar4 + 0xa08f) * 6, *(short *)(param_1 + 0xa08c) == 0))
    {
      *(undefined *)(iVar4 + 0xa08f) = *(undefined *)(param_1 + 0xa08f);
      *(char *)(iVar4 + 0xa090) = *(char *)(iVar4 + 0xa090) + *(char *)(param_1 + 0xa090);
      *(undefined *)(param_1 + 0xa08f) = 0xfe;
      *(undefined *)(param_1 + 0xa090) = 0xfe;
    }
  }
  return;
}



void FUN_80015420(void)

{
  return;
}



// Possible VM_VIB.OBJ/SsUtVibrateOff

void FUN_80015430(void)

{
  return;
}



void FUN_80015438(undefined2 *param_1,undefined2 param_2)

{
  *(undefined **)(param_1 + 6) = &DAT_8001039c;
  param_1[4] = param_2;
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  *(undefined *)(param_1 + 5) = 1;
  return;
}



undefined2 *
FUN_80015468(undefined2 *param_1,undefined2 param_2,short param_3,short param_4,undefined param_5)

{
  undefined *puVar1;
  char cVar2;
  byte bVar3;
  u_short uVar4;
  
  param_1[4] = param_2;
  *(undefined **)(param_1 + 6) = &DAT_8001039c;
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  *(undefined **)(param_1 + 6) = &DAT_80010384;
  *(undefined *)(param_1 + 0x1a) = 0x40;
  *(undefined *)((int)param_1 + 0x35) = 0x40;
  *(undefined *)(param_1 + 0x1b) = 0x40;
  param_1[3] = param_4;
  *(undefined *)(param_1 + 5) = 1;
  *(undefined *)((int)param_1 + 0x37) = 0;
  *(undefined *)(param_1 + 0x1c) = 0;
  *(undefined *)((int)param_1 + 0x2f) = 1;
  param_1[2] = param_3;
  *(undefined *)((int)param_1 + 0x33) = 1;
  *(undefined *)(param_1 + 0x19) = param_5;
  puVar1 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 0xe) = 0x10000;
  *(undefined4 *)(param_1 + 0x10) = 0x10000;
  param_1[0x14] = 0;
  param_1[0x15] = 0;
  param_1[0x16] = 0;
  cVar2 = FUN_800138ec(puVar1,param_1 + 8,*(undefined *)(param_1 + 0x19),(int)param_3,(int)param_4);
  *(char *)(param_1 + 0x17) = cVar2;
  if (cVar2 != '\0') {
    uVar4 = GetTPage((uint)*(byte *)(param_1 + 0x19),0,(int)(short)param_1[8] & 0xffffffc0,
                     (int)(short)param_1[9] & 0xffffff00);
    param_1[0x12] = uVar4;
    if (*(char *)(param_1 + 0x19) == '\0') {
      bVar3 = (byte)((*(byte *)(param_1 + 8) & 0x3f) << 2);
    }
    else if (*(char *)(param_1 + 0x19) == '\x01') {
      bVar3 = (byte)((*(byte *)(param_1 + 8) & 0x3f) << 1);
    }
    else {
      bVar3 = *(byte *)(param_1 + 8) & 0x3f;
    }
    *(byte *)(param_1 + 0x18) = bVar3;
    *(char *)((int)param_1 + 0x31) = (char)param_1[9];
  }
  if ((*(char *)(param_1 + 0x19) == '\x02') ||
     (cVar2 = FUN_80013d0c(PTR_DAT_800a59b0,param_1 + 0xc), cVar2 == '\0')) {
    param_1[0x13] = 0;
  }
  else {
    uVar4 = GetClut((int)(short)param_1[0xc],(int)(short)param_1[0xd]);
    param_1[0x13] = uVar4;
  }
  return param_1;
}



void FUN_80015610(undefined2 *param_1,undefined2 param_2)

{
  *(undefined **)(param_1 + 6) = &DAT_8001039c;
  *(undefined **)(param_1 + 6) = &DAT_80010384;
  *(undefined *)(param_1 + 0x1a) = 0x40;
  *(undefined *)((int)param_1 + 0x35) = 0x40;
  *(undefined *)(param_1 + 0x1b) = 0x40;
  param_1[4] = param_2;
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  *(undefined *)(param_1 + 5) = 1;
  *(undefined *)((int)param_1 + 0x37) = 0;
  *(undefined *)(param_1 + 0x1c) = 0;
  *(undefined *)((int)param_1 + 0x2f) = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  *(undefined *)(param_1 + 0x19) = 0;
  *(undefined *)((int)param_1 + 0x33) = 1;
  *(undefined4 *)(param_1 + 0xe) = 0x10000;
  *(undefined4 *)(param_1 + 0x10) = 0x10000;
  param_1[0x14] = 0;
  param_1[0x15] = 0;
  param_1[0x16] = 0;
  *(undefined *)(param_1 + 0x17) = 0;
  param_1[0x12] = 0;
  *(undefined *)(param_1 + 0x18) = 0;
  *(undefined *)((int)param_1 + 0x31) = 0;
  return;
}



void FUN_80016018(undefined2 *param_1,undefined4 param_2,undefined2 param_3,undefined4 param_4,
                 undefined4 param_5,uint param_6,uint param_7,undefined2 param_8,undefined2 param_9,
                 undefined param_10)

{
  ushort uVar1;
  uint *puVar2;
  undefined *puVar3;
  undefined4 uVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  int iVar8;
  uint uVar9;
  
  *(undefined **)(param_1 + 6) = &DAT_8001039c;
  param_1[4] = param_3;
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  *(undefined *)(param_1 + 5) = 1;
  puVar3 = PTR_DAT_800a59b0;
  *(undefined **)(param_1 + 6) = &DAT_80010374;
  uVar1 = *(ushort *)(puVar3 + 2);
  *(undefined *)(param_1 + 0x40) = param_10;
  *(undefined4 *)(param_1 + 0x38) = param_2;
  *(undefined4 *)(param_1 + 0x34) = param_4;
  *(undefined4 *)(param_1 + 0x36) = param_5;
  uVar6 = (int)param_1 + 0x77U & 3;
  puVar2 = (uint *)(((int)param_1 + 0x77U) - uVar6);
  *puVar2 = *puVar2 & -1 << (uVar6 + 1) * 8 | param_6 >> (3 - uVar6) * 8;
  uVar6 = (uint)(param_1 + 0x3a) & 3;
  puVar2 = (uint *)((int)(param_1 + 0x3a) - uVar6);
  *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar6) * 8 | param_6 << uVar6 * 8;
  uVar6 = (int)param_1 + 0x7bU & 3;
  puVar2 = (uint *)(((int)param_1 + 0x7bU) - uVar6);
  *puVar2 = *puVar2 & -1 << (uVar6 + 1) * 8 | param_7 >> (3 - uVar6) * 8;
  uVar6 = (uint)(param_1 + 0x3c) & 3;
  puVar2 = (uint *)((int)(param_1 + 0x3c) - uVar6);
  *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar6) * 8 | param_7 << uVar6 * 8;
  puVar3 = PTR_DAT_800a59b0;
  param_1[0x3e] = param_8;
  param_1[0x3f] = param_9;
  uVar9 = ((int)((uint)uVar1 << 0x10) >> 0x14) + 1;
  uVar6 = (uVar9 & 0xff) * 0x15;
  uVar4 = FUN_800143ec(puVar3,0x10,uVar6,0);
  puVar3 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 8) = uVar4;
  uVar4 = FUN_800143ec(puVar3,0x10,uVar6,0);
  puVar3 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 10) = uVar4;
  uVar4 = FUN_800143ec(puVar3,8,uVar6,0);
  puVar3 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 0xc) = uVar4;
  uVar4 = FUN_800143ec(puVar3,8,uVar6,0);
  *(undefined4 *)(param_1 + 0xe) = uVar4;
  CatPrim(*(void **)(param_1 + 0xc),*(void **)(param_1 + 8));
  iVar8 = 1;
  *(undefined4 *)(param_1 + 0x2c) = *(undefined4 *)(param_1 + 0xc);
  *(undefined4 *)(param_1 + 0x30) = *(undefined4 *)(param_1 + 8);
  if (1 < uVar6) {
    do {
      iVar7 = (short)iVar8 * 8;
      CatPrim(*(void **)(param_1 + 0x30),(void *)(*(int *)(param_1 + 0xc) + iVar7));
      iVar5 = (short)iVar8 * 0x10;
      CatPrim((void *)(*(int *)(param_1 + 0xc) + iVar7),(void *)(*(int *)(param_1 + 8) + iVar5));
      iVar8 = iVar8 + 1;
      *(int *)(param_1 + 0x30) = *(int *)(param_1 + 8) + iVar5;
    } while (iVar8 * 0x10000 >> 0x10 < (int)uVar6);
  }
  iVar8 = 1;
  CatPrim(*(void **)(param_1 + 0xe),*(void **)(param_1 + 10));
  *(undefined4 *)(param_1 + 0x32) = *(undefined4 *)(param_1 + 10);
  *(undefined4 *)(param_1 + 0x2e) = *(undefined4 *)(param_1 + 0xe);
  uVar6 = (uVar9 & 0xff) * 0x15;
  if (1 < uVar6) {
    do {
      iVar7 = (short)iVar8 * 8;
      CatPrim(*(void **)(param_1 + 0x32),(void *)(*(int *)(param_1 + 0xe) + iVar7));
      iVar5 = (short)iVar8 * 0x10;
      CatPrim((void *)(*(int *)(param_1 + 0xe) + iVar7),(void *)(*(int *)(param_1 + 10) + iVar5));
      iVar8 = iVar8 + 1;
      *(int *)(param_1 + 0x32) = *(int *)(param_1 + 10) + iVar5;
    } while (iVar8 * 0x10000 >> 0x10 < (int)uVar6);
  }
  uVar6 = uVar9 & 0xff;
  FUN_80017138(param_1,0,0,0,0,0,0,0,0x15,uVar6);
  FUN_80017138(param_1,1,0,0,0,0,0,0,0x15,uVar6);
  iVar8 = (int)(short)param_1[0x3e];
  if ((iVar8 != 0) && (iVar8 < 0x15)) {
    FUN_80017138(param_1,0,(iVar8 << 0x14) >> 0x10,0,iVar8,0,0,0,
                 (int)((0x15 - (uint)(ushort)param_1[0x3e]) * 0x10000) >> 0x10,uVar6);
    FUN_80017138(param_1,1,(int)((uint)(ushort)param_1[0x3e] << 0x14) >> 0x10,0,
                 (int)(short)param_1[0x3e],0,0,0,
                 (int)((0x15 - (uint)(ushort)param_1[0x3e]) * 0x10000) >> 0x10,uVar6);
  }
  iVar8 = (int)(short)param_1[0x3f];
  if ((iVar8 != 0) && (iVar8 < (int)(uVar9 & 0xff))) {
    FUN_80017138(param_1,0,0,(iVar8 << 0x14) >> 0x10,0,(int)(short)param_1[0x3f],0,0,0x15,
                 (int)(((uVar9 & 0xff) - (uint)(ushort)param_1[0x3f]) * 0x10000) >> 0x10);
    FUN_80017138(param_1,1,0,(int)((uint)(ushort)param_1[0x3f] << 0x14) >> 0x10,0,
                 (int)(short)param_1[0x3f],0,0,0x15,
                 (int)(((uVar9 & 0xff) - (uint)(ushort)param_1[0x3f]) * 0x10000) >> 0x10);
  }
  param_1[0x28] = 0;
  param_1[0x29] = 0;
  param_1[0x2a] = 0;
  param_1[0x2b] = 0;
  return;
}



void FUN_80017138(int param_1,uint param_2,short param_3,short param_4,ushort param_5,short param_6,
                 short param_7,short param_8,short param_9,short param_10)

{
  u_char uVar1;
  ushort uVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  u_char *puVar6;
  void *p0;
  ushort *puVar7;
  SPRT_16 *p;
  DR_TPAGE *p_00;
  uint uVar8;
  uint uVar9;
  int iVar10;
  int iVar11;
  short local_68;
  short local_60;
  short local_58;
  short local_50;
  short local_48;
  short local_40;
  short local_38;
  
  iVar10 = (param_2 & 0xff) * 4 + param_1;
  local_50 = 0;
  local_60 = param_6;
  uVar8 = ((int)((uint)*(ushort *)(PTR_DAT_800a59b0 + 2) << 0x10) >> 0x14) + 1U & 0xff;
  local_58 = param_8;
  local_68 = param_4;
  for (; local_50 < param_10; local_50 = local_50 + 1) {
    uVar9 = (uint)param_5;
    local_40 = param_7;
    iVar11 = (int)local_58;
    local_48 = param_3;
    for (local_38 = 0; local_38 < param_9; local_38 = local_38 + 1) {
      iVar5 = (int)*(short *)(param_1 + 0x74);
      iVar4 = (int)local_40;
      iVar3 = (int)*(short *)(param_1 + 0x76);
      puVar7 = (ushort *)
               (*(int *)(param_1 + 0x6c) +
               ((iVar4 - iVar5) + (iVar11 - iVar3) * (int)*(short *)(param_1 + 0x78)) * 2);
      if (*puVar7 == 0 ||
          (iVar3 + *(short *)(param_1 + 0x7a) <= iVar11 ||
          (iVar11 < iVar3 || (iVar5 + *(short *)(param_1 + 0x78) <= iVar4 || iVar4 < iVar5)))) {
        iVar3 = (int)((uVar9 + local_60 * 0x15) * 0x10000) >> 0x10;
        iVar4 = iVar3 * 8;
        p0 = (void *)(*(int *)(iVar10 + 0x18) + iVar4);
        if (iVar3 == uVar8 * 0x15 + -1) {
          *(void **)(iVar10 + 0x60) = p0;
        }
        else {
          CatPrim(p0,(void *)(*(int *)(iVar10 + 0x18) + iVar4 + 8));
        }
        *(undefined *)((int)p0 + 3) = 0;
      }
      else {
        iVar3 = (int)((uVar9 + local_60 * 0x15) * 0x10000) >> 0x10;
        p_00 = (DR_TPAGE *)(*(int *)(iVar10 + 0x18) + iVar3 * 8);
        p = (SPRT_16 *)(*(int *)(iVar10 + 0x10) + iVar3 * 0x10);
        CatPrim(p_00,p);
        if (iVar3 == uVar8 * 0x15 + -1) {
          *(SPRT_16 **)(iVar10 + 0x60) = p;
        }
        uVar2 = *puVar7;
        puVar7 = (ushort *)(*(int *)(param_1 + 0x68) + (uVar2 & 0xfff) * 8);
        puVar6 = (u_char *)(*(int *)(param_1 + 0x70) + (uint)(uVar2 >> 0xc) * 3);
        SetSprt16(p);
        SetSemiTrans(p,(uint)*(byte *)(puVar7 + 3));
        SetShadeTex(p,0);
        p->r0 = *puVar6;
        p->g0 = puVar6[1];
        uVar1 = puVar6[2];
        p->x0 = local_48;
        p->b0 = uVar1;
        p->y0 = local_68;
        p->u0 = *(u_char *)(puVar7 + 2);
        p->_2 = *(u_char *)((int)puVar7 + 5);
        p->clut = puVar7[1];
        SetDrawTPage(p_00,0,0,(uint)*puVar7 | (uint)*(byte *)(param_1 + 0x80) << 5);
      }
      uVar9 = uVar9 + 1;
      if (0x14 < (int)(uVar9 * 0x10000) >> 0x10) {
        uVar9 = 0;
      }
      local_48 = local_48 + 0x10;
      local_40 = local_40 + 1;
    }
    local_60 = local_60 + 1;
    if ((int)uVar8 <= (int)local_60) {
      local_60 = 0;
    }
    local_68 = local_68 + 0x10;
    local_58 = local_58 + 1;
  }
  return;
}



undefined2 *
FUN_8001753c(undefined2 *param_1,undefined4 param_2,undefined2 param_3,int param_4,ushort *param_5,
            uint param_6,uint param_7,short param_8,undefined param_9,undefined param_10,
            byte param_11)

{
  u_char uVar1;
  ushort uVar2;
  uint *puVar3;
  undefined *puVar4;
  byte bVar5;
  undefined4 uVar6;
  uint uVar7;
  int iVar8;
  void *p1;
  uint uVar9;
  int tpage;
  ushort *puVar10;
  void **ppvVar11;
  u_char *puVar12;
  int *piVar13;
  int iVar14;
  u_short *puVar15;
  SPRT_16 *p;
  short sVar16;
  ushort uVar17;
  ushort *puVar18;
  ushort uVar19;
  undefined auStack_1c0 [352];
  int local_60;
  ushort local_58;
  ushort local_50;
  byte local_48;
  short local_40;
  undefined2 *local_38;
  undefined *local_30;
  
  *(undefined4 *)(param_1 + 0x34) = param_2;
  param_1[4] = param_3;
  iVar14 = 0;
  *(undefined **)(param_1 + 6) = &DAT_8001039c;
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  *(undefined *)(param_1 + 5) = 1;
  *(undefined **)(param_1 + 6) = &DAT_80010364;
  *(undefined *)(param_1 + 0x36) = param_9;
  *(undefined *)((int)param_1 + 0x6d) = param_10;
  uVar9 = (int)param_1 + 99U & 3;
  puVar3 = (uint *)(((int)param_1 + 99U) - uVar9);
  *puVar3 = *puVar3 & -1 << (uVar9 + 1) * 8 | param_6 >> (3 - uVar9) * 8;
  uVar9 = (uint)(param_1 + 0x30) & 3;
  puVar3 = (uint *)((int)(param_1 + 0x30) - uVar9);
  *puVar3 = *puVar3 & 0xffffffffU >> (4 - uVar9) * 8 | param_6 << uVar9 * 8;
  uVar9 = (int)param_1 + 0x67U & 3;
  puVar3 = (uint *)(((int)param_1 + 0x67U) - uVar9);
  *puVar3 = *puVar3 & -1 << (uVar9 + 1) * 8 | param_7 >> (3 - uVar9) * 8;
  uVar9 = (uint)(param_1 + 0x32) & 3;
  puVar3 = (uint *)((int)(param_1 + 0x32) - uVar9);
  *puVar3 = *puVar3 & 0xffffffffU >> (4 - uVar9) * 8 | param_7 << uVar9 * 8;
  local_60 = param_4;
  uVar6 = FUN_800143ec(PTR_DAT_800a59b0,8,0x2c,0);
  puVar4 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 8) = uVar6;
  uVar6 = FUN_800143ec(puVar4,8,0x2c,0);
  *(undefined4 *)(param_1 + 10) = uVar6;
  iVar8 = 0;
  while (iVar8 = iVar8 >> 0x10, iVar8 < 0x2c) {
    uVar9 = iVar8 % 0xb + 5;
    if (10 < (iVar8 % 0x16) * 0x10000 >> 0x10) {
      uVar9 = iVar8 % 0xb + 0x15;
    }
    tpage = ((iVar8 / 0x16) * 0x80 & 0xffffU) + (uVar9 & 0xffff) + (uint)param_11 * 0x20;
    iVar14 = iVar14 + 1;
    SetDrawTPage((DR_TPAGE *)(*(int *)(param_1 + 8) + iVar8 * 8),0,0,tpage);
    SetDrawTPage((DR_TPAGE *)(*(int *)(param_1 + 10) + iVar8 * 8),0,0,tpage);
    iVar8 = iVar14 * 0x10000;
  }
  local_30 = auStack_1c0;
  local_48 = 0;
  uVar6 = FUN_800143ec(PTR_DAT_800a59b0,0x10,(int)param_8,0);
  puVar4 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 0xc) = uVar6;
  uVar6 = FUN_800143ec(puVar4,0x10,(int)param_8,0);
  *(undefined4 *)(param_1 + 0xe) = uVar6;
  local_58 = param_1[0x30] << 4;
  local_50 = param_1[0x31] << 4;
  for (; iVar8 = 0, local_48 < 2; local_48 = local_48 + 1) {
    iVar14 = 0;
    do {
      *(undefined4 *)(local_30 + (iVar14 >> 0xe)) = 0;
      iVar8 = iVar8 + 1;
      iVar14 = iVar8 * 0x10000;
    } while (iVar8 * 0x10000 >> 0x10 < 0x2c);
    local_38 = param_1 + (uint)local_48 * 2;
    p = *(SPRT_16 **)(local_38 + 0xc);
    local_40 = 0;
    puVar18 = param_5;
    uVar19 = local_50;
    while( true ) {
      bVar5 = local_48;
      sVar16 = 0;
      if ((short)param_1[0x33] <= local_40) break;
      puVar15 = &p->clut;
      uVar17 = local_58;
      for (; sVar16 < (short)param_1[0x32]; sVar16 = sVar16 + 1) {
        uVar2 = *puVar18;
        if (uVar2 != 0) {
          puVar10 = (ushort *)(local_60 + (uVar2 & 0xfff) * 8);
          puVar12 = (u_char *)(*(int *)(param_1 + 0x34) + (uint)(uVar2 >> 0xc) * 3);
          SetSprt16(p);
          SetSemiTrans(p,(uint)*(byte *)(puVar10 + 3));
          SetShadeTex(p,0);
          *(u_char *)(puVar15 + -5) = *puVar12;
          *(u_char *)((int)puVar15 + -9) = puVar12[1];
          uVar1 = puVar12[2];
          puVar15[-3] = uVar17;
          puVar15[-2] = uVar19;
          *(u_char *)(puVar15 + -4) = uVar1;
          *(u_char *)(puVar15 + -1) = *(u_char *)(puVar10 + 2);
          *(u_char *)((int)puVar15 + -1) = *(u_char *)((int)puVar10 + 5);
          *puVar15 = puVar10[1];
          uVar7 = (uint)*puVar10;
          uVar9 = ((uVar7 & 0x180) >> 7) * 0x16 + 0xfffb + (uVar7 & 0xf);
          if (0xf < (uVar7 & 0x1f)) {
            uVar9 = uVar9 + 0xb;
          }
          piVar13 = (int *)(local_30 + (uVar9 & 0xffff) * 4);
          if (*piVar13 == 0) {
            iVar14 = (uVar9 & 0xffff) * 8;
            CatPrim((void *)(*(int *)(local_38 + 8) + iVar14),p);
            iVar8 = *(int *)(local_38 + 8);
            piVar13[0x2c] = (int)p;
            *piVar13 = iVar8 + iVar14;
          }
          else {
            CatPrim((void *)piVar13[0x2c],p);
            piVar13[0x2c] = (int)p;
          }
          puVar15 = puVar15 + 8;
          p = p + 1;
        }
        puVar18 = puVar18 + 1;
        uVar17 = uVar17 + 0x10;
      }
      uVar19 = uVar19 + 0x10;
      local_40 = local_40 + 1;
    }
    iVar14 = 0;
    *(undefined4 *)(param_1 + (uint)local_48 * 2 + 0x28) = 0;
    iVar8 = 0;
    do {
      ppvVar11 = (void **)(local_30 + (iVar8 >> 0xe));
      p1 = *ppvVar11;
      if (p1 != (void *)0x0) {
        if (*(int *)(param_1 + (uint)bVar5 * 2 + 0x28) == 0) {
          *(void **)(param_1 + (uint)bVar5 * 2 + 0x28) = p1;
        }
        else {
          CatPrim(*(void **)(param_1 + (uint)bVar5 * 2 + 0x2c),p1);
        }
        *(void **)(param_1 + (uint)bVar5 * 2 + 0x2c) = ppvVar11[0x2c];
      }
      iVar14 = iVar14 + 1;
      iVar8 = iVar14 * 0x10000;
    } while (iVar14 * 0x10000 >> 0x10 < 0x2c);
  }
  return param_1;
}



undefined2 *
FUN_80017d08(undefined2 *param_1,undefined4 param_2,undefined2 param_3,int param_4,ushort *param_5,
            uint param_6,uint param_7,short param_8,undefined2 param_9,undefined2 param_10,
            byte param_11)

{
  u_char uVar1;
  short sVar2;
  short sVar3;
  uint *puVar4;
  undefined *puVar5;
  undefined4 uVar6;
  ushort uVar7;
  int iVar8;
  uint uVar9;
  int iVar10;
  int iVar11;
  u_char *puVar12;
  DR_TPAGE **ppDVar13;
  ushort *puVar14;
  u_short *puVar15;
  SPRT_16 *p;
  DR_TPAGE *p_00;
  ushort uVar16;
  ushort uVar17;
  ushort uVar18;
  ushort *local_68;
  byte local_50;
  ushort local_48;
  
  *(undefined4 *)(param_1 + 0x3c) = param_2;
  *(undefined **)(param_1 + 6) = &DAT_8001039c;
  param_1[4] = param_3;
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  *(undefined *)(param_1 + 5) = 1;
  *(undefined **)(param_1 + 6) = &DAT_80010354;
  param_1[0x3e] = param_9;
  param_1[0x3f] = param_10;
  uVar9 = (int)param_1 + 0x73U & 3;
  puVar4 = (uint *)(((int)param_1 + 0x73U) - uVar9);
  *puVar4 = *puVar4 & -1 << (uVar9 + 1) * 8 | param_6 >> (3 - uVar9) * 8;
  uVar9 = (uint)(param_1 + 0x38) & 3;
  puVar4 = (uint *)((int)(param_1 + 0x38) - uVar9);
  *puVar4 = *puVar4 & 0xffffffffU >> (4 - uVar9) * 8 | param_6 << uVar9 * 8;
  uVar9 = (int)param_1 + 0x77U & 3;
  puVar4 = (uint *)(((int)param_1 + 0x77U) - uVar9);
  *puVar4 = *puVar4 & -1 << (uVar9 + 1) * 8 | param_7 >> (3 - uVar9) * 8;
  uVar9 = (uint)(param_1 + 0x3a) & 3;
  puVar4 = (uint *)((int)(param_1 + 0x3a) - uVar9);
  *puVar4 = *puVar4 & 0xffffffffU >> (4 - uVar9) * 8 | param_7 << uVar9 * 8;
  iVar10 = (int)param_8;
  uVar6 = FUN_800143ec(PTR_DAT_800a59b0,0x10,iVar10,0);
  puVar5 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 8) = uVar6;
  uVar6 = FUN_800143ec(puVar5,0x10,iVar10,0);
  puVar5 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 10) = uVar6;
  uVar6 = FUN_800143ec(puVar5,8,iVar10,0);
  puVar5 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 0xc) = uVar6;
  uVar6 = FUN_800143ec(puVar5,8,iVar10,0);
  *(undefined4 *)(param_1 + 0xe) = uVar6;
  if (param_1[0x3e] == 0) {
    sVar2 = param_1[0x3b];
  }
  else {
    sVar2 = param_1[0x3a];
  }
  iVar11 = (int)sVar2;
  uVar6 = FUN_800143ec(PTR_DAT_800a59b0,8,iVar11,0);
  puVar5 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 0x34) = uVar6;
  uVar6 = FUN_800143ec(puVar5,8,iVar11,0);
  iVar10 = 0;
  *(undefined4 *)(param_1 + 0x36) = uVar6;
  if (0 < iVar11) {
    do {
      iVar8 = (iVar10 << 0x10) >> 0xd;
      *(undefined4 *)(iVar8 + *(int *)(param_1 + 0x34)) = 0;
      iVar10 = iVar10 + 1;
      *(undefined4 *)(iVar8 + *(int *)(param_1 + 0x36)) = 0;
    } while (iVar10 * 0x10000 >> 0x10 < iVar11);
  }
  local_50 = 0;
  sVar2 = param_1[0x38];
  sVar3 = param_1[0x39];
  while( true ) {
    uVar9 = (uint)local_50;
    uVar18 = 0;
    if (1 < uVar9) break;
    local_68 = param_5;
    p = *(SPRT_16 **)(param_1 + uVar9 * 2 + 8);
    p_00 = *(DR_TPAGE **)(param_1 + uVar9 * 2 + 0xc);
    local_48 = sVar3 << 4;
    for (; uVar16 = 0, (short)uVar18 < (short)param_1[0x3b]; uVar18 = uVar18 + 1) {
      puVar15 = &p->clut;
      uVar17 = sVar2 << 4;
      for (; (short)uVar16 < (short)param_1[0x3a]; uVar16 = uVar16 + 1) {
        uVar7 = *local_68;
        if (uVar7 != 0) {
          puVar14 = (ushort *)(param_4 + (uVar7 & 0xfff) * 8);
          puVar12 = (u_char *)(*(int *)(param_1 + 0x3c) + (uint)(uVar7 >> 0xc) * 3);
          SetSprt16(p);
          SetSemiTrans(p,(uint)*(byte *)(puVar14 + 3));
          SetShadeTex(p,0);
          *(u_char *)(puVar15 + -5) = *puVar12;
          *(u_char *)((int)puVar15 + -9) = puVar12[1];
          uVar1 = puVar12[2];
          puVar15[-3] = uVar17;
          puVar15[-2] = local_48;
          *(u_char *)(puVar15 + -4) = uVar1;
          *(u_char *)(puVar15 + -1) = *(u_char *)(puVar14 + 2);
          *(u_char *)((int)puVar15 + -1) = *(u_char *)((int)puVar14 + 5);
          *puVar15 = puVar14[1];
          SetDrawTPage(p_00,0,0,(uint)*puVar14 | (uint)param_11 << 5);
          uVar7 = uVar18;
          if (param_1[0x3e] != 0) {
            uVar7 = uVar16;
          }
          ppDVar13 = (DR_TPAGE **)(*(int *)(param_1 + uVar9 * 2 + 0x34) + (uint)uVar7 * 8);
          if (*ppDVar13 == (DR_TPAGE *)0x0) {
            *ppDVar13 = p_00;
          }
          else {
            CatPrim(ppDVar13[1],p_00);
          }
          ppDVar13[1] = p_00;
          puVar15 = puVar15 + 8;
          p_00 = p_00 + 1;
          CatPrim(ppDVar13[1],p);
          ppDVar13[1] = (DR_TPAGE *)p;
          p = p + 1;
        }
        uVar17 = uVar17 + 0x10;
        local_68 = local_68 + 1;
      }
      local_48 = local_48 + 0x10;
    }
    local_50 = local_50 + 1;
  }
  return param_1;
}



void FUN_80018898(undefined2 *param_1,undefined2 param_2)

{
  *(undefined **)(param_1 + 6) = &DAT_8001039c;
  *(undefined *)(param_1 + 5) = 1;
  param_1[4] = param_2;
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  *(undefined **)(param_1 + 6) = &DAT_80010344;
  *(undefined4 *)(param_1 + 8) = 0;
  *(undefined *)(param_1 + 0x2a) = 0;
  return;
}



// WARNING: Removing unreachable block (ram,0x80019060)
// WARNING: Removing unreachable block (ram,0x80018f40)
// WARNING: Removing unreachable block (ram,0x80019094)
// WARNING: Removing unreachable block (ram,0x80019130)
// WARNING: Removing unreachable block (ram,0x80019150)

void load_sprites(int param_1,int param_2)

{
  undefined *puVar1;
  uint uVar2;
  uint *puVar3;
  char cVar4;
  u_short uVar5;
  ushort uVar6;
  int iVar7;
  int *piVar8;
  u_long *p;
  short sVar9;
  int i;
  short *psVar10;
  int *piVar11;
  ushort uVar12;
  int local_50;
  u_long *local_4c;
  uint uStack_44;
  undefined2 local_40;
  undefined local_3e;
  undefined auStack_38 [8];
  RECT sprite;
  
  i = 0;
  iVar7 = 0;
  do {
    i = i + 1;
    if (*(int *)(param_1 + (iVar7 >> 0x10) * 0x18) == param_2) {
      return;
    }
    iVar7 = i * 0x10000;
  } while (i * 0x10000 >> 0x10 < 0x14);
  i = 0;
  iVar7 = 0;
  do {
    sVar9 = (short)i;
    i = i + 1;
    if (*(int *)(param_1 + (iVar7 >> 0x10) * 0x18) == 0) break;
    iVar7 = i * 0x10000;
    sVar9 = (short)i;
  } while (i * 0x10000 >> 0x10 < 0x14);
  if (sVar9 < 0x14) {
    piVar11 = (int *)(param_1 + sVar9 * 0x18);
    *piVar11 = param_2;
    FUN_8007bbac(&local_50);
    *(undefined2 *)(piVar11 + 4) = local_40;
    puVar1 = auStack_38 + 3;
    uVar2 = (uint)puVar1 & 3;
    *(uint *)(puVar1 + -uVar2) =
         *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | uStack_44 >> (3 - uVar2) * 8;
    auStack_38._0_4_ = uStack_44;
    uVar2 = (int)piVar11 + 0xbU & 3;
    puVar3 = (uint *)(((int)piVar11 + 0xbU) - uVar2);
    *puVar3 = *puVar3 & -1 << (uVar2 + 1) * 8 | uStack_44 >> (3 - uVar2) * 8;
    uVar2 = (uint)(piVar11 + 2) & 3;
    puVar3 = (uint *)((int)(piVar11 + 2) - uVar2);
    *puVar3 = *puVar3 & 0xffffffffU >> (4 - uVar2) * 8 | uStack_44 << uVar2 * 8;
    *(undefined *)(piVar11 + 5) = local_3e;
    cVar4 = FUN_80013d0c(PTR_DAT_800a59b0,piVar11 + 3,1);
    if (cVar4 == '\0') {
      *(undefined2 *)((int)piVar11 + 0x12) = 0;
    }
    else {
      uVar5 = GetClut((int)*(short *)(piVar11 + 3),(int)*(short *)((int)piVar11 + 0xe));
      *(u_short *)((int)piVar11 + 0x12) = uVar5;
    }
    LoadClut(local_4c,(int)*(short *)(piVar11 + 3),(int)*(short *)((int)piVar11 + 0xe));
    DrawSync(0);
    piVar8 = (int *)FUN_800143ec(PTR_DAT_800a59b0,0x14,*(undefined2 *)(piVar11 + 4),0);
    psVar10 = (short *)((int)piVar8 + 6);
    piVar11[1] = (int)piVar8;
    for (uVar12 = 0; puVar1 = PTR_DAT_800a59b0,
        (int)(short)uVar12 < (int)(uint)*(ushort *)(piVar11 + 4); uVar12 = uVar12 + 1) {
      iVar7 = local_50 + (uint)uVar12 * 0x24;
      *piVar8 = iVar7;
      uVar6 = *(short *)(iVar7 + 10) + 3U & 0xfffc;
      cVar4 = FUN_800138ec(puVar1,piVar8 + 1,1,(int)(short)uVar6,(int)*(short *)(iVar7 + 0xc));
      *(char *)(psVar10 + 5) = cVar4;
      if (cVar4 != '\0') {
        uVar5 = GetTPage(1,0,(int)psVar10[-1] & 0xffffffc0,(int)*psVar10 & 0xffffff00);
        psVar10[3] = uVar5;
        *(char *)(psVar10 + 4) = (char)((*(byte *)(psVar10 + -1) & 0x3f) << 1);
        *(char *)((int)psVar10 + 9) = (char)*psVar10;
        i = (int)(short)uVar6;
        p = (u_long *)FUN_800143ec(PTR_DAT_800a59b0,1,i * *(short *)(iVar7 + 0xc),0);
        FUN_80010000(p,uVar6 * *(short *)(iVar7 + 0xc),0);
        FUN_8007bda8(&local_50,uVar12,p,i,0,0);
        sprite.x = psVar10[-1];
        sprite.y = *psVar10;
        sprite.w = (short)(i >> 1);
        sprite.h = *(short *)(iVar7 + 0xc);
        LoadImage(&sprite,p);
        potentially_load_asset_(PTR_DAT_800a59b0,p,0,0);
        DrawSync(0);
      }
      psVar10 = psVar10 + 10;
      piVar8 = piVar8 + 5;
    }
  }
  return;
}



void FUN_800191d8(undefined4 param_1,int *param_2)

{
  int iVar1;
  
  iVar1 = *param_2;
  while (iVar1 != 0) {
    iVar1 = *param_2;
    param_2 = param_2 + 1;
    load_sprites(param_1,iVar1);
    iVar1 = *param_2;
  }
  return;
}



void FUN_80019234(int param_1,uint param_2)

{
  int iVar1;
  undefined2 *puVar2;
  undefined4 *puVar3;
  int iVar4;
  
  iVar1 = param_1 + (param_2 & 0xff) * 0x18;
  if (*(short *)(iVar1 + 0x12) != 0) {
    FUN_80013f4c(PTR_DAT_800a59b0,iVar1 + 0xc);
  }
  iVar4 = 0;
  if (*(short *)(iVar1 + 0x10) != 0) {
    puVar2 = (undefined2 *)(*(int *)(iVar1 + 4) + 10);
    do {
      if (*(char *)(puVar2 + 3) != '\0') {
        FUN_80013aac(PTR_DAT_800a59b0,*(undefined4 *)(puVar2 + -3),CONCAT22(*puVar2,puVar2[-1]));
      }
      iVar4 = iVar4 + 1;
      puVar2 = puVar2 + 10;
    } while (iVar4 * 0x10000 >> 0x10 < (int)(uint)*(ushort *)(iVar1 + 0x10));
  }
  puVar3 = (undefined4 *)(param_1 + (param_2 & 0xff) * 0x18);
  potentially_load_asset_(PTR_DAT_800a59b0,puVar3[1],0,0);
  *puVar3 = 0;
  return;
}



void FUN_80019470(int param_1)

{
  int iVar1;
  uint uVar2;
  
  uVar2 = 0;
  iVar1 = 0;
  do {
    if (*(int *)(param_1 + (iVar1 >> 0x10) * 0x18) != 0) {
      FUN_80019234(param_1,uVar2 & 0xff);
    }
    uVar2 = uVar2 + 1;
    iVar1 = uVar2 * 0x10000;
  } while ((int)(uVar2 * 0x10000) >> 0x10 < 0x14);
  return;
}



void FUN_80019548(undefined4 *param_1)

{
  *param_1 = 0;
  return;
}



void FUN_800195ac(int **param_1,int param_2)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  
  iVar3 = 0;
  iVar1 = 0;
  do {
    piVar2 = (int *)(PTR_DAT_800a59b8 + (iVar1 >> 0x10) * 0x18);
    iVar3 = iVar3 + 1;
    if (*piVar2 == param_2) goto LAB_80019600;
    iVar1 = iVar3 * 0x10000;
  } while (iVar3 * 0x10000 >> 0x10 < 0x14);
  piVar2 = (int *)0x0;
LAB_80019600:
  *param_1 = piVar2;
  return;
}



undefined2 FUN_80019638(int *param_1)

{
  return *(undefined2 *)(*param_1 + 0x10);
}



undefined4 FUN_8001964c(int *param_1,uint param_2)

{
  return *(undefined4 *)((param_2 & 0xffff) * 0x14 + *(int *)(*param_1 + 4));
}



void FUN_800196d4(void)

{
  FUN_80019470(&DAT_8009aeb4);
  return;
}



void FUN_800196fc(void)

{
  short sVar1;
  int iVar2;
  
  iVar2 = 0;
  do {
    sVar1 = (short)iVar2;
    iVar2 = iVar2 + 1;
    (&DAT_8009aeb4)[sVar1 * 6] = 0;
  } while (iVar2 * 0x10000 >> 0x10 < 20);
  return;
}



void FUN_80019744(undefined2 *param_1,undefined2 param_2)

{
  *(undefined **)(param_1 + 0xc) = &DAT_800104ac;
  *param_1 = 0;
  param_1[1] = 0;
  *(undefined4 *)(param_1 + 2) = 0;
  param_1[4] = 0;
  param_1[5] = 0;
  *(undefined4 *)(param_1 + 6) = 0;
  param_1[8] = param_2;
  *(undefined *)(param_1 + 10) = 1;
  param_1[9] = 0;
  return;
}



void FUN_8001978c(undefined2 *param_1,undefined param_2)

{
  undefined *puVar1;
  u_short uVar2;
  
  *(undefined **)(param_1 + 0xc) = &DAT_800104ac;
  *param_1 = 0;
  param_1[1] = 0;
  *(undefined4 *)(param_1 + 2) = 0;
  *(undefined *)(param_1 + 10) = 1;
  *(undefined *)(param_1 + 0x1a) = param_2;
  puVar1 = PTR_DAT_800a59b0;
  param_1[4] = 0;
  param_1[5] = 0;
  *(undefined4 *)(param_1 + 6) = 0;
  param_1[8] = 0;
  param_1[9] = 0;
  *(undefined **)(param_1 + 0xc) = &DAT_8001048c;
  FUN_80013d0c(puVar1,param_1 + 0x14,param_2);
  uVar2 = GetClut((int)(short)param_1[0x14],(int)(short)param_1[0x15]);
  param_1[0x16] = uVar2;
  *(undefined4 *)(param_1 + 0xe) = 0;
  *(undefined *)((int)param_1 + 0x35) = 0;
  *(undefined *)(param_1 + 0x1b) = 0xff;
  *(undefined *)((int)param_1 + 0x37) = 0;
  *(undefined *)(param_1 + 0x1c) = 1;
  *(undefined *)((int)param_1 + 0x39) = 0;
  *(undefined4 *)(param_1 + 0x10) = 0;
  *(undefined4 *)(param_1 + 0x12) = 0;
  param_1[0x17] = 0;
  param_1[0x18] = 0;
  param_1[0x19] = 0;
  *(undefined *)(param_1 + 10) = 0;
  return;
}



// seems to load the tiles for maps rather than sprites

void load_tiles(int param_1,u_long *param_2)

{
  RECT tile;
  
  if (*(char *)(param_1 + 0x34) == '\0') {
    tile.x = *(short *)(param_1 + 0x28);
    tile.y = *(short *)(param_1 + 0x2a);
    tile.w = 0x10;
    tile.h = 1;
    LoadImage(&tile,param_2);
  }
  else if (*(char *)(param_1 + 0x34) == '\x01') {
    LoadClut(param_2,(int)*(short *)(param_1 + 0x28),(int)*(short *)(param_1 + 0x2a));
  }
  return;
}



void FUN_80019d70(undefined *param_1,undefined4 *param_2,uint param_3)

{
  uint *puVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  undefined4 uVar6;
  uint uVar7;
  undefined *puVar8;
  undefined4 uVar9;
  uint uVar10;
  uint uVar11;
  undefined4 uVar12;
  uint uVar13;
  undefined4 *puVar14;
  undefined4 *puVar15;
  undefined8 uVar16;
  
  if (param_1[0x34] == '\0') {
    uVar2 = *(uint *)(param_1 + 0x1c);
    uVar10 = 2;
    uVar5 = 0;
    puVar8 = param_1;
    if (uVar2 == 0) {
      param_3 = 0x10;
      puVar8 = PTR_DAT_800a59b0;
      uVar16 = FUN_800143ec();
      uVar5 = (uint)((ulonglong)uVar16 >> 0x20);
      *(int *)(param_1 + 0x1c) = (int)uVar16;
      uVar2 = *(uint *)(param_1 + 0x1c);
    }
    uVar4 = (int)param_2 + 3U & 3;
    uVar3 = (uint)param_2 & 3;
    uVar3 = (*(int *)(((int)param_2 + 3U) - uVar4) << (3 - uVar4) * 8 |
            uVar5 & 0xffffffffU >> (uVar4 + 1) * 8) & -1 << (4 - uVar3) * 8 |
            *(uint *)((int)param_2 - uVar3) >> uVar3 * 8;
    uVar5 = (int)param_2 + 7U & 3;
    uVar4 = (uint)(param_2 + 1) & 3;
    uVar7 = (*(int *)(((int)param_2 + 7U) - uVar5) << (3 - uVar5) * 8 |
            (uint)puVar8 & 0xffffffffU >> (uVar5 + 1) * 8) & -1 << (4 - uVar4) * 8 |
            *(uint *)((int)(param_2 + 1) - uVar4) >> uVar4 * 8;
    uVar5 = (int)param_2 + 0xbU & 3;
    uVar4 = (uint)(param_2 + 2) & 3;
    uVar11 = (*(int *)(((int)param_2 + 0xbU) - uVar5) << (3 - uVar5) * 8 |
             uVar10 & 0xffffffffU >> (uVar5 + 1) * 8) & -1 << (4 - uVar4) * 8 |
             *(uint *)((int)(param_2 + 2) - uVar4) >> uVar4 * 8;
    uVar5 = (int)param_2 + 0xfU & 3;
    uVar10 = (uint)(param_2 + 3) & 3;
    uVar13 = (*(int *)(((int)param_2 + 0xfU) - uVar5) << (3 - uVar5) * 8 |
             param_3 & 0xffffffffU >> (uVar5 + 1) * 8) & -1 << (4 - uVar10) * 8 |
             *(uint *)((int)(param_2 + 3) - uVar10) >> uVar10 * 8;
    uVar5 = uVar2 + 3 & 3;
    puVar1 = (uint *)((uVar2 + 3) - uVar5);
    *puVar1 = *puVar1 & -1 << (uVar5 + 1) * 8 | uVar3 >> (3 - uVar5) * 8;
    uVar5 = uVar2 & 3;
    *(uint *)(uVar2 - uVar5) =
         *(uint *)(uVar2 - uVar5) & 0xffffffffU >> (4 - uVar5) * 8 | uVar3 << uVar5 * 8;
    uVar5 = uVar2 + 7 & 3;
    puVar1 = (uint *)((uVar2 + 7) - uVar5);
    *puVar1 = *puVar1 & -1 << (uVar5 + 1) * 8 | uVar7 >> (3 - uVar5) * 8;
    uVar5 = uVar2 + 4 & 3;
    puVar1 = (uint *)((uVar2 + 4) - uVar5);
    *puVar1 = *puVar1 & 0xffffffffU >> (4 - uVar5) * 8 | uVar7 << uVar5 * 8;
    uVar5 = uVar2 + 0xb & 3;
    puVar1 = (uint *)((uVar2 + 0xb) - uVar5);
    *puVar1 = *puVar1 & -1 << (uVar5 + 1) * 8 | uVar11 >> (3 - uVar5) * 8;
    uVar5 = uVar2 + 8 & 3;
    puVar1 = (uint *)((uVar2 + 8) - uVar5);
    *puVar1 = *puVar1 & 0xffffffffU >> (4 - uVar5) * 8 | uVar11 << uVar5 * 8;
    uVar5 = uVar2 + 0xf & 3;
    puVar1 = (uint *)((uVar2 + 0xf) - uVar5);
    *puVar1 = *puVar1 & -1 << (uVar5 + 1) * 8 | uVar13 >> (3 - uVar5) * 8;
    uVar5 = uVar2 + 0xc & 3;
    puVar1 = (uint *)((uVar2 + 0xc) - uVar5);
    *puVar1 = *puVar1 & 0xffffffffU >> (4 - uVar5) * 8 | uVar13 << uVar5 * 8;
    uVar5 = (int)param_2 + 0x13U & 3;
    uVar10 = (uint)(param_2 + 4) & 3;
    uVar4 = (*(int *)(((int)param_2 + 0x13U) - uVar5) << (3 - uVar5) * 8 |
            uVar3 & 0xffffffffU >> (uVar5 + 1) * 8) & -1 << (4 - uVar10) * 8 |
            *(uint *)((int)(param_2 + 4) - uVar10) >> uVar10 * 8;
    uVar5 = (int)param_2 + 0x17U & 3;
    uVar10 = (uint)(param_2 + 5) & 3;
    uVar3 = (*(int *)(((int)param_2 + 0x17U) - uVar5) << (3 - uVar5) * 8 |
            uVar7 & 0xffffffffU >> (uVar5 + 1) * 8) & -1 << (4 - uVar10) * 8 |
            *(uint *)((int)(param_2 + 5) - uVar10) >> uVar10 * 8;
    uVar5 = (int)param_2 + 0x1bU & 3;
    uVar10 = (uint)(param_2 + 6) & 3;
    uVar7 = (*(int *)(((int)param_2 + 0x1bU) - uVar5) << (3 - uVar5) * 8 |
            uVar11 & 0xffffffffU >> (uVar5 + 1) * 8) & -1 << (4 - uVar10) * 8 |
            *(uint *)((int)(param_2 + 6) - uVar10) >> uVar10 * 8;
    uVar5 = (int)param_2 + 0x1fU & 3;
    uVar10 = (uint)(param_2 + 7) & 3;
    uVar10 = (*(int *)(((int)param_2 + 0x1fU) - uVar5) << (3 - uVar5) * 8 |
             uVar13 & 0xffffffffU >> (uVar5 + 1) * 8) & -1 << (4 - uVar10) * 8 |
             *(uint *)((int)(param_2 + 7) - uVar10) >> uVar10 * 8;
    uVar5 = uVar2 + 0x13 & 3;
    puVar1 = (uint *)((uVar2 + 0x13) - uVar5);
    *puVar1 = *puVar1 & -1 << (uVar5 + 1) * 8 | uVar4 >> (3 - uVar5) * 8;
    uVar5 = uVar2 + 0x10 & 3;
    puVar1 = (uint *)((uVar2 + 0x10) - uVar5);
    *puVar1 = *puVar1 & 0xffffffffU >> (4 - uVar5) * 8 | uVar4 << uVar5 * 8;
    uVar5 = uVar2 + 0x17 & 3;
    puVar1 = (uint *)((uVar2 + 0x17) - uVar5);
    *puVar1 = *puVar1 & -1 << (uVar5 + 1) * 8 | uVar3 >> (3 - uVar5) * 8;
    uVar5 = uVar2 + 0x14 & 3;
    puVar1 = (uint *)((uVar2 + 0x14) - uVar5);
    *puVar1 = *puVar1 & 0xffffffffU >> (4 - uVar5) * 8 | uVar3 << uVar5 * 8;
    uVar5 = uVar2 + 0x1b & 3;
    puVar1 = (uint *)((uVar2 + 0x1b) - uVar5);
    *puVar1 = *puVar1 & -1 << (uVar5 + 1) * 8 | uVar7 >> (3 - uVar5) * 8;
    uVar5 = uVar2 + 0x18 & 3;
    puVar1 = (uint *)((uVar2 + 0x18) - uVar5);
    *puVar1 = *puVar1 & 0xffffffffU >> (4 - uVar5) * 8 | uVar7 << uVar5 * 8;
    uVar5 = uVar2 + 0x1f & 3;
    puVar1 = (uint *)((uVar2 + 0x1f) - uVar5);
    *puVar1 = *puVar1 & -1 << (uVar5 + 1) * 8 | uVar10 >> (3 - uVar5) * 8;
    uVar5 = uVar2 + 0x1c & 3;
    puVar1 = (uint *)((uVar2 + 0x1c) - uVar5);
    *puVar1 = *puVar1 & 0xffffffffU >> (4 - uVar5) * 8 | uVar10 << uVar5 * 8;
  }
  else if (param_1[0x34] == '\x01') {
    uVar2 = 2;
    uVar5 = 1;
    puVar8 = param_1;
    if (*(int *)(param_1 + 0x1c) == 0) {
      puVar8 = PTR_DAT_800a59b0;
      uVar16 = FUN_800143ec(PTR_DAT_800a59b0,2,0x100,0);
      uVar5 = (uint)((ulonglong)uVar16 >> 0x20);
      *(int *)(param_1 + 0x1c) = (int)uVar16;
    }
    puVar14 = *(undefined4 **)(param_1 + 0x1c);
    uVar10 = ((uint)param_2 | (uint)puVar14) & 3;
    puVar15 = param_2 + 0x80;
    if (uVar10 == 0) {
      do {
        uVar6 = param_2[1];
        uVar9 = param_2[2];
        uVar12 = param_2[3];
        *puVar14 = *param_2;
        puVar14[1] = uVar6;
        puVar14[2] = uVar9;
        puVar14[3] = uVar12;
        param_2 = param_2 + 4;
        puVar14 = puVar14 + 4;
      } while (param_2 != puVar15);
    }
    else {
      do {
        uVar4 = (int)param_2 + 3U & 3;
        uVar3 = (uint)param_2 & 3;
        uVar10 = (*(int *)(((int)param_2 + 3U) - uVar4) << (3 - uVar4) * 8 |
                 uVar10 & 0xffffffffU >> (uVar4 + 1) * 8) & -1 << (4 - uVar3) * 8 |
                 *(uint *)((int)param_2 - uVar3) >> uVar3 * 8;
        uVar4 = (int)param_2 + 7U & 3;
        uVar3 = (uint)(param_2 + 1) & 3;
        uVar5 = (*(int *)(((int)param_2 + 7U) - uVar4) << (3 - uVar4) * 8 |
                uVar5 & 0xffffffffU >> (uVar4 + 1) * 8) & -1 << (4 - uVar3) * 8 |
                *(uint *)((int)(param_2 + 1) - uVar3) >> uVar3 * 8;
        uVar4 = (int)param_2 + 0xbU & 3;
        uVar3 = (uint)(param_2 + 2) & 3;
        puVar8 = (undefined *)
                 ((*(int *)(((int)param_2 + 0xbU) - uVar4) << (3 - uVar4) * 8 |
                  (uint)puVar8 & 0xffffffffU >> (uVar4 + 1) * 8) & -1 << (4 - uVar3) * 8 |
                 *(uint *)((int)(param_2 + 2) - uVar3) >> uVar3 * 8);
        uVar4 = (int)param_2 + 0xfU & 3;
        uVar3 = (uint)(param_2 + 3) & 3;
        uVar2 = (*(int *)(((int)param_2 + 0xfU) - uVar4) << (3 - uVar4) * 8 |
                uVar2 & 0xffffffffU >> (uVar4 + 1) * 8) & -1 << (4 - uVar3) * 8 |
                *(uint *)((int)(param_2 + 3) - uVar3) >> uVar3 * 8;
        uVar4 = (int)puVar14 + 3U & 3;
        puVar1 = (uint *)(((int)puVar14 + 3U) - uVar4);
        *puVar1 = *puVar1 & -1 << (uVar4 + 1) * 8 | uVar10 >> (3 - uVar4) * 8;
        uVar4 = (uint)puVar14 & 3;
        *(uint *)((int)puVar14 - uVar4) =
             *(uint *)((int)puVar14 - uVar4) & 0xffffffffU >> (4 - uVar4) * 8 | uVar10 << uVar4 * 8;
        uVar4 = (int)puVar14 + 7U & 3;
        puVar1 = (uint *)(((int)puVar14 + 7U) - uVar4);
        *puVar1 = *puVar1 & -1 << (uVar4 + 1) * 8 | uVar5 >> (3 - uVar4) * 8;
        uVar4 = (uint)(puVar14 + 1) & 3;
        puVar1 = (uint *)((int)(puVar14 + 1) - uVar4);
        *puVar1 = *puVar1 & 0xffffffffU >> (4 - uVar4) * 8 | uVar5 << uVar4 * 8;
        uVar4 = (int)puVar14 + 0xbU & 3;
        puVar1 = (uint *)(((int)puVar14 + 0xbU) - uVar4);
        *puVar1 = *puVar1 & -1 << (uVar4 + 1) * 8 | (uint)puVar8 >> (3 - uVar4) * 8;
        uVar4 = (uint)(puVar14 + 2) & 3;
        puVar1 = (uint *)((int)(puVar14 + 2) - uVar4);
        *puVar1 = *puVar1 & 0xffffffffU >> (4 - uVar4) * 8 | (int)puVar8 << uVar4 * 8;
        uVar4 = (int)puVar14 + 0xfU & 3;
        puVar1 = (uint *)(((int)puVar14 + 0xfU) - uVar4);
        *puVar1 = *puVar1 & -1 << (uVar4 + 1) * 8 | uVar2 >> (3 - uVar4) * 8;
        uVar4 = (uint)(puVar14 + 3) & 3;
        puVar1 = (uint *)((int)(puVar14 + 3) - uVar4);
        *puVar1 = *puVar1 & 0xffffffffU >> (4 - uVar4) * 8 | uVar2 << uVar4 * 8;
        param_2 = param_2 + 4;
        puVar14 = puVar14 + 4;
      } while (param_2 != puVar15);
    }
  }
  return;
}



void FUN_80019f28(undefined4 *param_1,undefined param_2,undefined param_3,undefined param_4,
                 undefined param_5)

{
  if (param_1[7] != 0) {
    *(undefined *)((int)param_1 + 0x35) = param_3;
    *(undefined *)((int)param_1 + 0x36) = param_4;
    *(undefined *)((int)param_1 + 0x37) = param_5;
    *(undefined *)(param_1 + 0xe) = param_2;
    *(undefined *)((int)param_1 + 0x39) = param_2;
    *param_1 = 0xffff0000;
    param_1[1] = &LAB_80019918;
  }
  return;
}



void FUN_8001a0c4(undefined2 *param_1,undefined2 param_2)

{
  *(undefined **)(param_1 + 0xc) = &DAT_800104ac;
  *param_1 = 0;
  param_1[1] = 0;
  *(undefined4 *)(param_1 + 2) = 0;
  *(undefined *)(param_1 + 10) = 1;
  param_1[4] = 0;
  param_1[5] = 0;
  *(undefined4 *)(param_1 + 6) = 0;
  param_1[8] = param_2;
  param_1[9] = 0;
  *(undefined **)(param_1 + 0xc) = &DAT_8001046c;
  *(undefined4 *)(param_1 + 4) = 0xffff0000;
  *(undefined **)(param_1 + 6) = &LAB_80020284;
  param_1[0xe] = 0;
  param_1[0xf] = 0;
  *(undefined4 *)(param_1 + 0x10) = 0;
  param_1[0x12] = 0;
  param_1[0x13] = 0;
  *(undefined4 *)(param_1 + 0x14) = 0;
  param_1[0x16] = 0;
  param_1[0x17] = 0;
  *(undefined4 *)(param_1 + 0x18) = 0;
  param_1[0x34] = 0;
  param_1[0x35] = 0;
  *(undefined4 *)(param_1 + 0x1a) = 0;
  *(undefined *)(param_1 + 0x3a) = 0;
  *(undefined *)((int)param_1 + 0x75) = 0;
  param_1[0x1c] = 0;
  param_1[0x1d] = 0;
  param_1[0x1e] = 0;
  param_1[0x1f] = 0;
  param_1[0x20] = 0;
  param_1[0x21] = 0;
  param_1[0x22] = 0;
  param_1[0x23] = 0;
  param_1[0x24] = 0;
  param_1[0x25] = 0;
  param_1[0x26] = 0;
  param_1[0x27] = 0;
  *(undefined *)((int)param_1 + 0x77) = 0;
  param_1[0x38] = 0;
  *(undefined4 *)(param_1 + 0x28) = 0x10000;
  *(undefined4 *)(param_1 + 0x2a) = 0x10000;
  *(undefined4 *)(param_1 + 0x2c) = 0x10000;
  *(undefined4 *)(param_1 + 0x2e) = 0x10000;
  param_1[0x39] = 0;
  *(undefined4 *)(param_1 + 0x30) = 0x10000;
  *(undefined4 *)(param_1 + 0x32) = 0x10000;
  param_1[0x36] = 0;
  param_1[0x37] = 0;
  *(undefined *)(param_1 + 0x3b) = 0;
  return;
}



void FUN_8001a3a8(int param_1,short param_2,short param_3,short param_4,undefined param_5)

{
  undefined4 uVar1;
  
  uVar1 = FUN_800143ec(PTR_DAT_800a59b0,0x3c,1,0);
  uVar1 = FUN_80015468(uVar1,(int)param_2,(int)(short)(param_3 + 3U & 0xfffc),(int)param_4,param_5);
  *(undefined4 *)(param_1 + 0x34) = uVar1;
  return;
}



void FUN_8001a444(int param_1,uint param_2)

{
  uint uVar1;
  uint *puVar2;
  uint uVar3;
  uint uVar4;
  undefined8 uVar5;
  
  uVar5 = FUN_8001a498();
  uVar1 = param_1 + 0x4bU & 3;
  uVar4 = param_1 + 0x48U & 3;
  uVar3 = (*(int *)((param_1 + 0x4bU) - uVar1) << (3 - uVar1) * 8 |
          (uint)uVar5 & 0xffffffffU >> (uVar1 + 1) * 8) & -1 << (4 - uVar4) * 8 |
          *(uint *)((param_1 + 0x48U) - uVar4) >> uVar4 * 8;
  uVar1 = param_1 + 0x4fU & 3;
  uVar4 = param_1 + 0x4cU & 3;
  uVar4 = (*(int *)((param_1 + 0x4fU) - uVar1) << (3 - uVar1) * 8 |
          (uint)((ulonglong)uVar5 >> 0x20) & 0xffffffffU >> (uVar1 + 1) * 8) & -1 << (4 - uVar4) * 8
          | *(uint *)((param_1 + 0x4cU) - uVar4) >> uVar4 * 8;
  uVar1 = param_2 + 3 & 3;
  puVar2 = (uint *)((param_2 + 3) - uVar1);
  *puVar2 = *puVar2 & -1 << (uVar1 + 1) * 8 | uVar3 >> (3 - uVar1) * 8;
  uVar1 = param_2 & 3;
  *(uint *)(param_2 - uVar1) =
       *(uint *)(param_2 - uVar1) & 0xffffffffU >> (4 - uVar1) * 8 | uVar3 << uVar1 * 8;
  uVar1 = param_2 + 7 & 3;
  puVar2 = (uint *)((param_2 + 7) - uVar1);
  *puVar2 = *puVar2 & -1 << (uVar1 + 1) * 8 | uVar4 >> (3 - uVar1) * 8;
  uVar1 = param_2 + 4 & 3;
  puVar2 = (uint *)((param_2 + 4) - uVar1);
  *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar1) * 8 | uVar4 << uVar1 * 8;
  return;
}



void FUN_8001a498(int param_1,undefined4 param_2,short param_3)

{
  short sVar1;
  undefined2 uVar2;
  int iVar3;
  int iVar4;
  short sVar5;
  short in_t0;
  code *pcVar6;
  short unaff_s2;
  short unaff_s4;
  short unaff_s6;
  short local_50;
  short local_40;
  short local_28;
  
  if (*(char *)(param_1 + 0x77) != '\0') {
    return;
  }
  if (*(char *)(param_1 + 0x74) == '\0') {
    iVar4 = (int)*(short *)(param_1 + 0x26);
    sVar5 = *(short *)(param_1 + 0x68) + *(short *)(param_1 + 0x40);
    if (iVar4 == 0) {
      *(short *)(param_1 + 0x48) = sVar5;
    }
    else {
      if (iVar4 < 1) {
        pcVar6 = *(code **)(param_1 + 0x28);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
        param_3 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar6 = *(code **)(iVar3 + -4);
      }
      iVar3 = (int)*(short *)(param_1 + 0x24);
      if (0 < iVar4 << 0x10) {
        iVar3 = param_3 + iVar3;
      }
      uVar2 = (*pcVar6)(param_1 + iVar3,(int)sVar5);
      *(undefined2 *)(param_1 + 0x48) = uVar2;
    }
    sVar5 = *(short *)(param_1 + 0x44) + *(short *)(param_1 + 0x68) + *(short *)(param_1 + 0x40) +
            -1;
    iVar4 = (int)*(short *)(param_1 + 0x26);
    if (iVar4 != 0) {
      if (iVar4 < 1) {
        pcVar6 = *(code **)(param_1 + 0x28);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
        unaff_s4 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar6 = *(code **)(iVar3 + -4);
      }
      sVar1 = *(short *)(param_1 + 0x24);
      unaff_s2 = unaff_s4;
      goto joined_r0x8001a6e0;
    }
LAB_8001a710:
    *(short *)(param_1 + 0x4c) = sVar5;
  }
  else {
    sVar5 = ((*(short *)(param_1 + 0x68) - *(short *)(param_1 + 0x40)) - *(short *)(param_1 + 0x44))
            + 1;
    iVar4 = (int)*(short *)(param_1 + 0x26);
    if (iVar4 != 0) {
      if (iVar4 < 1) {
        pcVar6 = *(code **)(param_1 + 0x28);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
        in_t0 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar6 = *(code **)(iVar3 + -4);
      }
      iVar3 = (int)*(short *)(param_1 + 0x24);
      if (0 < iVar4 << 0x10) {
        iVar3 = in_t0 + iVar3;
      }
      sVar5 = (*pcVar6)(param_1 + iVar3,(int)sVar5);
    }
    *(short *)(param_1 + 0x48) = sVar5;
    iVar4 = (int)*(short *)(param_1 + 0x26);
    sVar5 = *(short *)(param_1 + 0x68) - *(short *)(param_1 + 0x40);
    if (iVar4 == 0) goto LAB_8001a710;
    if (iVar4 < 1) {
      pcVar6 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      unaff_s2 = (short)*(undefined4 *)(iVar3 + -8);
      pcVar6 = *(code **)(iVar3 + -4);
    }
    sVar1 = *(short *)(param_1 + 0x24);
joined_r0x8001a6e0:
    iVar3 = (int)sVar1;
    if (0 < iVar4 << 0x10) {
      iVar3 = unaff_s2 + iVar3;
    }
    uVar2 = (*pcVar6)(param_1 + iVar3,(int)sVar5);
    *(undefined2 *)(param_1 + 0x4c) = uVar2;
  }
  if (*(char *)(param_1 + 0x75) == '\0') {
    iVar4 = (int)*(short *)(param_1 + 0x2e);
    sVar5 = *(short *)(param_1 + 0x6a) + *(short *)(param_1 + 0x42);
    if (iVar4 == 0) {
      *(short *)(param_1 + 0x4a) = sVar5;
    }
    else {
      if (iVar4 < 1) {
        pcVar6 = *(code **)(param_1 + 0x30);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
        unaff_s6 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar6 = *(code **)(iVar3 + -4);
      }
      iVar3 = (int)*(short *)(param_1 + 0x2c);
      if (0 < iVar4 << 0x10) {
        iVar3 = unaff_s6 + iVar3;
      }
      uVar2 = (*pcVar6)(param_1 + iVar3,(int)sVar5);
      *(undefined2 *)(param_1 + 0x4a) = uVar2;
    }
    sVar5 = *(short *)(param_1 + 0x46) + *(short *)(param_1 + 0x6a) + *(short *)(param_1 + 0x42) +
            -1;
    iVar4 = (int)*(short *)(param_1 + 0x2e);
    if (iVar4 != 0) {
      if (iVar4 < 1) {
        pcVar6 = *(code **)(param_1 + 0x30);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
        local_28 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar6 = *(code **)(iVar3 + -4);
      }
      sVar1 = *(short *)(param_1 + 0x2c);
      goto joined_r0x8001a958;
    }
  }
  else {
    sVar5 = ((*(short *)(param_1 + 0x6a) - *(short *)(param_1 + 0x42)) - *(short *)(param_1 + 0x46))
            + 1;
    iVar4 = (int)*(short *)(param_1 + 0x2e);
    if (iVar4 != 0) {
      if (iVar4 < 1) {
        pcVar6 = *(code **)(param_1 + 0x30);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
        local_50 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar6 = *(code **)(iVar3 + -4);
      }
      iVar3 = (int)*(short *)(param_1 + 0x2c);
      if (0 < iVar4 << 0x10) {
        iVar3 = local_50 + iVar3;
      }
      sVar5 = (*pcVar6)(param_1 + iVar3,(int)sVar5);
    }
    *(short *)(param_1 + 0x4a) = sVar5;
    iVar4 = (int)*(short *)(param_1 + 0x2e);
    sVar5 = *(short *)(param_1 + 0x6a) - *(short *)(param_1 + 0x42);
    if (iVar4 != 0) {
      if (iVar4 < 1) {
        pcVar6 = *(code **)(param_1 + 0x30);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
        local_40 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar6 = *(code **)(iVar3 + -4);
      }
      sVar1 = *(short *)(param_1 + 0x2c);
      local_28 = local_40;
joined_r0x8001a958:
      iVar3 = (int)sVar1;
      if (0 < iVar4 << 0x10) {
        iVar3 = local_28 + iVar3;
      }
      uVar2 = (*pcVar6)(param_1 + iVar3,(int)sVar5);
      *(undefined2 *)(param_1 + 0x4e) = uVar2;
      goto LAB_8001a99c;
    }
  }
  *(short *)(param_1 + 0x4e) = sVar5;
LAB_8001a99c:
  *(undefined *)(param_1 + 0x77) = 1;
  return;
}



void FUN_8001aab0(int param_1,char param_2)

{
  if (param_2 == '\x02') {
    param_2 = *(char *)(param_1 + 0x74) == '\0';
  }
  *(char *)(param_1 + 0x74) = param_2;
  *(undefined *)(param_1 + 0x76) = 1;
  return;
}



bool FUN_8001b35c(int param_1,short param_2,short param_3)

{
  bool bVar1;
  
  FUN_8001a498();
  bVar1 = false;
  if (((*(short *)(param_1 + 0x48) <= param_2) && (param_2 <= *(short *)(param_1 + 0x4c))) &&
     (*(short *)(param_1 + 0x4a) <= param_3)) {
    bVar1 = param_3 <= *(short *)(param_1 + 0x4e);
  }
  return bVar1;
}



bool FUN_8001b3ec(int param_1,undefined4 param_2,undefined4 param_3)

{
  bool bVar1;
  short local_res4;
  short sStackX_6;
  short local_res8;
  short sStackX_a;
  
  FUN_8001a498();
  local_res8 = (short)param_3;
  bVar1 = false;
  if (((*(short *)(param_1 + 0x48) <= local_res8) &&
      (local_res4 = (short)param_2, bVar1 = false, local_res4 <= *(short *)(param_1 + 0x4c))) &&
     (sStackX_a = (short)((uint)param_3 >> 0x10), bVar1 = false,
     *(short *)(param_1 + 0x4a) <= sStackX_a)) {
    sStackX_6 = (short)((uint)param_2 >> 0x10);
    bVar1 = sStackX_6 <= *(short *)(param_1 + 0x4e);
  }
  return bVar1;
}



void FUN_8001b478(int param_1,undefined2 param_2,undefined2 param_3,undefined4 param_4)

{
  FUN_8001a498();
  FUN_800226f4(BUF_PTR,*(undefined4 *)(param_1 + 0x48),*(undefined4 *)(param_1 + 0x4c),param_2,
               param_3,param_4,param_1);
  return;
}



void FUN_8001b590(int param_1,undefined2 param_2,undefined2 param_3,undefined4 param_4)

{
  short sVar1;
  short sVar2;
  int iVar3;
  int iVar4;
  short in_t0;
  code *pcVar5;
  short unaff_s2;
  
  iVar4 = (int)*(short *)(param_1 + 0x26);
  sVar1 = *(short *)(param_1 + 0x68);
  if (iVar4 != 0) {
    if (iVar4 < 1) {
      pcVar5 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      in_t0 = (short)*(undefined4 *)(iVar3 + -8);
      pcVar5 = *(code **)(iVar3 + -4);
    }
    iVar3 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar4 << 0x10) {
      iVar3 = in_t0 + iVar3;
    }
    sVar1 = (*pcVar5)(param_1 + iVar3,(int)sVar1);
  }
  iVar4 = (int)*(short *)(param_1 + 0x2e);
  sVar2 = *(short *)(param_1 + 0x6a);
  if (iVar4 != 0) {
    if (iVar4 < 1) {
      pcVar5 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      unaff_s2 = (short)*(undefined4 *)(iVar3 + -8);
      pcVar5 = *(code **)(iVar3 + -4);
    }
    iVar3 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar4 << 0x10) {
      iVar3 = unaff_s2 + iVar3;
    }
    sVar2 = (*pcVar5)(param_1 + iVar3,(int)sVar2);
  }
  FUN_800224cc(BUF_PTR,(int)sVar1,(int)sVar2,param_2,param_3,param_4,param_1);
  return;
}



undefined4 FUN_8001b928(int param_1)

{
  short sVar1;
  short sVar2;
  int iVar3;
  int iVar4;
  short in_t0;
  code *pcVar5;
  short sVar6;
  short sVar7;
  short unaff_s4;
  short unaff_s6;
  short local_58;
  short local_56;
  short local_30;
  
  if (*(char *)(param_1 + 0x74) == '\0') {
    local_58 = *(short *)(param_1 + 0x68) + *(short *)(param_1 + 0x38);
    sVar1 = *(short *)(param_1 + 0x3c) + *(short *)(param_1 + 0x68) + *(short *)(param_1 + 0x38) +
            -1;
  }
  else {
    local_58 = ((*(short *)(param_1 + 0x68) - *(short *)(param_1 + 0x38)) -
               *(short *)(param_1 + 0x3c)) + 1;
    sVar1 = *(short *)(param_1 + 0x68) - *(short *)(param_1 + 0x38);
  }
  if (*(char *)(param_1 + 0x75) == '\0') {
    local_56 = *(short *)(param_1 + 0x6a) + *(short *)(param_1 + 0x3a);
    sVar2 = *(short *)(param_1 + 0x3e) + *(short *)(param_1 + 0x6a) + *(short *)(param_1 + 0x3a) +
            -1;
  }
  else {
    local_56 = ((*(short *)(param_1 + 0x6a) - *(short *)(param_1 + 0x3a)) -
               *(short *)(param_1 + 0x3e)) + 1;
    sVar2 = *(short *)(param_1 + 0x6a) - *(short *)(param_1 + 0x3a);
  }
  if (*(int *)(param_1 + 0x60) == 0x10000) {
    sVar6 = *(short *)(BUF_PTR + 0x44);
  }
  else {
    sVar6 = (short)((uint)((int)*(short *)(BUF_PTR + 0x44) * *(int *)(param_1 + 0x60)) >> 0x10);
  }
  if (*(int *)(param_1 + 100) == 0x10000) {
    sVar7 = *(short *)(BUF_PTR + 0x46);
  }
  else {
    sVar7 = (short)((uint)((int)*(short *)(BUF_PTR + 0x46) * *(int *)(param_1 + 100)) >> 0x10);
  }
  iVar4 = (int)*(short *)(param_1 + 0x26);
  if (iVar4 != 0) {
    if (iVar4 < 1) {
      pcVar5 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      in_t0 = (short)*(undefined4 *)(iVar3 + -8);
      pcVar5 = *(code **)(iVar3 + -4);
    }
    iVar3 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar4 << 0x10) {
      iVar3 = in_t0 + iVar3;
    }
    sVar1 = (*pcVar5)(param_1 + iVar3,(int)sVar1);
  }
  if (-0x11 < (int)sVar1 - (int)sVar6) {
    iVar4 = (int)*(short *)(param_1 + 0x26);
    if (iVar4 != 0) {
      if (iVar4 < 1) {
        pcVar5 = *(code **)(param_1 + 0x28);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
        unaff_s4 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar5 = *(code **)(iVar3 + -4);
      }
      iVar3 = (int)*(short *)(param_1 + 0x24);
      if (0 < iVar4 << 0x10) {
        iVar3 = unaff_s4 + iVar3;
      }
      local_58 = (*pcVar5)(param_1 + iVar3,(int)local_58);
    }
    if ((int)local_58 - (int)sVar6 <= *(short *)PTR_DAT_800a59b0 + 0x10) {
      iVar4 = (int)*(short *)(param_1 + 0x2e);
      if (iVar4 != 0) {
        if (iVar4 < 1) {
          pcVar5 = *(code **)(param_1 + 0x30);
        }
        else {
          iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
          unaff_s6 = (short)*(undefined4 *)(iVar3 + -8);
          pcVar5 = *(code **)(iVar3 + -4);
        }
        iVar3 = (int)*(short *)(param_1 + 0x2c);
        if (0 < iVar4 << 0x10) {
          iVar3 = unaff_s6 + iVar3;
        }
        sVar2 = (*pcVar5)(param_1 + iVar3,(int)sVar2);
      }
      if (-0x11 < (int)sVar2 - (int)sVar7) {
        iVar4 = (int)*(short *)(param_1 + 0x2e);
        if (iVar4 != 0) {
          if (iVar4 < 1) {
            pcVar5 = *(code **)(param_1 + 0x30);
          }
          else {
            iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
            local_30 = (short)*(undefined4 *)(iVar3 + -8);
            pcVar5 = *(code **)(iVar3 + -4);
          }
          iVar3 = (int)*(short *)(param_1 + 0x2c);
          if (0 < iVar4 << 0x10) {
            iVar3 = local_30 + iVar3;
          }
          local_56 = (*pcVar5)(param_1 + iVar3,(int)local_56);
        }
        if ((int)local_56 - (int)sVar7 <= *(short *)(PTR_DAT_800a59b0 + 2) + 0x10) {
          return 0;
        }
      }
    }
  }
  return 1;
}



bool FUN_8001c174(int param_1)

{
  short sVar1;
  short sVar2;
  int iVar3;
  int iVar4;
  short in_t2;
  code *pcVar5;
  short sVar6;
  short local_16;
  
  if (*(char *)(param_1 + 0x74) == '\0') {
    sVar1 = *(short *)(param_1 + 0x68) + *(short *)(param_1 + 0x38);
    sVar2 = *(short *)(param_1 + 0x3c) + *(short *)(param_1 + 0x68) + *(short *)(param_1 + 0x38) +
            -1;
  }
  else {
    sVar1 = ((*(short *)(param_1 + 0x68) - *(short *)(param_1 + 0x38)) - *(short *)(param_1 + 0x3c))
            + 1;
    sVar2 = *(short *)(param_1 + 0x68) - *(short *)(param_1 + 0x38);
  }
  if (*(char *)(param_1 + 0x75) == '\0') {
    local_16 = *(short *)(param_1 + 0x6a) + *(short *)(param_1 + 0x3a);
  }
  else {
    local_16 = ((*(short *)(param_1 + 0x6a) - *(short *)(param_1 + 0x3a)) -
               *(short *)(param_1 + 0x3e)) + 1;
  }
  if (*(int *)(param_1 + 100) == 0x10000) {
    sVar6 = *(short *)(BUF_PTR + 0x46);
  }
  else {
    sVar6 = (short)((uint)((int)*(short *)(BUF_PTR + 0x46) * *(int *)(param_1 + 100)) >> 0x10);
  }
  iVar4 = (int)*(short *)(param_1 + 0x2e);
  if (iVar4 != 0) {
    if (iVar4 < 1) {
      pcVar5 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar3 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      in_t2 = (short)*(undefined4 *)(iVar3 + -8);
      pcVar5 = *(code **)(iVar3 + -4);
    }
    iVar3 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar4 << 0x10) {
      iVar3 = in_t2 + iVar3;
    }
    local_16 = (*pcVar5)(param_1 + iVar3,(int)local_16,param_1,pcVar5,sVar1,sVar2);
  }
  return *(short *)(PTR_DAT_800a59b0 + 2) + 0x10 < (int)local_16 - (int)sVar6;
}



void FUN_8001c360(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  
  iVar5 = *(int *)(BUF_PTR + 0x11c);
  if (iVar5 == 0x10000) {
    *(undefined4 *)(param_1 + 0x24) = 0;
    *(undefined4 *)(param_1 + 0x28) = 0;
    *(undefined4 *)(param_1 + 0x2c) = 0;
    *(undefined4 *)(param_1 + 0x30) = 0;
  }
  else {
    *(undefined4 *)(param_1 + 0x24) = 0xffff0000;
    *(undefined **)(param_1 + 0x28) = &LAB_8001a268;
    *(undefined4 *)(param_1 + 0x2c) = 0xffff0000;
    *(undefined **)(param_1 + 0x30) = &LAB_8001a298;
    *(int *)(param_1 + 0x58) = iVar5;
    iVar1 = *(int *)(param_1 + 0x58);
    iVar4 = (int)*(short *)(param_1 + 0x68) << 0x10;
    if (iVar1 == 0) {
      trap(0x1c00);
    }
    if ((iVar1 == -1) && (iVar4 == -0x80000000)) {
      trap(0x1800);
    }
    *(int *)(param_1 + 0x5c) = iVar5;
    iVar3 = *(int *)(param_1 + 0x5c);
    iVar2 = (int)*(short *)(param_1 + 0x6a) << 0x10;
    if (iVar3 == 0) {
      trap(0x1c00);
    }
    if ((iVar3 == -1) && (iVar2 == -0x80000000)) {
      trap(0x1800);
    }
    *(int *)(param_1 + 0x50) = iVar5;
    *(int *)(param_1 + 0x54) = iVar5;
    *(short *)(param_1 + 0x68) = (short)(iVar4 / iVar1);
    *(short *)(param_1 + 0x6a) = (short)(iVar2 / iVar3);
  }
  return;
}



void FUN_8001c4a0(int param_1,undefined4 param_2)

{
  short sVar1;
  int iVar2;
  int iVar3;
  short in_t0;
  code *pcVar4;
  short sVar5;
  
  if (*(int *)(param_1 + 0x60) == 0x10000) {
    sVar5 = *(short *)(BUF_PTR + 0x44);
  }
  else {
    sVar5 = (short)((uint)((int)*(short *)(BUF_PTR + 0x44) * *(int *)(param_1 + 0x60)) >> 0x10);
  }
  iVar3 = (int)*(short *)(param_1 + 0x26);
  sVar1 = *(short *)(param_1 + 0x68);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar2 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      in_t0 = (short)*(undefined4 *)(iVar2 + -8);
      pcVar4 = *(code **)(iVar2 + -4);
    }
    iVar2 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar3 << 0x10) {
      iVar2 = in_t0 + iVar2;
    }
    sVar1 = (*pcVar4)(param_1 + iVar2,(int)sVar1);
  }
  FUN_8007c348(param_2,(int)sVar1 - (int)sVar5,0);
  return;
}



void FUN_8001c5b0(int param_1,int param_2)

{
  short sVar1;
  int iVar2;
  int iVar3;
  short in_t0;
  code *pcVar4;
  short sVar5;
  
  if (-1 < param_2) {
    if (*(int *)(param_1 + 0x60) == 0x10000) {
      sVar5 = *(short *)(BUF_PTR + 0x44);
    }
    else {
      sVar5 = (short)((uint)((int)*(short *)(BUF_PTR + 0x44) * *(int *)(param_1 + 0x60)) >> 0x10);
    }
    iVar3 = (int)*(short *)(param_1 + 0x26);
    sVar1 = *(short *)(param_1 + 0x68);
    if (iVar3 != 0) {
      if (iVar3 < 1) {
        pcVar4 = *(code **)(param_1 + 0x28);
      }
      else {
        iVar2 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
        in_t0 = (short)*(undefined4 *)(iVar2 + -8);
        pcVar4 = *(code **)(iVar2 + -4);
      }
      iVar2 = (int)*(short *)(param_1 + 0x24);
      if (0 < iVar3 << 0x10) {
        iVar2 = in_t0 + iVar2;
      }
      sVar1 = (*pcVar4)(param_1 + iVar2,(int)sVar1);
    }
    FUN_8007c9e8(param_2,(int)sVar1 - (int)sVar5);
  }
  return;
}



int FUN_8001c6c4(int param_1,short param_2)

{
  FUN_8001a0c4(param_1,(int)param_2);
  *(undefined **)(param_1 + 0x18) = &DAT_8001044c;
  FUN_8007bb80(param_1 + 0x78);
  FUN_80019548(param_1 + 0x8c);
  FUN_8001c97c(param_1);
  return param_1;
}



undefined4 *
FUN_8001c71c(undefined4 *param_1,undefined4 param_2,short param_3,undefined2 param_4,
            undefined2 param_5,undefined param_6)

{
  undefined uVar1;
  undefined uVar2;
  int iVar3;
  
  FUN_8001a0c4(param_1,0x44c);
  param_1[6] = &DAT_8001044c;
  FUN_8007bb80(param_1 + 0x1e);
  FUN_80019548(param_1 + 0x23);
  FUN_8001c97c(param_1);
  *(undefined *)((int)param_1 + 0xf7) = param_6;
  *param_1 = 0xffff0000;
  param_1[1] = FUN_8001cb84;
  if (*(char *)((int)param_1 + 0xf7) == '\0') {
    FUN_8001cda8(param_1,(int)param_3,param_2);
  }
  else {
    FUN_8001d020(param_1,(int)param_3);
  }
  *(undefined2 *)(param_1 + 0x1a) = param_4;
  *(undefined2 *)((int)param_1 + 0x6a) = param_5;
  FUN_8001d07c(param_1,param_2,1);
  iVar3 = param_1[0xd];
  if (iVar3 != 0) {
    uVar1 = *(undefined *)(BUF_PTR + 0x125);
    uVar2 = *(undefined *)(BUF_PTR + 0x126);
    *(undefined *)(iVar3 + 0x34) = *(undefined *)(BUF_PTR + 0x124);
    *(undefined *)(iVar3 + 0x35) = uVar1;
    *(undefined *)(iVar3 + 0x36) = uVar2;
    *(undefined *)(param_1[0xd] + 0x33) = 1;
  }
  return param_1;
}



undefined4 *
FUN_8001c864(undefined4 *param_1,undefined4 *param_2,short param_3,undefined2 param_4,
            undefined2 param_5)

{
  undefined uVar1;
  undefined uVar2;
  int iVar3;
  
  FUN_8001a0c4(param_1,0x44c);
  param_1[6] = &DAT_8001044c;
  FUN_8007bb80(param_1 + 0x1e);
  FUN_80019548(param_1 + 0x23);
  FUN_8001c97c(param_1);
  *param_1 = 0xffff0000;
  param_1[1] = FUN_8001cb84;
  FUN_8001cea0(param_1,(int)param_3,param_2);
  *(undefined2 *)(param_1 + 0x1a) = param_4;
  *(undefined2 *)((int)param_1 + 0x6a) = param_5;
  FUN_8001d07c(param_1,*param_2,1);
  iVar3 = param_1[0xd];
  if (iVar3 != 0) {
    uVar1 = *(undefined *)(BUF_PTR + 0x125);
    uVar2 = *(undefined *)(BUF_PTR + 0x126);
    *(undefined *)(iVar3 + 0x34) = *(undefined *)(BUF_PTR + 0x124);
    *(undefined *)(iVar3 + 0x35) = uVar1;
    *(undefined *)(iVar3 + 0x36) = uVar2;
    *(undefined *)(param_1[0xd] + 0x33) = 1;
  }
  return param_1;
}



void FUN_8001c97c(int param_1)

{
  undefined *puVar1;
  undefined4 uVar2;
  
  *(undefined *)(param_1 + 0xfe) = 1;
  *(undefined *)(param_1 + 0xfd) = 0;
  *(undefined *)(param_1 + 0xf6) = 1;
  *(undefined *)(param_1 + 0xf7) = 0;
  *(undefined *)(param_1 + 0xf8) = 0;
  *(undefined2 *)(param_1 + 0x6c) = 0;
  *(undefined2 *)(param_1 + 0x6e) = 0;
  *(undefined4 *)(param_1 + 0xcc) = 0;
  *(undefined2 *)(param_1 + 0xda) = 0;
  *(undefined2 *)(param_1 + 0xdc) = 0;
  *(undefined2 *)(param_1 + 0xde) = 0;
  *(undefined *)(param_1 + 0xf0) = 0;
  *(undefined *)(param_1 + 0xf1) = 1;
  *(undefined *)(param_1 + 0xf2) = 1;
  *(undefined2 *)(param_1 + 0xec) = 0;
  *(undefined4 *)(param_1 + 0xb4) = 0;
  *(undefined4 *)(param_1 + 0xb8) = 0;
  *(undefined2 *)(param_1 + 0xe6) = 0;
  *(undefined2 *)(param_1 + 0xe8) = 0;
  *(undefined2 *)(param_1 + 0xe0) = 0;
  *(undefined4 *)(param_1 + 0x94) = 0;
  *(undefined2 *)(param_1 + 0x98) = 0;
  *(undefined2 *)(param_1 + 0x9a) = 0;
  *(undefined4 *)(param_1 + 0x9c) = 0;
  *(undefined2 *)(param_1 + 0xa0) = 0;
  *(undefined2 *)(param_1 + 0xa2) = 0;
  *(undefined4 *)(param_1 + 0xa4) = 0;
  *(undefined2 *)(param_1 + 0xa8) = 0;
  *(undefined2 *)(param_1 + 0xaa) = 0;
  *(undefined4 *)(param_1 + 0xac) = 0;
  *(undefined4 *)(param_1 + 0xb0) = 0;
  puVar1 = PTR_DAT_800a59b0;
  *(undefined4 *)(param_1 + 0xd4) = 0;
  uVar2 = FUN_800143ec(puVar1,0x18,1,0);
  *(undefined4 *)(param_1 + 0x90) = uVar2;
  *(undefined4 *)(param_1 + 0xd0) = 0;
  *(undefined2 *)(param_1 + 0xea) = 0;
  *(undefined *)(param_1 + 0xf9) = 0;
  *(undefined2 *)(param_1 + 0xee) = 0;
  *(undefined *)(param_1 + 0xfa) = 0;
  *(undefined *)(param_1 + 0xfb) = 0;
  *(undefined *)(param_1 + 0xfc) = 0;
  return;
}



void FUN_8001cb84(int param_1)

{
  ushort uVar1;
  int iVar2;
  int iVar3;
  short unaff_s2;
  code *pcVar4;
  
  FUN_8001d28c();
  iVar3 = (int)*(short *)(param_1 + 0x1e);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x20);
    }
    else {
      iVar2 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x20));
      unaff_s2 = (short)*(undefined4 *)(iVar2 + -8);
      pcVar4 = *(code **)(iVar2 + -4);
    }
    iVar2 = (int)*(short *)(param_1 + 0x1c);
    if (0 < iVar3 << 0x10) {
      iVar2 = unaff_s2 + iVar2;
    }
    (*pcVar4)(param_1 + iVar2);
  }
  uVar1 = *(ushort *)(param_1 + 0xe0);
  *(undefined *)(param_1 + 0x77) = 0;
  if (((uVar1 & 3) == 1) && (FUN_8001d550(param_1), (uVar1 >> 3 & 1) != 0)) {
    FUN_8001d744(param_1);
  }
  return;
}



void FUN_8001cc68(int param_1)

{
  short sVar1;
  
  if (*(char *)(param_1 + 0x74) == '\0') {
    sVar1 = *(short *)(param_1 + 0x68) + *(short *)(param_1 + 0xe6);
  }
  else {
    sVar1 = *(short *)(param_1 + 0x68) - *(short *)(param_1 + 0xe6);
  }
  *(short *)(param_1 + 0x68) = sVar1;
  if (*(char *)(param_1 + 0x75) == '\0') {
    sVar1 = *(short *)(param_1 + 0x6a) + *(short *)(param_1 + 0xe8);
  }
  else {
    sVar1 = *(short *)(param_1 + 0x6a) - *(short *)(param_1 + 0xe8);
  }
  *(short *)(param_1 + 0x6a) = sVar1;
  *(undefined2 *)(param_1 + 0xe6) = 0;
  *(undefined2 *)(param_1 + 0xe8) = 0;
  return;
}



void FUN_8001cda8(int param_1,short param_2,undefined4 param_3)

{
  undefined *puVar1;
  uint uVar2;
  short sVar3;
  uint uVar4;
  uint uVar5;
  undefined4 uVar6;
  int iVar7;
  ushort uVar8;
  undefined local_20 [8];
  
  uVar4 = FUN_8007bbfc(param_1 + 0x78,param_3);
  uVar2 = param_1 + 0x87U & 3;
  uVar5 = param_1 + 0x84U & 3;
  uVar4 = (*(int *)((param_1 + 0x87U) - uVar2) << (3 - uVar2) * 8 |
          uVar4 & 0xffffffffU >> (uVar2 + 1) * 8) & -1 << (4 - uVar5) * 8 |
          *(uint *)((param_1 + 0x84U) - uVar5) >> uVar5 * 8;
  puVar1 = local_20 + 3;
  uVar2 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar2) =
       *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | uVar4 >> (3 - uVar2) * 8;
  local_20._0_2_ = (undefined2)uVar4;
  uVar2 = param_1 + 0x87U & 3;
  uVar5 = param_1 + 0x84U & 3;
  uVar5 = (*(int *)((param_1 + 0x87U) - uVar2) << (3 - uVar2) * 8 |
          uVar4 & 0xffffffffU >> (uVar2 + 1) * 8) & -1 << (4 - uVar5) * 8 |
          *(uint *)((param_1 + 0x84U) - uVar5) >> uVar5 * 8;
  puVar1 = local_20 + 3;
  uVar2 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar2) =
       *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | uVar5 >> (3 - uVar2) * 8;
  local_20._2_2_ = (undefined2)(uVar5 >> 0x10);
  sVar3 = local_20._2_2_;
  uVar8 = local_20._0_2_ + 3;
  local_20._0_4_ = uVar5;
  uVar6 = FUN_800143ec(PTR_DAT_800a59b0,0x3c,1,0);
  iVar7 = FUN_80015468(uVar6,(int)param_2,(int)(short)(uVar8 & 0xfffc),(int)sVar3,1);
  *(int *)(param_1 + 0x34) = iVar7;
  puVar1 = PTR_DAT_800a59b0;
  iVar7 = (int)*(short *)(iVar7 + 4) * (int)*(short *)(iVar7 + 6);
  *(int *)(param_1 + 0xd4) = iVar7;
  uVar6 = FUN_800143ec(puVar1,1,iVar7,0);
  *(undefined4 *)(param_1 + 0xb0) = uVar6;
  return;
}



void FUN_8001cea0(int param_1,short param_2,int *param_3)

{
  undefined *puVar1;
  uint uVar2;
  undefined4 uVar3;
  int iVar4;
  short sVar5;
  short sVar6;
  undefined auStack_38 [12];
  uint uStack_2c;
  short local_20;
  undefined local_1e [6];
  
  sVar5 = 0;
  sVar6 = 0;
  FUN_8007bbfc(param_1 + 0x78,*param_3);
  for (; *param_3 != 0; param_3 = param_3 + 1) {
    FUN_8007bbac(auStack_38);
    puVar1 = local_1e + 1;
    uVar2 = (uint)puVar1 & 3;
    *(uint *)(puVar1 + -uVar2) =
         *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | uStack_2c >> (3 - uVar2) * 8;
    local_20 = (short)uStack_2c;
    if (sVar5 < local_20) {
      puVar1 = local_1e + 1;
      uVar2 = (uint)puVar1 & 3;
      *(uint *)(puVar1 + -uVar2) =
           *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | uStack_2c >> (3 - uVar2) * 8;
      sVar5 = local_20;
    }
    puVar1 = local_1e + 1;
    uVar2 = (uint)puVar1 & 3;
    *(uint *)(puVar1 + -uVar2) =
         *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | uStack_2c >> (3 - uVar2) * 8;
    local_1e._0_2_ = (undefined2)(uStack_2c >> 0x10);
    if (sVar6 < (short)local_1e._0_2_) {
      puVar1 = local_1e + 1;
      uVar2 = (uint)puVar1 & 3;
      *(uint *)(puVar1 + -uVar2) =
           *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | uStack_2c >> (3 - uVar2) * 8;
      sVar6 = local_1e._0_2_;
    }
  }
  uVar3 = FUN_800143ec(PTR_DAT_800a59b0,0x3c,1,0);
  iVar4 = FUN_80015468(uVar3,(int)param_2,(int)(short)(sVar5 + 3U & 0xfffc),(int)sVar6,1);
  *(int *)(param_1 + 0x34) = iVar4;
  puVar1 = PTR_DAT_800a59b0;
  iVar4 = (int)*(short *)(iVar4 + 4) * (int)*(short *)(iVar4 + 6);
  *(int *)(param_1 + 0xd4) = iVar4;
  uVar3 = FUN_800143ec(puVar1,1,iVar4,0);
  *(undefined4 *)(param_1 + 0xb0) = uVar3;
  return;
}



void FUN_8001d020(int param_1,short param_2)

{
  undefined4 uVar1;
  
  uVar1 = FUN_800143ec(PTR_DAT_800a59b0,0x3c,1,0);
  uVar1 = FUN_80015610(uVar1,(int)param_2);
  *(undefined4 *)(param_1 + 0x34) = uVar1;
  return;
}



void FUN_8001d07c(int param_1,undefined4 param_2,ushort param_3)

{
  *(undefined4 *)(param_1 + 200) = 0xffff;
  *(ushort *)(param_1 + 0xe0) = param_3 | 0x1fc;
  *(undefined4 *)(param_1 + 0xbc) = param_2;
  *(undefined4 *)(param_1 + 0xc0) = 0;
  *(undefined4 *)(param_1 + 0xc4) = 0;
  *(undefined *)(param_1 + 0xf3) = 0;
  *(undefined *)(param_1 + 0xf4) = 1;
  *(undefined *)(param_1 + 0xf5) = 1;
  return;
}



void FUN_8001d0ac(int param_1,undefined4 param_2,ushort param_3)

{
  *(ushort *)(param_1 + 0xe0) = param_3 | 4;
  *(undefined4 *)(param_1 + 0xbc) = param_2;
  return;
}



void FUN_8001d0bc(int param_1,uint param_2)

{
  ushort uVar1;
  ushort uVar2;
  
  uVar1 = *(ushort *)(param_1 + 0xe0);
  *(uint *)(param_1 + 0xc0) = param_2 & 0xffff;
  uVar2 = uVar1 & 0xfdff;
  *(ushort *)(param_1 + 0xe0) = uVar2 | 8;
  if ((uVar1 & 3) == 0) {
    *(ushort *)(param_1 + 0xe0) = uVar2 | 9;
  }
  return;
}



void FUN_8001d0ec(int param_1,undefined4 param_2)

{
  ushort uVar1;
  
  uVar1 = *(ushort *)(param_1 + 0xe0);
  *(undefined4 *)(param_1 + 0xc0) = param_2;
  *(ushort *)(param_1 + 0xe0) = uVar1 | 0x208;
  if ((uVar1 & 3) == 0) {
    *(ushort *)(param_1 + 0xe0) = uVar1 | 0x209;
  }
  return;
}



void FUN_8001d16c(int param_1,undefined4 param_2)

{
  ushort uVar1;
  
  uVar1 = *(ushort *)(param_1 + 0xe0);
  *(undefined4 *)(param_1 + 0xc4) = param_2;
  *(ushort *)(param_1 + 0xe0) = uVar1 | 0x410;
  if ((uVar1 & 4) != 0) {
    *(undefined4 *)(param_1 + 0xc0) = *(undefined4 *)(param_1 + 0xc4);
    *(ushort *)(param_1 + 0xe0) = *(ushort *)(param_1 + 0xe0) | 0x208;
  }
  if ((*(ushort *)(param_1 + 0xe0) & 3) == 0) {
    *(ushort *)(param_1 + 0xe0) = *(ushort *)(param_1 + 0xe0) | 1;
  }
  return;
}



void FUN_8001d1bc(int param_1,uint param_2)

{
  ushort uVar1;
  ushort uVar2;
  
  uVar1 = *(ushort *)(param_1 + 0xe0);
  *(uint *)(param_1 + 200) = param_2 & 0xffff;
  uVar2 = uVar1 & 0xf7ff;
  *(ushort *)(param_1 + 0xe0) = uVar2 | 0x20;
  if ((uVar1 & 3) == 0) {
    *(ushort *)(param_1 + 0xe0) = uVar2 | 0x21;
  }
  return;
}



void FUN_8001d1ec(int param_1,undefined4 param_2)

{
  ushort uVar1;
  
  uVar1 = *(ushort *)(param_1 + 0xe0);
  *(undefined4 *)(param_1 + 200) = param_2;
  *(ushort *)(param_1 + 0xe0) = uVar1 | 0x820;
  if ((uVar1 & 3) == 0) {
    *(ushort *)(param_1 + 0xe0) = uVar1 | 0x821;
  }
  return;
}



void FUN_8001d214(int param_1,undefined param_2)

{
  ushort uVar1;
  
  uVar1 = *(ushort *)(param_1 + 0xe0);
  *(undefined *)(param_1 + 0xf5) = param_2;
  *(ushort *)(param_1 + 0xe0) = uVar1 | 0x100;
  if ((uVar1 & 3) == 0) {
    *(ushort *)(param_1 + 0xe0) = uVar1 | 0x101;
  }
  return;
}



void FUN_8001d23c(int param_1,undefined param_2)

{
  ushort uVar1;
  
  uVar1 = *(ushort *)(param_1 + 0xe0);
  *(undefined *)(param_1 + 0xf4) = param_2;
  *(ushort *)(param_1 + 0xe0) = uVar1 | 0x80;
  if ((uVar1 & 3) == 0) {
    *(ushort *)(param_1 + 0xe0) = uVar1 | 0x81;
  }
  return;
}



void FUN_8001d28c(int param_1,undefined4 param_2,short param_3)

{
  short sVar1;
  ushort uVar2;
  bool bVar3;
  int iVar4;
  uint uVar5;
  int iVar6;
  uint uVar7;
  code *pcVar8;
  uint uVar9;
  
  uVar9 = 0;
  if (*(char *)(param_1 + 0xf2) != '\0') {
    sVar1 = *(short *)(param_1 + 0xec);
    if ((sVar1 == 0) || (*(short *)(param_1 + 0xec) = sVar1 + -1, sVar1 == 1)) {
      if (*(short *)(param_1 + 0xda) == *(short *)(param_1 + 0xde)) {
        if (((*(ushort *)(param_1 + 0xe0) & 3) == 0) &&
           (iVar6 = (int)*(short *)(param_1 + 10), iVar6 != 0)) {
          if (iVar6 < 1) {
            pcVar8 = *(code **)(param_1 + 0xc);
          }
          else {
            iVar4 = iVar6 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0xc));
            param_3 = (short)*(undefined4 *)(iVar4 + -8);
            pcVar8 = *(code **)(iVar4 + -4);
          }
          iVar4 = (int)*(short *)(param_1 + 8);
          if (0 < iVar6 << 0x10) {
            iVar4 = param_3 + iVar4;
          }
          (*pcVar8)(param_1 + iVar4,2,0,param_1);
        }
        uVar7 = (uint)*(ushort *)(param_1 + 0xe0);
        uVar5 = uVar7 & 3;
        if (uVar5 == 3) {
          uVar9 = *(ushort *)(param_1 + 0xe0) >> 3 & 1;
          FUN_8001d550(param_1);
          goto LAB_8001d398;
        }
      }
      else {
LAB_8001d398:
        uVar7 = (uint)*(ushort *)(param_1 + 0xe0);
        uVar5 = uVar7 & 3;
      }
      if (uVar5 == 2) {
        uVar9 = uVar7 >> 3 & 1;
        FUN_8001d550(param_1);
      }
    }
  }
  if ((*(ushort *)(param_1 + 0xe0) & 3) == 1) {
    uVar9 = *(ushort *)(param_1 + 0xe0) >> 3 & 1;
    FUN_8001d550(param_1);
  }
  bVar3 = false;
  if (*(short *)(param_1 + 0xda) == *(short *)(param_1 + 0xde)) {
    bVar3 = *(char *)(param_1 + 0xf1) == '\0';
  }
  if (*(char *)(param_1 + 0xf2) != '\0') {
    if (uVar9 != 0) goto LAB_8001d460;
    if (*(short *)(param_1 + 0xec) == 0) {
      FUN_8001d4b8(param_1);
    }
  }
  if (uVar9 == 0) {
    if (*(short *)(param_1 + 0xec) != 0) {
      return;
    }
    if (*(char *)(param_1 + 0xf2) == '\0') {
      return;
    }
    if (bVar3) {
      return;
    }
  }
LAB_8001d460:
  FUN_8001d744(param_1);
  uVar2 = *(ushort *)(param_1 + 0xe0);
  if (((uVar2 & 3) == 1) && (FUN_8001d550(param_1), (uVar2 >> 3 & 1) != 0)) {
    FUN_8001d744(param_1);
  }
  return;
}



void FUN_8001d4b8(int param_1)

{
  int iVar1;
  
  iVar1 = (int)*(short *)(param_1 + 0xda);
  if (iVar1 == *(short *)(param_1 + 0xde)) {
    if (*(char *)(param_1 + 0xf1) != '\0') {
      *(undefined2 *)(param_1 + 0xda) = *(undefined2 *)(param_1 + 0xdc);
    }
  }
  else if (*(char *)(param_1 + 0xf0) == '\0') {
    *(short *)(param_1 + 0xda) = (short)(iVar1 + 1);
    if ((int)*(short *)(param_1 + 0xd8) <= (iVar1 + 1) * 0x10000 >> 0x10) {
      *(undefined2 *)(param_1 + 0xda) = 0;
    }
  }
  else {
    *(short *)(param_1 + 0xda) = (short)(iVar1 + -1);
    if ((iVar1 + -1) * 0x10000 < 0) {
      *(short *)(param_1 + 0xda) = *(short *)(param_1 + 0xd8) + -1;
    }
  }
  return;
}



void FUN_8001d550(int param_1)

{
  ushort uVar1;
  undefined2 uVar2;
  
  if ((*(ushort *)(param_1 + 0xe0) & 4) != 0) {
    *(undefined4 *)(param_1 + 0xcc) = *(undefined4 *)(param_1 + 0xbc);
    if (*(char *)(param_1 + 0xf7) == '\0') {
      FUN_8007bbfc(param_1 + 0x78);
      *(undefined2 *)(param_1 + 0xd8) = *(undefined2 *)(param_1 + 0x88);
    }
    else {
      FUN_800195ac(param_1 + 0x8c);
      uVar2 = FUN_80019638(param_1 + 0x8c);
      *(undefined2 *)(param_1 + 0xd8) = uVar2;
    }
    *(undefined *)(param_1 + 0xf8) = 1;
  }
  uVar1 = *(ushort *)(param_1 + 0xe0);
  if ((uVar1 & 8) != 0) {
    if ((uVar1 & 0x200) == 0) {
      if (*(short *)(param_1 + 0xc0) == -1) {
        *(short *)(param_1 + 0xda) = *(short *)(param_1 + 0xd8) + -1;
      }
      else {
        *(short *)(param_1 + 0xda) = (short)*(undefined4 *)(param_1 + 0xc0);
      }
    }
    else {
      uVar2 = FUN_8001e6a8(param_1,*(undefined4 *)(param_1 + 0xc0));
      *(undefined2 *)(param_1 + 0xda) = uVar2;
    }
    uVar1 = *(ushort *)(param_1 + 0xe0);
  }
  if ((uVar1 & 0x10) != 0) {
    if ((uVar1 & 0x400) == 0) {
      if (*(short *)(param_1 + 0xc4) == -1) {
        *(short *)(param_1 + 0xdc) = *(short *)(param_1 + 0xd8) + -1;
      }
      else {
        *(short *)(param_1 + 0xdc) = (short)*(undefined4 *)(param_1 + 0xc4);
      }
    }
    else {
      uVar2 = FUN_8001e6a8(param_1,*(undefined4 *)(param_1 + 0xc4));
      *(undefined2 *)(param_1 + 0xdc) = uVar2;
    }
  }
  if ((*(ushort *)(param_1 + 0xe0) & 0x20) != 0) {
    if ((*(ushort *)(param_1 + 0xe0) & 0x800) == 0) {
      if (*(short *)(param_1 + 200) == -1) {
        *(short *)(param_1 + 0xde) = *(short *)(param_1 + 0xd8) + -1;
      }
      else {
        *(short *)(param_1 + 0xde) = (short)*(undefined4 *)(param_1 + 200);
      }
    }
    else {
      uVar2 = FUN_8001e6a8(param_1,*(undefined4 *)(param_1 + 200));
      *(undefined2 *)(param_1 + 0xde) = uVar2;
    }
  }
  if ((*(ushort *)(param_1 + 0xe0) & 0x40) != 0) {
    *(undefined *)(param_1 + 0xf0) = *(undefined *)(param_1 + 0xf3);
  }
  if ((*(ushort *)(param_1 + 0xe0) & 0x80) != 0) {
    *(undefined *)(param_1 + 0xf1) = *(undefined *)(param_1 + 0xf4);
  }
  if ((*(ushort *)(param_1 + 0xe0) & 0x100) != 0) {
    *(undefined *)(param_1 + 0xf2) = *(undefined *)(param_1 + 0xf5);
  }
  *(undefined2 *)(param_1 + 0xe0) = 0;
  return;
}



void FUN_8001d744(int param_1)

{
  ushort uVar1;
  uint *puVar2;
  uint uVar3;
  uint uVar4;
  int iVar5;
  uint uVar6;
  uint uVar7;
  int iVar8;
  int *piVar9;
  short unaff_s2;
  code *pcVar10;
  
  if (*(char *)(param_1 + 0xf7) == '\0') {
    piVar9 = (int *)(*(int *)(param_1 + 0x78) + (uint)*(ushort *)(param_1 + 0xda) * 0x24);
  }
  else {
    piVar9 = (int *)FUN_8001964c(param_1 + 0x8c,*(undefined2 *)(param_1 + 0xda));
  }
  uVar1 = *(ushort *)(piVar9 + 1);
  uVar3 = (uint)*(byte *)(param_1 + 0xfe);
  *(ushort *)(param_1 + 0xec) = uVar1;
  if (uVar3 != 0) {
    uVar3 = (uint)uVar1 << 1;
    *(short *)(param_1 + 0xec) = (short)uVar3;
  }
  uVar7 = (int)piVar9 + 9U & 3;
  uVar4 = (int)piVar9 + 6U & 3;
  uVar4 = (*(int *)(((int)piVar9 + 9U) - uVar7) << (3 - uVar7) * 8 |
          uVar3 & 0xffffffffU >> (uVar7 + 1) * 8) & -1 << (4 - uVar4) * 8 |
          *(uint *)(((int)piVar9 + 6U) - uVar4) >> uVar4 * 8;
  uVar3 = (int)piVar9 + 0xdU & 3;
  uVar7 = (int)piVar9 + 10U & 3;
  uVar7 = (*(int *)(((int)piVar9 + 0xdU) - uVar3) << (3 - uVar3) * 8 |
          (uint)uVar1 & 0xffffffffU >> (uVar3 + 1) * 8) & -1 << (4 - uVar7) * 8 |
          *(uint *)(((int)piVar9 + 10U) - uVar7) >> uVar7 * 8;
  uVar3 = param_1 + 0x3bU & 3;
  puVar2 = (uint *)((param_1 + 0x3bU) - uVar3);
  *puVar2 = *puVar2 & -1 << (uVar3 + 1) * 8 | uVar4 >> (3 - uVar3) * 8;
  uVar3 = param_1 + 0x38U & 3;
  puVar2 = (uint *)((param_1 + 0x38U) - uVar3);
  *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar3) * 8 | uVar4 << uVar3 * 8;
  uVar3 = param_1 + 0x3fU & 3;
  puVar2 = (uint *)((param_1 + 0x3fU) - uVar3);
  *puVar2 = *puVar2 & -1 << (uVar3 + 1) * 8 | uVar7 >> (3 - uVar3) * 8;
  uVar3 = param_1 + 0x3cU & 3;
  puVar2 = (uint *)((param_1 + 0x3cU) - uVar3);
  *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar3) * 8 | uVar7 << uVar3 * 8;
  *(undefined2 *)(param_1 + 0xe6) = *(undefined2 *)((int)piVar9 + 0xe);
  uVar3 = (uint)*(ushort *)(param_1 + 0xec);
  iVar8 = (int)*(short *)(param_1 + 0xe6) << 0x10;
  if (uVar3 == 0) {
    trap(0x1c00);
  }
  if ((uVar3 == 0xffffffff) && (iVar8 == -0x80000000)) {
    trap(0x1800);
  }
  *(undefined2 *)(param_1 + 0xe8) = *(undefined2 *)(piVar9 + 4);
  uVar7 = (uint)*(ushort *)(param_1 + 0xec);
  iVar5 = (int)*(short *)(param_1 + 0xe8) << 0x10;
  uVar4 = iVar5 / (int)uVar7;
  if (uVar7 == 0) {
    trap(0x1c00);
  }
  if ((uVar7 == 0xffffffff) && (iVar5 == -0x80000000)) {
    trap(0x1800);
  }
  *(int *)(param_1 + 0xb4) = iVar8 / (int)uVar3;
  *(uint *)(param_1 + 0xb8) = uVar4;
  uVar3 = (int)piVar9 + 0x15U & 3;
  uVar6 = (int)piVar9 + 0x12U & 3;
  uVar6 = (*(int *)(((int)piVar9 + 0x15U) - uVar3) << (3 - uVar3) * 8 |
          uVar4 & 0xffffffffU >> (uVar3 + 1) * 8) & -1 << (4 - uVar6) * 8 |
          *(uint *)(((int)piVar9 + 0x12U) - uVar6) >> uVar6 * 8;
  uVar3 = (int)piVar9 + 0x19U & 3;
  uVar4 = (int)piVar9 + 0x16U & 3;
  uVar7 = (*(int *)(((int)piVar9 + 0x19U) - uVar3) << (3 - uVar3) * 8 |
          uVar7 & 0xffffffffU >> (uVar3 + 1) * 8) & -1 << (4 - uVar4) * 8 |
          *(uint *)(((int)piVar9 + 0x16U) - uVar4) >> uVar4 * 8;
  uVar3 = param_1 + 0x43U & 3;
  puVar2 = (uint *)((param_1 + 0x43U) - uVar3);
  *puVar2 = *puVar2 & -1 << (uVar3 + 1) * 8 | uVar6 >> (3 - uVar3) * 8;
  uVar3 = param_1 + 0x40U & 3;
  puVar2 = (uint *)((param_1 + 0x40U) - uVar3);
  *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar3) * 8 | uVar6 << uVar3 * 8;
  uVar3 = param_1 + 0x47U & 3;
  puVar2 = (uint *)((param_1 + 0x47U) - uVar3);
  *puVar2 = *puVar2 & -1 << (uVar3 + 1) * 8 | uVar7 >> (3 - uVar3) * 8;
  uVar3 = param_1 + 0x44U & 3;
  puVar2 = (uint *)((param_1 + 0x44U) - uVar3);
  *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar3) * 8 | uVar7 << uVar3 * 8;
  if (*(int *)(param_1 + 0x34) != 0) {
    *(undefined2 *)(*(int *)(param_1 + 0x34) + 6) = *(undefined2 *)(param_1 + 0x3e);
    *(ushort *)(*(int *)(param_1 + 0x34) + 4) = *(short *)(param_1 + 0x3c) + 3U & 0xfffc;
  }
  *(undefined *)(param_1 + 0x76) = 1;
  if (*piVar9 != 0) {
    if ((piVar9[7] & 1U) != 0) {
      FUN_8001c4a0(param_1);
    }
    iVar8 = (int)*(short *)(param_1 + 10);
    if (iVar8 != 0) {
      if (iVar8 < 1) {
        pcVar10 = *(code **)(param_1 + 0xc);
      }
      else {
        iVar5 = iVar8 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0xc));
        unaff_s2 = (short)*(undefined4 *)(iVar5 + -8);
        pcVar10 = *(code **)(iVar5 + -4);
      }
      iVar5 = (int)*(short *)(param_1 + 8);
      if (0 < iVar8 << 0x10) {
        iVar5 = unaff_s2 + iVar5;
      }
      (*pcVar10)(param_1 + iVar5,1,*piVar9,param_1);
    }
  }
  return;
}



int FUN_8001e6a8(int param_1,int param_2)

{
  int *piVar1;
  uint uVar2;
  ushort uVar3;
  int iVar4;
  short sVar5;
  
  if (*(char *)(param_1 + 0xf7) == '\0') {
    uVar3 = 0;
    do {
      iVar4 = (int)(short)uVar3;
      uVar2 = (uint)uVar3;
      if (*(short *)(param_1 + 0xd8) <= iVar4) goto LAB_8001e76c;
      uVar3 = uVar3 + 1;
    } while (*(int *)(*(int *)(param_1 + 0x78) + uVar2 * 0x24) != param_2);
  }
  else {
    sVar5 = 0;
    if (0 < *(short *)(param_1 + 0xd8)) {
      do {
        piVar1 = (int *)FUN_8001964c(param_1 + 0x8c,sVar5);
        if (*piVar1 == param_2) {
          return (int)sVar5;
        }
        sVar5 = sVar5 + 1;
      } while (sVar5 < *(short *)(param_1 + 0xd8));
    }
LAB_8001e76c:
    iVar4 = -1;
  }
  return iVar4;
}



void FUN_8001e78c(int param_1,undefined4 param_2,undefined2 param_3)

{
  *(undefined2 *)(param_1 + 0xe2) = 0;
  *(undefined2 *)(param_1 + 0xe4) = param_3;
  *(undefined4 *)(param_1 + 0x94) = param_2;
  FUN_8001e7b4();
  return;
}



void FUN_8001e7b4(int param_1,undefined4 param_2,short param_3)

{
  short sVar1;
  undefined4 uVar2;
  int iVar3;
  undefined4 *puVar4;
  code *pcVar5;
  int iVar6;
  short unaff_s2;
  short local_30;
  short sStack_2e;
  short local_2c;
  
  if (*(short *)(param_1 + 0xaa) != 0) {
    uVar2 = *(undefined4 *)(param_1 + 0xa8);
    pcVar5 = *(code **)(param_1 + 0xac);
    *(undefined2 *)(param_1 + 0xa8) = 0;
    *(undefined2 *)(param_1 + 0xaa) = 0;
    *(undefined4 *)(param_1 + 0xac) = 0;
    sStack_2e = (short)((uint)uVar2 >> 0x10);
    iVar6 = (int)sStack_2e;
    if (0 < iVar6) {
      local_2c = (short)pcVar5;
      iVar3 = iVar6 * 8 + *(int *)(param_1 + local_2c);
      param_3 = (short)*(undefined4 *)(iVar3 + -8);
      pcVar5 = *(code **)(iVar3 + -4);
    }
    local_30 = (short)uVar2;
    iVar3 = (int)local_30;
    if (0 < iVar6 << 0x10) {
      iVar3 = param_3 + iVar3;
    }
    (*pcVar5)(param_1 + iVar3);
  }
  puVar4 = (undefined4 *)(*(short *)(param_1 + 0xe2) * 8 + *(int *)(param_1 + 0x94));
  uVar2 = puVar4[1];
  *(undefined4 *)(param_1 + 0xa0) = *puVar4;
  *(undefined4 *)(param_1 + 0xa4) = uVar2;
  sVar1 = *(short *)(param_1 + 0xe2) + 1;
  *(short *)(param_1 + 0xe2) = sVar1;
  if (*(short *)(param_1 + 0xe4) <= sVar1) {
    *(undefined4 *)(param_1 + 0x94) = 0;
  }
  iVar6 = (int)*(short *)(param_1 + 0xa2);
  if (iVar6 < 1) {
    pcVar5 = *(code **)(param_1 + 0xa4);
  }
  else {
    iVar3 = iVar6 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0xa4));
    unaff_s2 = (short)*(undefined4 *)(iVar3 + -8);
    pcVar5 = *(code **)(iVar3 + -4);
  }
  iVar3 = (int)*(short *)(param_1 + 0xa0);
  if (0 < iVar6 << 0x10) {
    iVar3 = unaff_s2 + iVar3;
  }
  (*pcVar5)(param_1 + iVar3);
  return;
}



void FUN_8001e924(int param_1,undefined4 param_2,short param_3)

{
  undefined4 uVar1;
  int iVar2;
  code *pcVar3;
  int iVar4;
  short unaff_s2;
  short local_40;
  short sStack_3e;
  short local_3c;
  
  if (*(short *)(param_1 + 0xaa) != 0) {
    uVar1 = *(undefined4 *)(param_1 + 0xa8);
    pcVar3 = *(code **)(param_1 + 0xac);
    *(undefined2 *)(param_1 + 0xa8) = 0;
    *(undefined2 *)(param_1 + 0xaa) = 0;
    *(undefined4 *)(param_1 + 0xac) = 0;
    sStack_3e = (short)((uint)uVar1 >> 0x10);
    iVar4 = (int)sStack_3e;
    if (0 < iVar4) {
      local_3c = (short)pcVar3;
      iVar2 = iVar4 * 8 + *(int *)(param_1 + local_3c);
      param_3 = (short)*(undefined4 *)(iVar2 + -8);
      pcVar3 = *(code **)(iVar2 + -4);
    }
    local_40 = (short)uVar1;
    iVar2 = (int)local_40;
    if (0 < iVar4 << 0x10) {
      iVar2 = param_3 + iVar2;
    }
    (*pcVar3)(param_1 + iVar2);
  }
  if (*(short *)(param_1 + 0x9a) == 0) {
    if (*(int *)(param_1 + 0x94) == 0) {
      *(undefined2 *)(param_1 + 0xa0) = 0;
      *(undefined2 *)(param_1 + 0xa2) = 0;
      *(undefined4 *)(param_1 + 0xa4) = 0;
    }
    else {
      FUN_8001e7b4(param_1);
    }
  }
  else {
    *(undefined4 *)(param_1 + 0xa0) = *(undefined4 *)(param_1 + 0x98);
    *(undefined4 *)(param_1 + 0xa4) = *(undefined4 *)(param_1 + 0x9c);
    iVar4 = (int)*(short *)(param_1 + 0xa2);
    *(undefined2 *)(param_1 + 0x98) = 0;
    *(undefined2 *)(param_1 + 0x9a) = 0;
    *(undefined4 *)(param_1 + 0x9c) = 0;
    if (iVar4 < 1) {
      pcVar3 = *(code **)(param_1 + 0xa4);
    }
    else {
      iVar2 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0xa4));
      unaff_s2 = (short)*(undefined4 *)(iVar2 + -8);
      pcVar3 = *(code **)(iVar2 + -4);
    }
    iVar2 = (int)*(short *)(param_1 + 0xa0);
    if (0 < iVar4 << 0x10) {
      iVar2 = unaff_s2 + iVar2;
    }
    (*pcVar3)(param_1 + iVar2);
  }
  return;
}



void FUN_8001eaa8(int param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 uVar1;
  int iVar2;
  code *pcVar3;
  int iVar4;
  short in_t0;
  short unaff_s2;
  short local_40;
  short sStack_3e;
  short local_3c;
  
  *(undefined2 *)(param_1 + 0xa0) = 0;
  *(undefined2 *)(param_1 + 0xa2) = 0;
  *(undefined4 *)(param_1 + 0xa4) = 0;
  if (*(short *)(param_1 + 0xaa) != 0) {
    uVar1 = *(undefined4 *)(param_1 + 0xa8);
    pcVar3 = *(code **)(param_1 + 0xac);
    *(undefined2 *)(param_1 + 0xa8) = 0;
    *(undefined2 *)(param_1 + 0xaa) = 0;
    *(undefined4 *)(param_1 + 0xac) = 0;
    sStack_3e = (short)((uint)uVar1 >> 0x10);
    iVar4 = (int)sStack_3e;
    if (0 < iVar4) {
      local_3c = (short)pcVar3;
      iVar2 = iVar4 * 8 + *(int *)(param_1 + local_3c);
      in_t0 = (short)*(undefined4 *)(iVar2 + -8);
      pcVar3 = *(code **)(iVar2 + -4);
    }
    local_40 = (short)uVar1;
    iVar2 = (int)local_40;
    if (0 < iVar4 << 0x10) {
      iVar2 = in_t0 + iVar2;
    }
    (*pcVar3)(param_1 + iVar2);
  }
  if (*(short *)(param_1 + 0xa2) == 0) {
    *(undefined4 *)(param_1 + 0x94) = 0;
    *(undefined2 *)(param_1 + 0x98) = 0;
    *(undefined2 *)(param_1 + 0x9a) = 0;
    *(undefined4 *)(param_1 + 0x9c) = 0;
    *(undefined4 *)(param_1 + 0xa0) = param_2;
    *(undefined4 *)(param_1 + 0xa4) = param_3;
    iVar4 = (int)*(short *)(param_1 + 0xa2);
    if (iVar4 != 0) {
      if (iVar4 < 1) {
        pcVar3 = *(code **)(param_1 + 0xa4);
      }
      else {
        iVar2 = iVar4 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0xa4));
        unaff_s2 = (short)*(undefined4 *)(iVar2 + -8);
        pcVar3 = *(code **)(iVar2 + -4);
      }
      iVar2 = (int)*(short *)(param_1 + 0xa0);
      if (0 < iVar4 << 0x10) {
        iVar2 = unaff_s2 + iVar2;
      }
      (*pcVar3)(param_1 + iVar2);
    }
  }
  return;
}



void FUN_8001ec14(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  int iVar2;
  short in_t0;
  code *pcVar3;
  
  iVar2 = (int)*(short *)(param_1 + 0xaa);
  if (iVar2 != 0) {
    if (iVar2 < 1) {
      pcVar3 = *(code **)(param_1 + 0xac);
    }
    else {
      iVar1 = iVar2 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0xac));
      in_t0 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar3 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0xa8);
    if (0 < iVar2 << 0x10) {
      iVar1 = in_t0 + iVar1;
    }
    (*pcVar3)(param_1 + iVar1);
  }
  *(undefined4 *)(param_1 + 0xa8) = param_2;
  *(undefined4 *)(param_1 + 0xac) = param_3;
  return;
}



void FUN_8001ecbc(undefined4 *param_1,undefined4 param_2,short param_3,undefined4 param_4,
                 undefined4 param_5,uint param_6,uint param_7,undefined2 param_8,undefined2 param_9,
                 undefined param_10,char param_11,byte param_12)

{
  undefined *puVar1;
  uint uVar2;
  uint *puVar3;
  undefined4 uVar4;
  short sVar5;
  short sVar6;
  undefined auStack_58 [4];
  int local_54;
  int local_50;
  uint local_4c;
  
  param_1[6] = &DAT_800104ac;
  *(undefined2 *)param_1 = 0;
  *(undefined2 *)((int)param_1 + 2) = 0;
  param_1[1] = 0;
  sVar6 = 0;
  *(undefined2 *)(param_1 + 2) = 0;
  *(undefined2 *)((int)param_1 + 10) = 0;
  param_1[3] = 0;
  *(undefined2 *)(param_1 + 4) = 30000;
  *(undefined *)(param_1 + 5) = 1;
  *(undefined *)(param_1 + 0xe) = param_10;
  *(undefined2 *)((int)param_1 + 0x12) = 0;
  param_1[6] = &DAT_8001042c;
  *(undefined2 *)(param_1 + 0xd) = param_8;
  *(undefined2 *)((int)param_1 + 0x36) = param_9;
  *(char *)((int)param_1 + 0x39) = param_11;
  if (*(char *)(param_1 + 0xe) != '\0') {
    sVar6 = *(short *)(param_1 + 0xd);
  }
  sVar5 = 0;
  if (param_11 != '\0') {
    sVar5 = *(short *)((int)param_1 + 0x36);
  }
  uVar4 = FUN_800143ec(PTR_DAT_800a59b0,0x84,1,0);
  uVar2 = (uint)&stack0xffffffa7 & 3;
  puVar3 = (uint *)(&stack0xffffffa7 + -uVar2);
  *puVar3 = *puVar3 & -1 << (uVar2 + 1) * 8 | param_6 >> (3 - uVar2) * 8;
  puVar1 = auStack_58 + 3;
  uVar2 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar2) =
       *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | param_7 >> (3 - uVar2) * 8;
  auStack_58 = (undefined  [4])param_7;
  local_54 = (int)sVar6;
  local_50 = (int)sVar5;
  local_4c = (uint)param_12;
  uVar4 = FUN_80016018(uVar4,param_2,(int)param_3,param_4,param_5,param_6);
  param_1[7] = uVar4;
  param_1[8] = 0x10000;
  param_1[9] = 0x10000;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8001eee8;
  param_1[10] = 0;
  param_1[0xb] = 0;
  *(undefined2 *)(param_1 + 0xc) = 0;
  *(undefined2 *)((int)param_1 + 0x32) = 0;
  *(undefined *)((int)param_1 + 0x3a) = 0;
  *(undefined *)((int)param_1 + 0x3b) = 0;
  return;
}



undefined4 *
FUN_8001f14c(undefined4 *param_1,undefined4 param_2,short param_3,undefined4 param_4,
            undefined4 param_5,uint param_6,uint param_7,undefined2 param_8,undefined2 param_9,
            short param_10,byte param_11,byte param_12,byte param_13)

{
  undefined *puVar1;
  uint uVar2;
  uint *puVar3;
  undefined4 uVar4;
  undefined auStack_68 [4];
  int local_64;
  uint local_60;
  uint local_5c;
  uint local_58;
  undefined4 local_40;
  
  param_1[6] = &DAT_800104ac;
  *(undefined2 *)param_1 = 0;
  *(undefined2 *)((int)param_1 + 2) = 0;
  param_1[1] = 0;
  *(undefined *)(param_1 + 5) = 1;
  puVar1 = PTR_DAT_800a59b0;
  *(undefined2 *)(param_1 + 4) = 30000;
  *(undefined2 *)(param_1 + 2) = 0;
  *(undefined2 *)((int)param_1 + 10) = 0;
  param_1[3] = 0;
  *(undefined2 *)((int)param_1 + 0x12) = 0;
  param_1[6] = &DAT_8001040c;
  local_40 = param_4;
  uVar4 = FUN_800143ec(puVar1,0x70,1,0);
  uVar2 = (uint)&stack0xffffff97 & 3;
  puVar3 = (uint *)(&stack0xffffff97 + -uVar2);
  *puVar3 = *puVar3 & -1 << (uVar2 + 1) * 8 | param_6 >> (3 - uVar2) * 8;
  puVar1 = auStack_68 + 3;
  uVar2 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar2) =
       *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | param_7 >> (3 - uVar2) * 8;
  auStack_68 = (undefined  [4])param_7;
  local_64 = (int)param_10;
  local_60 = (uint)param_11;
  local_5c = (uint)param_12;
  local_58 = (uint)param_13;
  uVar4 = FUN_8001753c(uVar4,param_2,(int)param_3,local_40,param_5,param_6);
  param_1[7] = uVar4;
  param_1[8] = 0x10000;
  param_1[9] = 0x10000;
  *(undefined2 *)(param_1 + 0xd) = param_8;
  *(undefined2 *)((int)param_1 + 0x36) = param_9;
  *(byte *)(param_1 + 0xe) = param_11;
  *(byte *)((int)param_1 + 0x39) = param_12;
  param_1[10] = 0;
  param_1[0xb] = 0;
  *(undefined2 *)(param_1 + 0xc) = 0;
  *(undefined2 *)((int)param_1 + 0x32) = 0;
  *(undefined *)((int)param_1 + 0x3a) = 0;
  *(undefined *)((int)param_1 + 0x3b) = 0;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8001f364;
  return param_1;
}



void FUN_8001f530(undefined4 *param_1,undefined4 param_2,short param_3,undefined4 param_4,
                 undefined4 param_5,uint param_6,uint param_7,undefined2 param_8,undefined2 param_9,
                 short param_10,undefined param_11,char param_12,byte param_13)

{
  undefined *puVar1;
  uint uVar2;
  uint *puVar3;
  undefined4 uVar4;
  short sVar5;
  short sVar6;
  undefined auStack_60 [4];
  int local_5c;
  int local_58;
  int local_54;
  uint local_50;
  
  param_1[6] = &DAT_800104ac;
  *(undefined2 *)param_1 = 0;
  *(undefined2 *)((int)param_1 + 2) = 0;
  param_1[1] = 0;
  sVar6 = 0;
  *(undefined2 *)(param_1 + 2) = 0;
  *(undefined2 *)((int)param_1 + 10) = 0;
  param_1[3] = 0;
  *(undefined2 *)(param_1 + 4) = 30000;
  *(undefined *)(param_1 + 5) = 1;
  *(undefined *)(param_1 + 0xe) = param_11;
  *(undefined2 *)((int)param_1 + 0x12) = 0;
  param_1[6] = &DAT_800103ec;
  *(undefined2 *)(param_1 + 0xd) = param_8;
  *(undefined2 *)((int)param_1 + 0x36) = param_9;
  *(char *)((int)param_1 + 0x39) = param_12;
  if (*(char *)(param_1 + 0xe) != '\0') {
    sVar6 = *(short *)(param_1 + 0xd);
  }
  sVar5 = 0;
  if (param_12 != '\0') {
    sVar5 = *(short *)((int)param_1 + 0x36);
  }
  uVar4 = FUN_800143ec(PTR_DAT_800a59b0,0x80,1,0);
  uVar2 = (uint)&stack0xffffff9f & 3;
  puVar3 = (uint *)(&stack0xffffff9f + -uVar2);
  *puVar3 = *puVar3 & -1 << (uVar2 + 1) * 8 | param_6 >> (3 - uVar2) * 8;
  puVar1 = auStack_60 + 3;
  uVar2 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar2) =
       *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | param_7 >> (3 - uVar2) * 8;
  auStack_60 = (undefined  [4])param_7;
  local_5c = (int)param_10;
  local_58 = (int)sVar6;
  local_54 = (int)sVar5;
  local_50 = (uint)param_13;
  uVar4 = FUN_80017d08(uVar4,param_2,(int)param_3,param_4,param_5,param_6);
  param_1[7] = uVar4;
  param_1[8] = 0x10000;
  param_1[9] = 0x10000;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8001f774;
  param_1[10] = 0;
  param_1[0xb] = 0;
  *(undefined2 *)(param_1 + 0xc) = 0;
  *(undefined2 *)((int)param_1 + 0x32) = 0;
  *(undefined *)((int)param_1 + 0x3a) = 0;
  *(undefined *)((int)param_1 + 0x3b) = 0;
  return;
}



undefined4 *
FUN_8001f940(undefined4 *param_1,undefined4 param_2,short param_3,undefined2 param_4,ushort param_5,
            undefined param_6)

{
  uint uVar1;
  uint *puVar2;
  int iVar3;
  undefined4 uVar4;
  uint uVar5;
  uint uVar6;
  
  param_1[6] = &DAT_800104ac;
  *(undefined2 *)param_1 = 0;
  *(undefined2 *)((int)param_1 + 2) = 0;
  param_1[1] = 0;
  *(undefined2 *)(param_1 + 2) = 0;
  *(undefined2 *)((int)param_1 + 10) = 0;
  param_1[3] = 0;
  *(undefined2 *)(param_1 + 4) = 0x44c;
  *(undefined *)(param_1 + 5) = 1;
  param_1[6] = &DAT_800103cc;
  *(undefined2 *)((int)param_1 + 0x12) = 0;
  *(undefined2 *)(param_1 + 0xb) = param_4;
  *(undefined *)((int)param_1 + 0x32) = param_6;
  *(ushort *)((int)param_1 + 0x2e) = param_5;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8001fb08;
  param_1[7] = param_2;
  *(undefined *)(param_1 + 0xc) = 0;
  *(char *)((int)param_1 + 0x31) = *(char *)(param_1[7] + 4) + '\x01';
  iVar3 = (uint)*(byte *)(param_1 + 0xc) * 0x10 + param_1[7];
  uVar1 = iVar3 + 9U & 3;
  uVar6 = iVar3 + 6U & 3;
  uVar5 = (*(int *)((iVar3 + 9U) - uVar1) << (3 - uVar1) * 8 |
          param_1[7] & 0xffffffffU >> (uVar1 + 1) * 8) & -1 << (4 - uVar6) * 8 |
          *(uint *)((iVar3 + 6U) - uVar6) >> uVar6 * 8;
  uVar1 = iVar3 + 0xdU & 3;
  uVar6 = iVar3 + 10U & 3;
  uVar6 = (*(int *)((iVar3 + 0xdU) - uVar1) << (3 - uVar1) * 8 |
          (uint)param_5 & 0xffffffffU >> (uVar1 + 1) * 8) & -1 << (4 - uVar6) * 8 |
          *(uint *)((iVar3 + 10U) - uVar6) >> uVar6 * 8;
  uVar1 = (int)param_1 + 0x27U & 3;
  puVar2 = (uint *)(((int)param_1 + 0x27U) - uVar1);
  *puVar2 = *puVar2 & -1 << (uVar1 + 1) * 8 | uVar5 >> (3 - uVar1) * 8;
  uVar1 = (uint)(param_1 + 9) & 3;
  puVar2 = (uint *)((int)(param_1 + 9) - uVar1);
  *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar1) * 8 | uVar5 << uVar1 * 8;
  uVar1 = (int)param_1 + 0x2bU & 3;
  puVar2 = (uint *)(((int)param_1 + 0x2bU) - uVar1);
  *puVar2 = *puVar2 & -1 << (uVar1 + 1) * 8 | uVar6 >> (3 - uVar1) * 8;
  uVar1 = (uint)(param_1 + 10) & 3;
  puVar2 = (uint *)((int)(param_1 + 10) - uVar1);
  *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar1) * 8 | uVar6 << uVar1 * 8;
  uVar4 = FUN_800143ec(PTR_DAT_800a59b0,0x58,1,0);
  iVar3 = FUN_80018898(uVar4,(int)param_3);
  param_1[8] = iVar3;
  *(undefined4 *)(iVar3 + 0x10) =
       *(undefined4 *)((uint)*(byte *)(param_1 + 0xc) * 0x10 + param_1[7]);
  return param_1;
}



undefined4 * FUN_8001fcec(undefined4 *param_1)

{
  undefined uVar1;
  undefined uVar2;
  int iVar3;
  
  FUN_8001a0c4(param_1,0x44c);
  param_1[6] = &DAT_8001044c;
  FUN_8007bb80(param_1 + 0x1e);
  FUN_80019548(param_1 + 0x23);
  FUN_8001c97c(param_1);
  *(undefined *)((int)param_1 + 0xf7) = 0;
  *param_1 = 0xffff0000;
  param_1[1] = FUN_8001cb84;
  if (*(char *)((int)param_1 + 0xf7) == '\0') {
    FUN_8001cda8(param_1,10000,0x21842018);
  }
  else {
    FUN_8001d020(param_1,10000);
  }
  *(undefined2 *)(param_1 + 0x1a) = 0xa0;
  *(undefined2 *)((int)param_1 + 0x6a) = 0x78;
  FUN_8001d07c(param_1,0x21842018,1);
  iVar3 = param_1[0xd];
  if (iVar3 != 0) {
    uVar1 = *(undefined *)(BUF_PTR + 0x125);
    uVar2 = *(undefined *)(BUF_PTR + 0x126);
    *(undefined *)(iVar3 + 0x34) = *(undefined *)(BUF_PTR + 0x124);
    *(undefined *)(iVar3 + 0x35) = uVar1;
    *(undefined *)(iVar3 + 0x36) = uVar2;
    *(undefined *)(param_1[0xd] + 0x33) = 1;
  }
  param_1[6] = &DAT_800103ac;
  *param_1 = 0xffff0000;
  param_1[1] = FUN_8001cb84;
  if (param_1[0xd] != 0) {
    *(undefined *)(param_1[0xd] + 10) = 0;
  }
  param_1[9] = 0xffff0000;
  param_1[10] = &LAB_8001a2c8;
  param_1[0xb] = 0xffff0000;
  param_1[0xc] = &LAB_8001a2e4;
  return param_1;
}



void FUN_8001fea4(int param_1,short param_2,short param_3)

{
  int iVar1;
  int iVar2;
  short in_t0;
  code *pcVar3;
  short unaff_s2;
  
  iVar2 = (int)*(short *)(param_1 + 0x26);
  if (iVar2 != 0) {
    if (iVar2 < 1) {
      pcVar3 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar1 = iVar2 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      in_t0 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar3 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar2 << 0x10) {
      iVar1 = in_t0 + iVar1;
    }
    param_2 = (*pcVar3)(param_1 + iVar1,(int)param_2);
  }
  iVar2 = (int)*(short *)(param_1 + 0x2e);
  if (iVar2 != 0) {
    if (iVar2 < 1) {
      pcVar3 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar1 = iVar2 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      unaff_s2 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar3 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar2 << 0x10) {
      iVar1 = unaff_s2 + iVar1;
    }
    param_3 = (*pcVar3)(param_1 + iVar1,(int)param_3);
  }
  FUN_800241f0(BUF_PTR,(int)param_2,(int)param_3);
  return;
}



int FUN_80020868(int param_1)

{
  FUN_80019744(param_1,0);
  *(undefined **)(param_1 + 0x18) = &DAT_800104cc;
  FUN_8007a110(param_1 + 0x84);
  return param_1;
}



void set_up_buffer(astruct_2 *buffer_loc)

{
  int iVar2;
  undefined *puVar1;
  
  FUN_8007bf78();
  BUF_PTR = buffer_loc;
  buffer_loc->field_0x114 = 0;
  buffer_loc->field_0x130 = 0;
  puVar1 = PTR_DAT_800a59b0;
  buffer_loc->pixel_count = uVar3;
  buffer_loc->field40_0x28 = 0;
  buffer_loc->field249_0x104 = 0;
  buffer_loc->field252_0x108 = 0;
  buffer_loc->field257_0x110 = 0;
  buffer_loc->field91_0x64 = 0;
  buffer_loc->field92_0x66 = 0;
  buffer_loc->padding = 0x1234567;
  iVar2 = *(int *)(puVar1 + 0xa650);
  padding = 0x1234567;
  buffer_loc->buffer = iVar2;
  buffer_loc->maybe_next_block_ = iVar2 + 0x1000;
  load_game_blb_asset(0,2,buffer_loc->buffer);
  initialise_blb_struct
            ((astruct_8 *)&buffer_loc->blb_reading_struct,buffer_loc->buffer,&LOAD_BLB_ASSET);
  set_blb_pointer(0,(long)&buffer_loc->blb_reading_struct);
  return;
}



void FUN_80020970(int param_1,uint param_2)

{
  *(undefined **)(param_1 + 0x18) = &DAT_800104cc;
  FUN_80020a18();
  FUN_80020a70(param_1);
  FUN_80022334(param_1);
  FUN_800223b8(param_1);
  if (*(int *)(param_1 + 0x3c) != 0) {
    __builtin_delete();
  }
  FUN_8007a154(param_1 + 0x84,2);
  *(undefined **)(param_1 + 0x18) = &DAT_800104ec;
  if ((param_2 & 1) != 0) {
    potentially_load_asset_(PTR_DAT_800a59b0,param_1,0,0);
  }
  return;
}



void FUN_80020a18(int param_1)

{
  undefined *puVar1;
  
  puVar1 = PTR_DAT_800a59b0;
  *(undefined2 *)(PTR_DAT_800a59b0 + 0xa08a) = 0;
  if (*(int *)(param_1 + 0x108) != 0) {
    potentially_load_asset_(puVar1,*(int *)(param_1 + 0x108),0,0);
    *(undefined4 *)(param_1 + 0x108) = 0;
    *(undefined2 *)(param_1 + 0x104) = 0;
  }
  return;
}



void FUN_80020a70(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar2 = 0;
  if (*(char *)(param_1 + 0x114) != '\0') {
    iVar1 = 0;
    do {
      iVar1 = *(int *)((iVar1 >> 0xe) + *(int *)(param_1 + 0x110));
      if (iVar1 != 0) {
        (**(code **)(*(int *)(iVar1 + 0x18) + 0xc))
                  (iVar1 + *(short *)(*(int *)(iVar1 + 0x18) + 8),3);
      }
      iVar2 = iVar2 + 1;
      iVar1 = iVar2 * 0x10000;
    } while (iVar2 * 0x10000 >> 0x10 < (int)(uint)*(byte *)(param_1 + 0x114));
  }
  if (*(int *)(param_1 + 0x110) != 0) {
    potentially_load_asset_(PTR_DAT_800a59b0,*(int *)(param_1 + 0x110),0,0);
    *(undefined4 *)(param_1 + 0x110) = 0;
    *(undefined *)(param_1 + 0x114) = 0;
  }
  return;
}



void FUN_80020b30(int param_1)

{
  bool bVar1;
  int iVar2;
  int iVar3;
  short *psVar4;
  int *piVar5;
  undefined4 unaff_s2;
  code *pcVar6;
  
  bVar1 = false;
  piVar5 = *(int **)(param_1 + 0x1c);
  while (piVar5 != (int *)0x0) {
    psVar4 = (short *)piVar5[1];
    if ((!bVar1) && (1999 < psVar4[8])) {
      FUN_800233bc(param_1);
      bVar1 = true;
    }
    iVar3 = (int)psVar4[1];
    if (iVar3 != 0) {
      if (iVar3 < 1) {
        pcVar6 = *(code **)(psVar4 + 2);
      }
      else {
        iVar2 = iVar3 * 8 + *(int *)((int)psVar4 + (int)psVar4[2]);
        unaff_s2 = *(undefined4 *)(iVar2 + -8);
        pcVar6 = *(code **)(iVar2 + -4);
      }
      iVar2 = (int)*psVar4;
      if (0 < iVar3 << 0x10) {
        iVar2 = (short)unaff_s2 + iVar2;
      }
      (*pcVar6)((int)psVar4 + iVar2);
    }
    piVar5 = (int *)*piVar5;
    FUN_80020c70(param_1);
  }
  if (!bVar1) {
    FUN_800233bc(param_1);
  }
  if (*(char *)(param_1 + 0x11a) != '\0') {
    *(char *)(param_1 + 0x11a) = *(char *)(param_1 + 0x11a) + -1;
  }
  *(int *)(param_1 + 0x10c) = *(int *)(param_1 + 0x10c) + 1;
  return;
}



void FUN_80020c70(int param_1)

{
  int iVar1;
  
  if (*(int *)(param_1 + 0x34) != 0) {
    if (*(int *)(param_1 + 0x38) == 0) {
      FUN_80022070();
      *(undefined4 *)(param_1 + 0x34) = 0;
    }
    else {
      FUN_80021e4c(param_1);
      if (*(int *)(param_1 + 0x38) != 1) {
        FUN_80021dbc(param_1);
      }
      FUN_80021d2c(param_1,*(undefined4 *)(param_1 + 0x34));
      iVar1 = *(int *)(param_1 + 0x34);
      if (iVar1 != 0) {
        (**(code **)(*(int *)(iVar1 + 0x18) + 0xc))
                  (iVar1 + *(short *)(*(int *)(iVar1 + 0x18) + 8),3);
      }
      *(undefined4 *)(param_1 + 0x34) = 0;
    }
    *(undefined4 *)(param_1 + 0x38) = 0;
  }
  return;
}



void traverse_linked_list_and_execute(int param_1)

{
  int iVar1;
  int *piVar2;
  
  for (piVar2 = *(int **)(param_1 + 0x1c); piVar2 != (int *)0x0; piVar2 = (int *)*piVar2) {
    iVar1 = *(int *)(piVar2[1] + 0x18);
    (**(code **)(iVar1 + 0x14))(piVar2[1] + (int)*(short *)(iVar1 + 0x10));
  }
  return;
}



void FUN_80020e7c(int param_1)

{
  undefined uVar1;
  undefined uVar2;
  undefined uVar3;
  undefined *puVar4;
  int *piVar5;
  int iVar6;
  
  puVar4 = PTR_DAT_800a59b0;
  if (*(char *)(param_1 + 0x130) != '\0') {
    uVar1 = *(undefined *)(param_1 + 0x131);
    uVar2 = *(undefined *)(param_1 + 0x132);
    uVar3 = *(undefined *)(param_1 + 0x133);
    PTR_DAT_800a59b0[0x1d] = uVar1;
    puVar4[0x1e] = uVar2;
    puVar4[0x1f] = uVar3;
    puVar4[0x505d] = uVar1;
    puVar4[0x505e] = uVar2;
    puVar4[0x505f] = uVar3;
    *(undefined *)(param_1 + 0x130) = 0;
  }
  for (piVar5 = *(int **)(param_1 + 0x1c); piVar5 != (int *)0x0; piVar5 = (int *)*piVar5) {
  }
  for (piVar5 = *(int **)(param_1 + 0x20); piVar5 != (int *)0x0; piVar5 = (int *)*piVar5) {
    iVar6 = *(int *)(piVar5[1] + 0xc);
    (**(code **)(iVar6 + 0xc))(piVar5[1] + (int)*(short *)(iVar6 + 8));
  }
  return;
}



void FUN_80020f64(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  
  if (*(undefined4 **)(param_1 + 0x1c) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x1c) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x1c);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(param_2 + 0x10) <= *(short *)(puVar3[1] + 0x10)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x1c) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = param_2;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) {
      return;
    }
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = param_2;
  return;
}



void FUN_80021078(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  
  if (*(undefined4 **)(param_1 + 0x20) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x20) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x20);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(puVar3[1] + 8) <= *(short *)(param_2 + 8)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x20) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = param_2;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) {
      return;
    }
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = param_2;
  return;
}



void FUN_800213a4(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  int iVar5;
  
  if (*(undefined4 **)(param_1 + 0x1c) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x1c) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x1c);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(param_2 + 0x10) <= *(short *)(puVar3[1] + 0x10)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x1c) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = param_2;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) goto LAB_80021498;
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = param_2;
LAB_80021498:
  iVar5 = *(int *)(param_2 + 0x34);
  if (*(undefined4 **)(param_1 + 0x20) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x20) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x20);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(puVar3[1] + 8) <= *(short *)(iVar5 + 8)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x20) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = iVar5;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) {
      return;
    }
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = iVar5;
  return;
}



void FUN_8002158c(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  int iVar5;
  
  if (*(undefined4 **)(param_1 + 0x1c) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x1c) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x1c);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(param_2 + 0x10) <= *(short *)(puVar3[1] + 0x10)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x1c) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = param_2;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) goto LAB_80021680;
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = param_2;
LAB_80021680:
  iVar5 = *(int *)(param_2 + 0x1c);
  if (*(undefined4 **)(param_1 + 0x20) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x20) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x20);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(puVar3[1] + 8) <= *(short *)(iVar5 + 8)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x20) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = iVar5;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) {
      return;
    }
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = iVar5;
  return;
}



void FUN_80021774(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  int iVar5;
  
  if (*(undefined4 **)(param_1 + 0x1c) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x1c) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x1c);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(param_2 + 0x10) <= *(short *)(puVar3[1] + 0x10)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x1c) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = param_2;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) goto LAB_80021868;
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = param_2;
LAB_80021868:
  iVar5 = *(int *)(param_2 + 0x1c);
  if (*(undefined4 **)(param_1 + 0x20) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x20) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x20);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(puVar3[1] + 8) <= *(short *)(iVar5 + 8)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x20) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = iVar5;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) {
      return;
    }
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = iVar5;
  return;
}



void FUN_8002195c(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  int iVar5;
  
  if (*(undefined4 **)(param_1 + 0x1c) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x1c) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x1c);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(param_2 + 0x10) <= *(short *)(puVar3[1] + 0x10)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x1c) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = param_2;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) goto LAB_80021a50;
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = param_2;
LAB_80021a50:
  iVar5 = *(int *)(param_2 + 0x1c);
  if (*(undefined4 **)(param_1 + 0x20) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x20) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x20);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(puVar3[1] + 8) <= *(short *)(iVar5 + 8)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x20) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = iVar5;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) {
      return;
    }
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = iVar5;
  return;
}



void FUN_80021b44(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  int iVar5;
  
  if (*(undefined4 **)(param_1 + 0x1c) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x1c) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x1c);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(param_2 + 0x10) <= *(short *)(puVar3[1] + 0x10)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x1c) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = param_2;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) goto LAB_80021c38;
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = param_2;
LAB_80021c38:
  iVar5 = *(int *)(param_2 + 0x20);
  if (*(undefined4 **)(param_1 + 0x20) == (undefined4 *)0x0) {
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x20) = puVar2;
  }
  else {
    puVar2 = *(undefined4 **)(param_1 + 0x20);
    puVar4 = (undefined4 *)0x0;
    while (puVar3 = puVar2, bVar1 = false, puVar3 != (undefined4 *)0x0) {
      if (*(short *)(puVar3[1] + 8) <= *(short *)(iVar5 + 8)) {
        puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar4 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x20) = puVar2;
        }
        else {
          *puVar4 = puVar2;
        }
        *puVar2 = puVar3;
        puVar2[1] = iVar5;
        bVar1 = true;
        break;
      }
      puVar4 = puVar3;
      puVar2 = (undefined4 *)*puVar3;
    }
    if (bVar1) {
      return;
    }
    puVar2 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar4 = puVar2;
  }
  *puVar2 = 0;
  puVar2[1] = iVar5;
  return;
}



undefined4 FUN_80021d2c(int param_1,int param_2)

{
  int *piVar1;
  int *piVar2;
  int *piVar3;
  
  piVar3 = (int *)*(int *)(param_1 + 0x1c);
  piVar2 = (undefined4 *)0x0;
  while( true ) {
    piVar1 = piVar3;
    if (piVar1 == (int *)0x0) {
      return 0;
    }
    if (piVar1[1] == param_2) break;
    piVar3 = (int *)*piVar1;
    piVar2 = piVar1;
  }
  if (piVar2 == (undefined4 *)0x0) {
    *(int *)(param_1 + 0x1c) = *piVar1;
  }
  else {
    *piVar2 = *piVar1;
  }
  potentially_load_asset_(PTR_DAT_800a59b0,piVar1,8,0);
  return 1;
}



undefined4 FUN_80021dbc(int param_1,int param_2)

{
  int *piVar1;
  int *piVar2;
  int *piVar3;
  
  piVar3 = (int *)*(int *)(param_1 + 0x20);
  piVar2 = (undefined4 *)0x0;
  while( true ) {
    piVar1 = piVar3;
    if (piVar1 == (int *)0x0) {
      return 0;
    }
    if (piVar1[1] == param_2) break;
    piVar3 = (int *)*piVar1;
    piVar2 = piVar1;
  }
  if (piVar2 == (undefined4 *)0x0) {
    *(int *)(param_1 + 0x20) = *piVar1;
  }
  else {
    *piVar2 = *piVar1;
  }
  potentially_load_asset_(PTR_DAT_800a59b0,piVar1,8,0);
  return 1;
}



void FUN_80021e4c(int param_1,int param_2)

{
  int *piVar1;
  int *piVar2;
  int *piVar3;
  
  piVar3 = (int *)*(int *)(param_1 + 0x24);
  piVar2 = (undefined4 *)0x0;
  while( true ) {
    piVar1 = piVar3;
    if (piVar1 == (int *)0x0) {
      return;
    }
    if (piVar1[1] == param_2) break;
    piVar3 = (int *)*piVar1;
    piVar2 = piVar1;
  }
  if (piVar2 == (undefined4 *)0x0) {
    *(int *)(param_1 + 0x24) = *piVar1;
  }
  else {
    *piVar2 = *piVar1;
  }
  potentially_load_asset_(PTR_DAT_800a59b0,piVar1,8,0);
  return;
}



void FUN_80021ed8(int param_1,int param_2,short param_3)

{
  bool bVar1;
  int *piVar2;
  int *piVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  undefined4 *puVar6;
  
  piVar2 = (undefined4 *)0x0;
  for (piVar3 = (int *)*(int *)(param_1 + 0x20); piVar3 != (int *)0x0; piVar3 = (int *)*piVar3) {
    if (piVar3[1] == param_2) {
      if (piVar2 == (undefined4 *)0x0) {
        *(int *)(param_1 + 0x20) = *piVar3;
      }
      else {
        *piVar2 = *piVar3;
      }
      potentially_load_asset_(PTR_DAT_800a59b0,piVar3,8,0);
      *(short *)(param_2 + 8) = param_3;
      goto LAB_80021f74;
    }
    piVar2 = piVar3;
  }
  *(short *)(param_2 + 8) = param_3;
LAB_80021f74:
  if (*(undefined4 **)(param_1 + 0x20) == (undefined4 *)0x0) {
    puVar4 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *(undefined4 **)(param_1 + 0x20) = puVar4;
  }
  else {
    puVar4 = *(undefined4 **)(param_1 + 0x20);
    puVar6 = (undefined4 *)0x0;
    while (puVar5 = puVar4, bVar1 = false, puVar5 != (undefined4 *)0x0) {
      if (*(short *)(puVar5[1] + 8) <= param_3) {
        puVar4 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
        if (puVar6 == (undefined4 *)0x0) {
          *(undefined4 **)(param_1 + 0x20) = puVar4;
        }
        else {
          *puVar6 = puVar4;
        }
        *puVar4 = puVar5;
        puVar4[1] = param_2;
        bVar1 = true;
        break;
      }
      puVar6 = puVar5;
      puVar4 = (undefined4 *)*puVar5;
    }
    if (bVar1) {
      return;
    }
    puVar4 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
    *puVar6 = puVar4;
  }
  *puVar4 = 0;
  puVar4[1] = param_2;
  return;
}



void FUN_80022070(int param_1,int param_2)

{
  int *piVar1;
  int *piVar2;
  int *piVar3;
  
  piVar3 = (int *)*(int *)(param_1 + 0x24);
  piVar2 = (undefined4 *)0x0;
  while (piVar1 = piVar3, piVar1 != (int *)0x0) {
    if (piVar1[1] == param_2) {
      if (piVar2 == (undefined4 *)0x0) {
        *(int *)(param_1 + 0x24) = *piVar1;
      }
      else {
        *piVar2 = *piVar1;
      }
      potentially_load_asset_(PTR_DAT_800a59b0,piVar1,8,0);
      break;
    }
    piVar2 = piVar1;
    piVar3 = (int *)*piVar1;
  }
  piVar3 = (int *)*(int *)(param_1 + 0x20);
  piVar2 = (undefined4 *)0x0;
  while (piVar1 = piVar3, piVar1 != (int *)0x0) {
    if (piVar1[1] == *(int *)(param_2 + 0x34)) {
      if (piVar2 == (undefined4 *)0x0) {
        *(int *)(param_1 + 0x20) = *piVar1;
      }
      else {
        *piVar2 = *piVar1;
      }
      potentially_load_asset_(PTR_DAT_800a59b0,piVar1,8,0);
      break;
    }
    piVar2 = piVar1;
    piVar3 = (int *)*piVar1;
  }
  piVar3 = (int *)*(int *)(param_1 + 0x1c);
  piVar2 = (undefined4 *)0x0;
  do {
    piVar1 = piVar3;
    if (piVar1 == (int *)0x0) {
LAB_800221d8:
      if (param_2 != 0) {
        (**(code **)(*(int *)(param_2 + 0x18) + 0xc))
                  (param_2 + *(short *)(*(int *)(param_2 + 0x18) + 8),3);
      }
      return;
    }
    if (piVar1[1] == param_2) {
      if (piVar2 == (undefined4 *)0x0) {
        *(int *)(param_1 + 0x1c) = *piVar1;
      }
      else {
        *piVar2 = *piVar1;
      }
      potentially_load_asset_(PTR_DAT_800a59b0,piVar1,8,0);
      goto LAB_800221d8;
    }
    piVar3 = (int *)*piVar1;
    piVar2 = piVar1;
  } while( true );
}



void FUN_80022214(int param_1)

{
  undefined *puVar1;
  int iVar2;
  undefined4 *puVar3;
  
  iVar2 = *(int *)(param_1 + 0x1c);
  puVar1 = PTR_DAT_800a59b0;
  while (iVar2 != 0) {
    puVar3 = *(undefined4 **)(param_1 + 0x1c);
    PTR_DAT_800a59b0 = puVar1;
    *(undefined4 *)(param_1 + 0x1c) = *puVar3;
    potentially_load_asset_(puVar1,puVar3,8,0);
    puVar1 = PTR_DAT_800a59b0;
    iVar2 = *(int *)(param_1 + 0x1c);
  }
  PTR_DAT_800a59b0 = puVar1;
  return;
}



void FUN_80022334(int param_1)

{
  undefined *puVar1;
  int iVar2;
  undefined4 *puVar3;
  
  iVar2 = *(int *)(param_1 + 0x28);
  while (iVar2 != 0) {
    puVar3 = *(undefined4 **)(param_1 + 0x28);
    potentially_load_asset_(PTR_DAT_800a59b0,puVar3[1],0,0);
    puVar1 = PTR_DAT_800a59b0;
    *(undefined4 *)(param_1 + 0x28) = *puVar3;
    potentially_load_asset_(puVar1,puVar3,8,0);
    iVar2 = *(int *)(param_1 + 0x28);
  }
  return;
}



void FUN_800223b8(int param_1)

{
  undefined *puVar1;
  int iVar2;
  undefined4 *puVar3;
  
  iVar2 = *(int *)(param_1 + 0x20);
  puVar1 = PTR_DAT_800a59b0;
  while (PTR_DAT_800a59b0 = puVar1, iVar2 != 0) {
    puVar3 = *(undefined4 **)(param_1 + 0x20);
    *(undefined4 *)(param_1 + 0x20) = *puVar3;
    potentially_load_asset_(puVar1,puVar3,8,0);
    puVar1 = PTR_DAT_800a59b0;
    iVar2 = *(int *)(param_1 + 0x20);
  }
  while (puVar1 = PTR_DAT_800a59b0, *(int *)(param_1 + 0x24) != 0) {
    puVar3 = *(undefined4 **)(param_1 + 0x24);
    *(undefined4 *)(param_1 + 0x24) = *puVar3;
    potentially_load_asset_(puVar1,puVar3,8,0);
  }
  while (puVar3 = *(undefined4 **)(param_1 + 0x1c), puVar3 != (undefined4 *)0x0) {
    *(undefined4 *)(param_1 + 0x1c) = *puVar3;
    iVar2 = puVar3[1];
    if ((*(char *)(iVar2 + 0x14) != '\0') && (iVar2 != 0)) {
      (**(code **)(*(int *)(iVar2 + 0x18) + 0xc))(iVar2 + *(short *)(*(int *)(iVar2 + 0x18) + 8),3);
    }
    potentially_load_asset_(PTR_DAT_800a59b0,puVar3,8,0);
  }
  return;
}



undefined4
FUN_800224cc(int param_1,short param_2,short param_3,ushort param_4,undefined2 param_5,
            undefined4 param_6,int param_7)

{
  bool bVar1;
  char cVar2;
  int iVar3;
  undefined4 uVar4;
  int iVar5;
  int iVar6;
  int *piVar7;
  short unaff_s2;
  short unaff_s6;
  code *pcVar8;
  
  if ((param_4 == 2) && (*(int *)(param_1 + 0x2c) != 0)) {
    cVar2 = FUN_8001b35c(*(int *)(param_1 + 0x2c),(int)param_2,(int)param_3);
    if (cVar2 != '\0') {
      iVar5 = *(int *)(param_1 + 0x2c);
      iVar6 = (int)*(short *)(iVar5 + 10);
      if (iVar6 != 0) {
        if (iVar6 < 1) {
          pcVar8 = *(code **)(iVar5 + 0xc);
        }
        else {
          iVar3 = iVar6 * 8 + *(int *)(iVar5 + *(short *)(iVar5 + 0xc));
          unaff_s6 = (short)*(undefined4 *)(iVar3 + -8);
          pcVar8 = *(code **)(iVar3 + -4);
        }
        iVar3 = (int)*(short *)(iVar5 + 8);
        if (0 < iVar6 << 0x10) {
          iVar3 = unaff_s6 + iVar3;
        }
        uVar4 = (*pcVar8)(iVar5 + iVar3,param_5,param_6,param_7);
        return uVar4;
      }
    }
  }
  else {
    for (piVar7 = *(int **)(param_1 + 0x24); piVar7 != (int *)0x0; piVar7 = (int *)*piVar7) {
      iVar5 = piVar7[1];
      bVar1 = false;
      if ((iVar5 != param_7) && ((param_4 & *(ushort *)(iVar5 + 0x12)) != 0)) {
        cVar2 = FUN_8001b35c(iVar5,(int)param_2,(int)param_3);
        bVar1 = cVar2 != '\0';
      }
      if (bVar1) {
        iVar6 = (int)*(short *)(iVar5 + 10);
        if (iVar6 == 0) {
          return 0;
        }
        if (iVar6 < 1) {
          pcVar8 = *(code **)(iVar5 + 0xc);
        }
        else {
          iVar3 = iVar6 * 8 + *(int *)(iVar5 + *(short *)(iVar5 + 0xc));
          unaff_s2 = (short)*(undefined4 *)(iVar3 + -8);
          pcVar8 = *(code **)(iVar3 + -4);
        }
        iVar3 = (int)*(short *)(iVar5 + 8);
        if (0 < iVar6 << 0x10) {
          iVar3 = unaff_s2 + iVar3;
        }
        uVar4 = (*pcVar8)(iVar5 + iVar3,param_5,param_6,param_7);
        return uVar4;
      }
    }
  }
  return 0;
}



undefined4
FUN_800226f4(int param_1,undefined4 param_2,undefined4 param_3,ushort param_4,undefined2 param_5,
            undefined4 param_6,int param_7)

{
  bool bVar1;
  char cVar2;
  int iVar3;
  undefined4 uVar4;
  int iVar5;
  int iVar6;
  int *piVar7;
  short unaff_s2;
  short unaff_s6;
  code *pcVar8;
  
  if ((param_4 == 2) && (*(int *)(param_1 + 0x2c) != 0)) {
    cVar2 = FUN_8001b3ec(*(int *)(param_1 + 0x2c),param_2,param_3);
    if (cVar2 != '\0') {
      iVar5 = *(int *)(param_1 + 0x2c);
      iVar6 = (int)*(short *)(iVar5 + 10);
      if (iVar6 != 0) {
        if (iVar6 < 1) {
          pcVar8 = *(code **)(iVar5 + 0xc);
        }
        else {
          iVar3 = iVar6 * 8 + *(int *)(iVar5 + *(short *)(iVar5 + 0xc));
          unaff_s6 = (short)*(undefined4 *)(iVar3 + -8);
          pcVar8 = *(code **)(iVar3 + -4);
        }
        iVar3 = (int)*(short *)(iVar5 + 8);
        if (0 < iVar6 << 0x10) {
          iVar3 = unaff_s6 + iVar3;
        }
        uVar4 = (*pcVar8)(iVar5 + iVar3,param_5,param_6,param_7);
        return uVar4;
      }
    }
  }
  else {
    for (piVar7 = *(int **)(param_1 + 0x24); piVar7 != (int *)0x0; piVar7 = (int *)*piVar7) {
      iVar5 = piVar7[1];
      bVar1 = false;
      if ((iVar5 != param_7) && ((param_4 & *(ushort *)(iVar5 + 0x12)) != 0)) {
        cVar2 = FUN_8001b3ec(iVar5,param_2,param_3);
        bVar1 = cVar2 != '\0';
      }
      if (bVar1) {
        iVar6 = (int)*(short *)(iVar5 + 10);
        if (iVar6 == 0) {
          return 0;
        }
        if (iVar6 < 1) {
          pcVar8 = *(code **)(iVar5 + 0xc);
        }
        else {
          iVar3 = iVar6 * 8 + *(int *)(iVar5 + *(short *)(iVar5 + 0xc));
          unaff_s2 = (short)*(undefined4 *)(iVar3 + -8);
          pcVar8 = *(code **)(iVar3 + -4);
        }
        iVar3 = (int)*(short *)(iVar5 + 8);
        if (0 < iVar6 << 0x10) {
          iVar3 = unaff_s2 + iVar3;
        }
        uVar4 = (*pcVar8)(iVar5 + iVar3,param_5,param_6,param_7);
        return uVar4;
      }
    }
  }
  return 0;
}



void FUN_80022d90(int param_1,short param_2,undefined2 param_3,undefined4 param_4,undefined4 param_5
                 )

{
  int iVar1;
  int iVar2;
  int iVar3;
  short in_t0;
  code *pcVar4;
  int *piVar5;
  undefined4 unaff_s2;
  
  if ((param_2 == 2) && (iVar1 = *(int *)(param_1 + 0x2c), iVar1 != 0)) {
    iVar3 = (int)*(short *)(iVar1 + 10);
    if (iVar3 != 0) {
      if (iVar3 < 1) {
        pcVar4 = *(code **)(iVar1 + 0xc);
      }
      else {
        iVar2 = iVar3 * 8 + *(int *)(iVar1 + *(short *)(iVar1 + 0xc));
        in_t0 = (short)*(undefined4 *)(iVar2 + -8);
        pcVar4 = *(code **)(iVar2 + -4);
      }
      iVar2 = (int)*(short *)(iVar1 + 8);
      if (0 < iVar3 << 0x10) {
        iVar2 = in_t0 + iVar2;
      }
      (*pcVar4)(iVar1 + iVar2,param_3,param_4,param_5);
    }
  }
  else {
    for (piVar5 = *(int **)(param_1 + 0x24); piVar5 != (int *)0x0; piVar5 = (int *)*piVar5) {
      iVar1 = piVar5[1];
      iVar3 = (int)*(short *)(iVar1 + 10);
      if (iVar3 != 0) {
        if (iVar3 < 1) {
          pcVar4 = *(code **)(iVar1 + 0xc);
        }
        else {
          iVar2 = iVar3 * 8 + *(int *)(iVar1 + *(short *)(iVar1 + 0xc));
          unaff_s2 = *(undefined4 *)(iVar2 + -8);
          pcVar4 = *(code **)(iVar2 + -4);
        }
        iVar2 = (int)*(short *)(iVar1 + 8);
        if (0 < iVar3 << 0x10) {
          iVar2 = (short)unaff_s2 + iVar2;
        }
        (*pcVar4)(iVar1 + iVar2,param_3,param_4,param_5);
      }
    }
  }
  return;
}



void FUN_80022f20(int param_1,short param_2,undefined2 param_3,undefined4 param_4,undefined4 param_5
                 )

{
  int iVar1;
  int iVar2;
  int iVar3;
  short in_t0;
  code *pcVar4;
  int *piVar5;
  undefined4 unaff_s2;
  
  if ((param_2 == 2) && (iVar1 = *(int *)(param_1 + 0x2c), iVar1 != 0)) {
    iVar3 = (int)*(short *)(iVar1 + 10);
    if (iVar3 != 0) {
      if (iVar3 < 1) {
        pcVar4 = *(code **)(iVar1 + 0xc);
      }
      else {
        iVar2 = iVar3 * 8 + *(int *)(iVar1 + *(short *)(iVar1 + 0xc));
        in_t0 = (short)*(undefined4 *)(iVar2 + -8);
        pcVar4 = *(code **)(iVar2 + -4);
      }
      iVar2 = (int)*(short *)(iVar1 + 8);
      if (0 < iVar3 << 0x10) {
        iVar2 = in_t0 + iVar2;
      }
      (*pcVar4)(iVar1 + iVar2,param_3,param_4,param_5);
    }
  }
  else {
    for (piVar5 = *(int **)(param_1 + 0x1c); piVar5 != (int *)0x0; piVar5 = (int *)*piVar5) {
      iVar1 = piVar5[1];
      iVar3 = (int)*(short *)(iVar1 + 10);
      if (iVar3 != 0) {
        if (iVar3 < 1) {
          pcVar4 = *(code **)(iVar1 + 0xc);
        }
        else {
          iVar2 = iVar3 * 8 + *(int *)(iVar1 + *(short *)(iVar1 + 0xc));
          unaff_s2 = *(undefined4 *)(iVar2 + -8);
          pcVar4 = *(code **)(iVar2 + -4);
        }
        iVar2 = (int)*(short *)(iVar1 + 8);
        if (0 < iVar3 << 0x10) {
          iVar2 = (short)unaff_s2 + iVar2;
        }
        (*pcVar4)(iVar1 + iVar2,param_3,param_4,param_5);
      }
    }
  }
  return;
}



void FUN_800233bc(int param_1)

{
  char cVar1;
  ushort uVar2;
  ushort uVar3;
  ushort uVar4;
  ushort uVar5;
  short sVar6;
  short sVar7;
  bool bVar8;
  short sVar9;
  undefined2 uVar10;
  int iVar11;
  int iVar12;
  int iVar13;
  int iVar14;
  uint uVar15;
  uint uVar16;
  uint uVar17;
  int iVar18;
  short in_t0;
  code *pcVar19;
  uint uVar20;
  short unaff_s2;
  short unaff_s4;
  short unaff_s6;
  short local_40;
  short local_30;
  
  iVar14 = *(int *)(param_1 + 0x30);
  if (iVar14 == 0) {
    return;
  }
  if (*(char *)(param_1 + 99) != '\0') {
    return;
  }
  uVar20 = (uint)*(byte *)(param_1 + 0x12a);
  if (*(char *)(iVar14 + 0x74) == '\x01') {
    uVar20 = -uVar20;
  }
  if (*(char *)(param_1 + 0x62) != '\0') {
    uVar20 = -uVar20;
  }
  cVar1 = *(char *)(param_1 + 0x61);
  iVar18 = (int)*(short *)(iVar14 + 0x26);
  uVar15 = (uint)*(ushort *)(iVar14 + 0x68);
  if (iVar18 != 0) {
    if (iVar18 < 1) {
      pcVar19 = *(code **)(iVar14 + 0x28);
    }
    else {
      iVar11 = iVar18 * 8 + *(int *)(iVar14 + *(short *)(iVar14 + 0x28));
      in_t0 = (short)*(undefined4 *)(iVar11 + -8);
      pcVar19 = *(code **)(iVar11 + -4);
    }
    iVar11 = (int)*(short *)(iVar14 + 0x24);
    if (0 < iVar18 << 0x10) {
      iVar11 = in_t0 + iVar11;
    }
    uVar15 = (*pcVar19)(iVar14 + iVar11,(int)(short)*(ushort *)(iVar14 + 0x68));
  }
  uVar2 = *(ushort *)(param_1 + 0x120);
  iVar14 = *(int *)(param_1 + 0x30);
  uVar3 = *(ushort *)(param_1 + 100);
  iVar18 = (int)*(short *)(iVar14 + 0x2e);
  uVar16 = (uint)*(ushort *)(iVar14 + 0x6a);
  if (iVar18 != 0) {
    if (iVar18 < 1) {
      pcVar19 = *(code **)(iVar14 + 0x30);
    }
    else {
      iVar11 = iVar18 * 8 + *(int *)(iVar14 + *(short *)(iVar14 + 0x30));
      unaff_s2 = (short)*(undefined4 *)(iVar11 + -8);
      pcVar19 = *(code **)(iVar11 + -4);
    }
    iVar11 = (int)*(short *)(iVar14 + 0x2c);
    if (0 < iVar18 << 0x10) {
      iVar11 = unaff_s2 + iVar11;
    }
    uVar16 = (*pcVar19)(iVar14 + iVar11,(int)(short)*(ushort *)(iVar14 + 0x6a));
  }
  uVar4 = *(ushort *)(param_1 + 0x122);
  iVar14 = *(int *)(param_1 + 0x30);
  uVar5 = *(ushort *)(param_1 + 0x66);
  iVar18 = (int)*(short *)(iVar14 + 0x2e);
  uVar17 = (uint)*(ushort *)(iVar14 + 0x6a);
  if (iVar18 != 0) {
    if (iVar18 < 1) {
      pcVar19 = *(code **)(iVar14 + 0x30);
    }
    else {
      iVar11 = iVar18 * 8 + *(int *)(iVar14 + *(short *)(iVar14 + 0x30));
      unaff_s4 = (short)*(undefined4 *)(iVar11 + -8);
      pcVar19 = *(code **)(iVar11 + -4);
    }
    iVar11 = (int)*(short *)(iVar14 + 0x2c);
    if (0 < iVar18 << 0x10) {
      iVar11 = unaff_s4 + iVar11;
    }
    uVar17 = (*pcVar19)(iVar14 + iVar11,(int)(short)*(ushort *)(iVar14 + 0x6a));
  }
  iVar14 = *(int *)(param_1 + 0x30);
  iVar11 = uVar17 - *(ushort *)(param_1 + 0x56);
  iVar18 = (int)*(short *)(iVar14 + 0x26);
  uVar17 = (uint)*(ushort *)(iVar14 + 0x68);
  if (iVar18 != 0) {
    if (iVar18 < 1) {
      pcVar19 = *(code **)(iVar14 + 0x28);
    }
    else {
      iVar12 = iVar18 * 8 + *(int *)(iVar14 + *(short *)(iVar14 + 0x28));
      unaff_s6 = (short)*(undefined4 *)(iVar12 + -8);
      pcVar19 = *(code **)(iVar12 + -4);
    }
    iVar12 = (int)*(short *)(iVar14 + 0x24);
    if (0 < iVar18 << 0x10) {
      iVar12 = unaff_s6 + iVar12;
    }
    uVar17 = (*pcVar19)(iVar14 + iVar12,(int)(short)*(ushort *)(iVar14 + 0x68));
  }
  iVar18 = (uint)uVar5 + (uint)uVar4 + uVar16 + ((-(uint)(cVar1 != '\0') & 0x60) - 0x78) + iVar11;
  uVar17 = uVar17 - *(ushort *)(param_1 + 0x54);
  iVar14 = (uint)uVar3 + (uint)uVar2 + uVar15 + (uVar20 - 0xa0) + uVar17;
  if ((*(char *)(param_1 + 0x58) != '\0') && (iVar14 * 0x10000 < 0)) {
    iVar14 = 0;
  }
  if (*(char *)(param_1 + 0x5a) != '\0') {
    if ((int)*(short *)(param_1 + 0x48) - (int)*(short *)PTR_DAT_800a59b0 < (int)(short)iVar14) {
      iVar14 = (int)*(short *)(param_1 + 0x48) - (int)*(short *)PTR_DAT_800a59b0;
    }
    if (iVar14 << 0x10 < 0) {
      iVar14 = 0;
    }
  }
  if ((*(char *)(param_1 + 0x59) != '\0') && (iVar18 * 0x10000 >> 0x10 < 5)) {
    iVar18 = 5;
  }
  if (*(char *)(param_1 + 0x5b) != '\0') {
    if (((int)*(short *)(param_1 + 0x4a) - (int)*(short *)(PTR_DAT_800a59b0 + 2)) + -5 <
        (int)(short)iVar18) {
      iVar18 = ((int)*(short *)(param_1 + 0x4a) - (int)*(short *)(PTR_DAT_800a59b0 + 2)) + -5;
    }
    if (iVar18 << 0x10 < 0) {
      iVar18 = 0;
    }
  }
  sVar6 = *(short *)(param_1 + 0x44);
  sVar7 = *(short *)(param_1 + 0x44);
  uVar20 = iVar14 - (uint)*(ushort *)(param_1 + 0x44);
  iVar14 = (int)(uVar20 * 0x10000) >> 0x10;
  if (iVar14 == 0) {
    *(undefined4 *)(param_1 + 0x4c) = 0;
  }
  else {
    if ((uVar17 & 0xffff) == 0) {
      if (iVar14 < 0) {
        uVar20 = -uVar20;
      }
      if (0x8f < (short)uVar20) goto LAB_80023854;
      iVar12 = *(int *)(&DAT_8009b0d0 + (uVar20 >> 1 & 0x7c));
    }
    else {
      if (iVar14 < 0) {
        uVar20 = -uVar20;
      }
      if ((short)uVar20 < 0x90) {
        iVar12 = *(int *)(&DAT_8009b160 + (uVar20 >> 1 & 0x7c));
      }
      else {
LAB_80023854:
        iVar12 = 0xa0000;
      }
    }
    if (iVar14 < 0) {
      iVar12 = -iVar12;
    }
    iVar14 = *(int *)(param_1 + 0x4c);
    if (iVar14 < iVar12) {
      iVar13 = 0x10000;
      if (iVar14 < 0) {
        iVar13 = 0x8000;
      }
      *(int *)(param_1 + 0x4c) = iVar14 + iVar13;
      bVar8 = iVar12 < *(int *)(param_1 + 0x4c);
    }
    else {
      if (iVar14 <= iVar12) goto LAB_800238dc;
      iVar13 = -0x10000;
      if (0 < iVar14) {
        iVar13 = -0x8000;
      }
      *(int *)(param_1 + 0x4c) = iVar14 + iVar13;
      bVar8 = *(int *)(param_1 + 0x4c) < iVar12;
    }
    if (bVar8) {
      *(int *)(param_1 + 0x4c) = iVar12;
    }
  }
LAB_800238dc:
  uVar20 = iVar18 - (uint)*(ushort *)(param_1 + 0x46);
  if ((uVar20 & 0xffff) == 0) {
    *(undefined4 *)(param_1 + 0x50) = 0;
    goto LAB_80023ae8;
  }
  if (((*(char *)(param_1 + 0x60) != '\0') &&
      ((short)(*(short *)(param_1 + 0x46) + -0x66) <= (short)iVar18)) &&
     ((short)iVar18 <= (short)(*(short *)(param_1 + 0x46) + 0x10))) {
    iVar14 = *(int *)(param_1 + 0x50);
    if (iVar14 < 1) {
      if (-1 < iVar14) goto LAB_80023ae8;
      iVar18 = 0x10000;
      if (iVar11 * 0x10000 < 1) {
        iVar18 = 0x8000;
      }
    }
    else {
      iVar18 = -0x8000;
      if (iVar11 * 0x10000 < 0) {
        iVar18 = -0x10000;
      }
    }
    *(int *)(param_1 + 0x50) = iVar14 + iVar18;
    goto LAB_80023ae8;
  }
  iVar14 = (int)(uVar20 * 0x10000) >> 0x10;
  if (iVar14 < 1) {
    if (iVar11 * 0x10000 == 0) {
      if (iVar14 < 0) {
        uVar20 = -uVar20;
      }
      if ((short)uVar20 < 0x90) {
        iVar18 = *(int *)(&DAT_8009b0d0 + (uVar20 >> 1 & 0x7c));
      }
      else {
        iVar18 = 0xa0000;
      }
    }
    else {
      if (iVar14 < 0) {
        uVar20 = -uVar20;
      }
      if ((short)uVar20 < 0x90) {
        iVar18 = *(int *)(&DAT_8009b160 + (uVar20 >> 1 & 0x7c));
      }
      else {
        iVar18 = 0xa0000;
      }
    }
    if (iVar14 < 0) {
      iVar18 = -iVar18;
    }
  }
  else if (iVar11 * 0x10000 == 0) {
    if (0x8f < iVar14) goto LAB_800239d0;
    iVar18 = *(int *)(&DAT_8009b0d0 + (uVar20 >> 1 & 0x7c));
  }
  else if (0x8f < iVar14) {
LAB_800239d0:
    iVar18 = 0xa0000;
  }
  else {
    iVar18 = *(int *)(&DAT_8009b118 + (uVar20 >> 1 & 0x7c));
  }
  iVar14 = *(int *)(param_1 + 0x50);
  if (iVar14 < iVar18) {
    iVar11 = 0x10000;
    if (iVar14 < 0) {
      iVar11 = 0x8000;
    }
    *(int *)(param_1 + 0x50) = iVar14 + iVar11;
    bVar8 = iVar18 < *(int *)(param_1 + 0x50);
  }
  else {
    if (iVar14 <= iVar18) goto LAB_80023ae8;
    *(int *)(param_1 + 0x50) = iVar14 + -0x10000;
    bVar8 = *(int *)(param_1 + 0x50) < iVar18;
  }
  if (bVar8) {
    *(int *)(param_1 + 0x50) = iVar18;
  }
LAB_80023ae8:
  iVar14 = *(short *)(param_1 + 0x46) * 0x10000 + (uint)*(ushort *)(param_1 + 0x5e) +
           *(int *)(param_1 + 0x50);
  *(short *)(param_1 + 0x5e) = (short)iVar14;
  iVar18 = *(short *)(param_1 + 0x44) * 0x10000 + (uint)*(ushort *)(param_1 + 0x5c) +
           *(int *)(param_1 + 0x4c);
  *(short *)(param_1 + 0x44) = (short)((uint)iVar18 >> 0x10);
  *(short *)(param_1 + 0x46) = (short)((uint)iVar14 >> 0x10);
  *(short *)(param_1 + 0x5c) = (short)iVar18;
  if ((*(char *)(param_1 + 0x58) != '\0') && (*(short *)(param_1 + 0x44) < 0)) {
    *(undefined2 *)(param_1 + 0x44) = 0;
  }
  if (*(char *)(param_1 + 0x5a) != '\0') {
    if ((int)*(short *)(param_1 + 0x48) - (int)*(short *)PTR_DAT_800a59b0 <
        (int)*(short *)(param_1 + 0x44)) {
      *(short *)(param_1 + 0x44) = *(short *)(param_1 + 0x48) - *(short *)PTR_DAT_800a59b0;
    }
    if (*(short *)(param_1 + 0x44) < 0) {
      *(undefined2 *)(param_1 + 0x44) = 0;
    }
  }
  if ((*(char *)(param_1 + 0x59) != '\0') && (*(short *)(param_1 + 0x46) < 5)) {
    *(undefined2 *)(param_1 + 0x46) = 5;
  }
  if (*(char *)(param_1 + 0x5b) != '\0') {
    if (((int)*(short *)(param_1 + 0x4a) - (int)*(short *)(PTR_DAT_800a59b0 + 2)) + -5 <
        (int)*(short *)(param_1 + 0x46)) {
      *(short *)(param_1 + 0x46) =
           (*(short *)(param_1 + 0x4a) - *(short *)(PTR_DAT_800a59b0 + 2)) + -5;
    }
    if (*(short *)(param_1 + 0x46) < 0) {
      *(undefined2 *)(param_1 + 0x46) = 0;
    }
  }
  iVar14 = *(int *)(param_1 + 0x30);
  *(short *)(param_1 + 0x46) =
       *(short *)(param_1 + 0x46) + *(short *)(&DAT_8009b094 + (uint)*(byte *)(param_1 + 0x11a) * 2)
  ;
  iVar18 = (int)*(short *)(iVar14 + 0x26);
  sVar9 = *(short *)(iVar14 + 0x68);
  if (iVar18 != 0) {
    if (iVar18 < 1) {
      pcVar19 = *(code **)(iVar14 + 0x28);
    }
    else {
      iVar11 = iVar18 * 8 + *(int *)(iVar14 + *(short *)(iVar14 + 0x28));
      local_40 = (short)*(undefined4 *)(iVar11 + -8);
      pcVar19 = *(code **)(iVar11 + -4);
    }
    iVar11 = (int)*(short *)(iVar14 + 0x24);
    if (0 < iVar18 << 0x10) {
      iVar11 = local_40 + iVar11;
    }
    sVar9 = (*pcVar19)(iVar14 + iVar11,(int)sVar9,pcVar19,iVar18,sVar6 + -0x32,sVar7 + 0x32);
  }
  iVar14 = *(int *)(param_1 + 0x30);
  *(short *)(param_1 + 0x54) = sVar9;
  iVar18 = (int)*(short *)(iVar14 + 0x2e);
  if (iVar18 == 0) {
    *(short *)(param_1 + 0x56) = *(short *)(iVar14 + 0x6a);
  }
  else {
    if (iVar18 < 1) {
      pcVar19 = *(code **)(iVar14 + 0x30);
    }
    else {
      iVar11 = iVar18 * 8 + *(int *)(iVar14 + *(short *)(iVar14 + 0x30));
      local_30 = (short)*(undefined4 *)(iVar11 + -8);
      pcVar19 = *(code **)(iVar11 + -4);
    }
    iVar11 = (int)*(short *)(iVar14 + 0x2c);
    if (0 < iVar18 << 0x10) {
      iVar11 = local_30 + iVar11;
    }
    uVar10 = (*pcVar19)(iVar14 + iVar11,(int)*(short *)(iVar14 + 0x6a));
    *(undefined2 *)(param_1 + 0x56) = uVar10;
  }
  return;
}



void FUN_80023db8(int param_1,short param_2,short param_3)

{
  char cVar1;
  short sVar2;
  short sVar3;
  short sVar4;
  short sVar5;
  undefined2 uVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  short in_t0;
  code *pcVar10;
  ushort uVar11;
  short unaff_s2;
  short unaff_s4;
  short local_30;
  
  if (*(char *)(param_1 + 99) == '\0') {
    iVar8 = *(int *)(param_1 + 0x30);
    uVar11 = (ushort)*(byte *)(param_1 + 0x12a);
    if (*(char *)(iVar8 + 0x74) == '\x01') {
      uVar11 = -uVar11;
    }
    if (*(char *)(param_1 + 0x62) != '\0') {
      uVar11 = -uVar11;
    }
    cVar1 = *(char *)(param_1 + 0x61);
    iVar9 = (int)*(short *)(iVar8 + 0x26);
    sVar4 = *(short *)(iVar8 + 0x68);
    if (iVar9 != 0) {
      if (iVar9 < 1) {
        pcVar10 = *(code **)(iVar8 + 0x28);
      }
      else {
        iVar7 = iVar9 * 8 + *(int *)(iVar8 + *(short *)(iVar8 + 0x28));
        in_t0 = (short)*(undefined4 *)(iVar7 + -8);
        pcVar10 = *(code **)(iVar7 + -4);
      }
      iVar7 = (int)*(short *)(iVar8 + 0x24);
      if (0 < iVar9 << 0x10) {
        iVar7 = in_t0 + iVar7;
      }
      sVar4 = (*pcVar10)(iVar8 + iVar7,(int)sVar4);
    }
    sVar2 = *(short *)(param_1 + 0x120);
    iVar8 = *(int *)(param_1 + 0x30);
    sVar3 = *(short *)(param_1 + 100);
    iVar9 = (int)*(short *)(iVar8 + 0x2e);
    sVar5 = *(short *)(iVar8 + 0x6a);
    if (iVar9 != 0) {
      if (iVar9 < 1) {
        pcVar10 = *(code **)(iVar8 + 0x30);
      }
      else {
        iVar7 = iVar9 * 8 + *(int *)(iVar8 + *(short *)(iVar8 + 0x30));
        unaff_s2 = (short)*(undefined4 *)(iVar7 + -8);
        pcVar10 = *(code **)(iVar7 + -4);
      }
      iVar7 = (int)*(short *)(iVar8 + 0x2c);
      if (0 < iVar9 << 0x10) {
        iVar7 = unaff_s2 + iVar7;
      }
      sVar5 = (*pcVar10)(iVar8 + iVar7,(int)sVar5);
    }
    *(ushort *)(param_1 + 0x44) = param_2 + sVar3 + sVar2 + sVar4 + (uVar11 - 0xa0);
    *(ushort *)(param_1 + 0x46) =
         param_3 + *(short *)(param_1 + 0x66) +
                   *(short *)(param_1 + 0x122) + sVar5 + ((-(ushort)(cVar1 != '\0') & 0x60) - 0x78);
    if ((*(char *)(param_1 + 0x58) != '\0') && (*(short *)(param_1 + 0x44) < 0)) {
      *(undefined2 *)(param_1 + 0x44) = 0;
    }
    if (*(char *)(param_1 + 0x5a) != '\0') {
      if ((int)*(short *)(param_1 + 0x48) - (int)*(short *)PTR_DAT_800a59b0 <
          (int)*(short *)(param_1 + 0x44)) {
        *(short *)(param_1 + 0x44) = *(short *)(param_1 + 0x48) - *(short *)PTR_DAT_800a59b0;
      }
      if (*(short *)(param_1 + 0x44) < 0) {
        *(undefined2 *)(param_1 + 0x44) = 0;
      }
    }
    if ((*(char *)(param_1 + 0x59) != '\0') && (*(short *)(param_1 + 0x46) < 5)) {
      *(undefined2 *)(param_1 + 0x46) = 5;
    }
    if (*(char *)(param_1 + 0x5b) != '\0') {
      if (((int)*(short *)(param_1 + 0x4a) - (int)*(short *)(PTR_DAT_800a59b0 + 2)) + -5 <
          (int)*(short *)(param_1 + 0x46)) {
        *(short *)(param_1 + 0x46) =
             (*(short *)(param_1 + 0x4a) - *(short *)(PTR_DAT_800a59b0 + 2)) + -5;
      }
      if (*(short *)(param_1 + 0x46) < 0) {
        *(undefined2 *)(param_1 + 0x46) = 0;
      }
    }
    iVar8 = *(int *)(param_1 + 0x30);
    *(short *)(param_1 + 0x46) =
         *(short *)(param_1 + 0x46) +
         *(short *)(&DAT_8009b094 + (uint)*(byte *)(param_1 + 0x11a) * 2);
    iVar9 = (int)*(short *)(iVar8 + 0x26);
    sVar4 = *(short *)(iVar8 + 0x68);
    if (iVar9 != 0) {
      if (iVar9 < 1) {
        pcVar10 = *(code **)(iVar8 + 0x28);
      }
      else {
        iVar7 = iVar9 * 8 + *(int *)(iVar8 + *(short *)(iVar8 + 0x28));
        unaff_s4 = (short)*(undefined4 *)(iVar7 + -8);
        pcVar10 = *(code **)(iVar7 + -4);
      }
      iVar7 = (int)*(short *)(iVar8 + 0x24);
      if (0 < iVar9 << 0x10) {
        iVar7 = unaff_s4 + iVar7;
      }
      sVar4 = (*pcVar10)(iVar8 + iVar7,(int)sVar4);
    }
    iVar8 = *(int *)(param_1 + 0x30);
    *(short *)(param_1 + 0x54) = sVar4;
    iVar9 = (int)*(short *)(iVar8 + 0x2e);
    if (iVar9 == 0) {
      *(short *)(param_1 + 0x56) = *(short *)(iVar8 + 0x6a);
    }
    else {
      if (iVar9 < 1) {
        pcVar10 = *(code **)(iVar8 + 0x30);
      }
      else {
        iVar7 = iVar9 * 8 + *(int *)(iVar8 + *(short *)(iVar8 + 0x30));
        local_30 = (short)*(undefined4 *)(iVar7 + -8);
        pcVar10 = *(code **)(iVar7 + -4);
      }
      iVar7 = (int)*(short *)(iVar8 + 0x2c);
      if (0 < iVar9 << 0x10) {
        iVar7 = local_30 + iVar7;
      }
      uVar6 = (*pcVar10)(iVar8 + iVar7,(int)*(short *)(iVar8 + 0x6a));
      *(undefined2 *)(param_1 + 0x56) = uVar6;
    }
  }
  return;
}



undefined FUN_800241f0(int param_1,int param_2,int param_3)

{
  int iVar1;
  int iVar2;
  
  if (*(int *)(param_1 + 0x68) != 0) {
    iVar2 = (int)((((param_2 << 0x10) >> 0x14) - (uint)*(ushort *)(param_1 + 0x6c)) * 0x10000) >>
            0x10;
    if (-1 < iVar2) {
      if (iVar2 < *(short *)(param_1 + 0x70)) {
        iVar1 = (int)((((param_3 << 0x10) >> 0x14) - (uint)*(ushort *)(param_1 + 0x6e)) * 0x10000)
                >> 0x10;
        if (iVar1 < 0) {
          return 0;
        }
        if (iVar1 < *(short *)(param_1 + 0x72)) {
          return *(undefined *)
                  (*(int *)(param_1 + 0x68) + iVar1 * *(short *)(param_1 + 0x70) + iVar2);
        }
      }
    }
  }
  return 0;
}



void FUN_80024284(int param_1)

{
  short sVar1;
  short sVar2;
  short sVar3;
  short sVar4;
  undefined4 *puVar5;
  int iVar6;
  undefined4 uVar7;
  code *pcVar8;
  int iVar9;
  short *psVar10;
  int *piVar11;
  uint uVar12;
  undefined4 unaff_s4;
  short local_30;
  short sStack_2e;
  short local_2c;
  
  sVar1 = *(short *)(param_1 + 0x44);
  sVar2 = *(short *)(param_1 + 0x46);
  sVar3 = *(short *)PTR_DAT_800a59b0;
  sVar4 = *(short *)(PTR_DAT_800a59b0 + 2);
  uVar12 = *(uint *)(param_1 + 0x10c) & 1;
  for (piVar11 = *(int **)(param_1 + 0x28); piVar11 != (int *)0x0; piVar11 = (int *)*piVar11) {
    psVar10 = (short *)piVar11[1];
    if (((((uVar12 & 1) != 0) && (*psVar10 < (short)(sVar1 + sVar3 + 0x10))) &&
        ((short)(sVar1 + -0x10) < psVar10[2])) &&
       ((((*(byte *)(psVar10 + 0xb) & 1) == 0 && (psVar10[1] < (short)(sVar2 + sVar4 + 0x10))) &&
        (((short)(sVar2 + -0x10) < psVar10[3] &&
         ((uint)(ushort)psVar10[9] < (uint)*(ushort *)(param_1 + 0x80))))))) {
      puVar5 = (undefined4 *)((uint)(ushort)psVar10[9] * 8 + *(int *)(param_1 + 0x7c));
      uVar7 = *puVar5;
      pcVar8 = (code *)puVar5[1];
      sStack_2e = (short)((uint)uVar7 >> 0x10);
      iVar9 = (int)sStack_2e;
      if (0 < iVar9) {
        local_2c = (short)pcVar8;
        iVar6 = iVar9 * 8 + *(int *)(param_1 + local_2c);
        unaff_s4 = *(undefined4 *)(iVar6 + -8);
        pcVar8 = *(code **)(iVar6 + -4);
      }
      local_30 = (short)uVar7;
      iVar6 = (int)local_30;
      if (0 < iVar9 << 0x10) {
        iVar6 = (short)unaff_s4 + iVar6;
      }
      (*pcVar8)(param_1 + iVar6,psVar10);
      *(byte *)(psVar10 + 0xb) = *(byte *)(psVar10 + 0xb) | 1;
    }
    uVar12 = uVar12 + 1;
  }
  return;
}



void FUN_80024464(int param_1)

{
  undefined4 *puVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  
  puVar2 = *(undefined4 **)(param_1 + 0x28);
  puVar3 = (undefined4 *)0x0;
  while (puVar1 = puVar2, puVar1 != (undefined4 *)0x0) {
    if ((*(byte *)(puVar1[1] + 0x16) & 2) == 0) {
      *(undefined *)(puVar1[1] + 0x16) = 0;
      puVar2 = (undefined4 *)*puVar1;
      puVar3 = puVar1;
    }
    else {
      if (puVar3 == (undefined4 *)0x0) {
        *(undefined4 *)(param_1 + 0x28) = *puVar1;
      }
      else {
        *puVar3 = *puVar1;
      }
      potentially_load_asset_(PTR_DAT_800a59b0,puVar1[1],0,0);
      puVar2 = (undefined4 *)*puVar1;
      potentially_load_asset_(PTR_DAT_800a59b0,puVar1,8,0);
    }
  }
  return;
}



undefined4
FUN_800245b8(int param_1,short param_2,short param_3,undefined4 *param_4,undefined4 *param_5)

{
  undefined4 *puVar1;
  short *psVar2;
  ushort uVar3;
  
  psVar2 = *(short **)(param_1 + 0x74);
  uVar3 = 0;
  if (*(short *)(param_1 + 0x78) != 0) {
    puVar1 = (undefined4 *)(psVar2 + 6);
    do {
      if ((((*psVar2 <= param_2) && (param_2 < *(short *)(puVar1 + -2))) &&
          (*(short *)((int)puVar1 + -10) <= param_3)) && (param_3 < *(short *)((int)puVar1 + -6))) {
        *param_4 = puVar1[-1];
        *param_5 = *puVar1;
        return 1;
      }
      puVar1 = puVar1 + 4;
      uVar3 = uVar3 + 1;
      psVar2 = psVar2 + 8;
    } while (uVar3 < *(ushort *)(param_1 + 0x78));
  }
  return 0;
}



void FUN_80024674(int param_1)

{
  undefined *puVar1;
  
  puVar1 = (undefined *)FUN_8007b478(param_1 + 0x84);
  *(undefined *)(param_1 + 0x130) = 1;
  *(undefined *)(param_1 + 0x131) = *puVar1;
  *(undefined *)(param_1 + 0x132) = puVar1[1];
  *(undefined *)(param_1 + 0x133) = puVar1[2];
  return;
}



void FUN_800246cc(int param_1)

{
  undefined *puVar1;
  
  puVar1 = (undefined *)FUN_8007b484(param_1 + 0x84);
  *(undefined *)(param_1 + 0x127) = *puVar1;
  *(undefined *)(param_1 + 0x128) = puVar1[1];
  *(undefined *)(param_1 + 0x129) = puVar1[2];
  return;
}



void FUN_8002471c(int param_1)

{
  short local_10;
  short local_e;
  
  FUN_8007b418(&local_10,param_1 + 0x84);
  *(short *)(param_1 + 0x116) = local_10 * 0x10 + 8;
  *(short *)(param_1 + 0x118) = local_e * 0x10 + 0xf;
  return;
}



void FUN_80024774(int param_1)

{
  undefined *puVar1;
  short sVar2;
  short sVar3;
  short sVar4;
  bool bVar5;
  uint uVar6;
  uint *puVar7;
  bool bVar8;
  uint uVar9;
  uint uVar10;
  undefined2 uVar11;
  ushort uVar12;
  undefined4 uVar13;
  uint *puVar14;
  uint uVar15;
  undefined4 uVar16;
  uint uVar17;
  int iVar18;
  ushort uVar19;
  undefined auStack_60 [4];
  int local_5c;
  int local_58;
  uint local_54;
  uint local_50;
  uint local_4c;
  uint local_48;
  short local_40;
  short local_3e;
  uint local_38;
  uint local_34;
  byte local_30;
  
  iVar18 = param_1 + 0x84;
  uVar19 = 0;
  local_30 = (byte)(*(ushort *)(PTR_DAT_800a59b0 + 2) >> 4);
  FUN_8007b3f4(&local_40,iVar18);
  *(short *)(param_1 + 0x48) = local_40 << 4;
  *(short *)(param_1 + 0x4a) = local_3e << 4;
  uVar11 = FUN_8007b788(iVar18);
  *(undefined2 *)(param_1 + 0x78) = uVar11;
  uVar13 = FUN_8007b79c(iVar18);
  *(undefined4 *)(param_1 + 0x74) = uVar13;
  do {
    uVar12 = FUN_8007b688(param_1 + 0x84);
    if (uVar12 <= uVar19) {
      return;
    }
    puVar14 = (uint *)FUN_8007b6c0(param_1 + 0x84,uVar19);
    if (uVar19 == 0) {
      *(undefined *)(param_1 + 0x124) = *(undefined *)(puVar14 + 0xb);
      *(undefined *)(param_1 + 0x125) = *(undefined *)((int)puVar14 + 0x2d);
      *(undefined *)(param_1 + 0x126) = *(undefined *)((int)puVar14 + 0x2e);
    }
    if ((*(short *)(puVar14 + 10) == 0) && (*(short *)((int)puVar14 + 0x26) != 3)) {
      if (*(char *)((int)puVar14 + 0x1e) != '\0') {
        *(undefined *)(param_1 + 0x59) = 1;
      }
      if (*(char *)((int)puVar14 + 0x21) != '\0') {
        *(undefined *)(param_1 + 0x5a) = 1;
      }
      if (*(char *)(puVar14 + 8) != '\0') {
        *(undefined *)(param_1 + 0x58) = 1;
      }
      if (*(char *)((int)puVar14 + 0x1f) != '\0') {
        *(undefined *)(param_1 + 0x5b) = 1;
      }
      local_38 = *puVar14;
      bVar8 = false;
      local_34 = puVar14[1];
      sVar3 = *(short *)(puVar14 + 2);
      sVar4 = *(short *)((int)puVar14 + 10);
      uVar17 = (uint)(*(short *)(puVar14 + 9) != 0);
      uVar15 = (uint)((puVar14[8] & 0xffff0000) != 0);
      if (uVar17 == 0) {
        if (uVar15 != 0) goto LAB_80024934;
      }
      else if (uVar15 == 0) {
LAB_80024934:
        if ((int)(uint)*(ushort *)((int)puVar14 + 0xe) <=
            (((int)((uint)*(ushort *)(PTR_DAT_800a59b0 + 2) << 0x10) >> 0x14) + 1) * 0x15) {
          bVar8 = true;
        }
      }
      if ((((0x3f < sVar3) || (0x3f < sVar4)) || ((uVar17 != 0 && (sVar3 < 0x15)))) ||
         ((uVar15 != 0 && (sVar4 <= (short)(ushort)local_30)))) {
        bVar8 = false;
      }
      bVar5 = false;
      if (((!bVar8) && (sVar3 < 0x81)) && (sVar4 < 0x81)) {
        bVar5 = (int)(uint)*(ushort *)((int)puVar14 + 0xe) <=
                (((int)((uint)*(ushort *)(PTR_DAT_800a59b0 + 2) << 0x10) >> 0x14) + 1) * 0x15;
      }
      if ((((uVar17 != 0) && (sVar3 != 0x40)) || ((uVar15 != 0 && (sVar4 != 0x40)))) &&
         (sVar3 != 0x80)) {
        bVar5 = false;
      }
      if (bVar8) {
        uVar13 = FUN_800143ec(PTR_DAT_800a59b0,0x3c,1,0);
        uVar16 = FUN_8007b69c(param_1 + 0x84,uVar19);
        uVar10 = local_34;
        uVar9 = local_38;
        sVar2 = *(short *)(puVar14 + 3);
        uVar6 = (uint)&stack0xffffff9f & 3;
        puVar7 = (uint *)(&stack0xffffff9f + -uVar6);
        *puVar7 = *puVar7 & -1 << (uVar6 + 1) * 8 | local_38 >> (3 - uVar6) * 8;
        puVar1 = auStack_60 + 3;
        uVar6 = (uint)puVar1 & 3;
        *(uint *)(puVar1 + -uVar6) =
             *(uint *)(puVar1 + -uVar6) & -1 << (uVar6 + 1) * 8 | uVar10 >> (3 - uVar6) * 8;
        auStack_60 = (undefined  [4])uVar10;
        local_5c = (int)sVar3;
        local_58 = (int)sVar4;
        local_54 = (uint)*(short *)((int)puVar14 + 0xe);
        local_48 = (uint)*(byte *)((int)puVar14 + 0x26);
        local_50 = uVar17;
        local_4c = uVar15;
        iVar18 = FUN_8001f530(uVar13,puVar14 + 0xb,(int)sVar2,*(undefined4 *)(param_1 + 0x108),
                              uVar16,uVar9);
        FUN_8002195c(param_1,iVar18);
      }
      else if (bVar5) {
        uVar13 = FUN_800143ec(PTR_DAT_800a59b0,0x3c,1,0);
        uVar16 = FUN_8007b69c(param_1 + 0x84,uVar19);
        uVar10 = local_34;
        uVar9 = local_38;
        sVar2 = *(short *)(puVar14 + 3);
        uVar6 = (uint)&stack0xffffff9f & 3;
        puVar7 = (uint *)(&stack0xffffff9f + -uVar6);
        *puVar7 = *puVar7 & -1 << (uVar6 + 1) * 8 | local_38 >> (3 - uVar6) * 8;
        puVar1 = auStack_60 + 3;
        uVar6 = (uint)puVar1 & 3;
        *(uint *)(puVar1 + -uVar6) =
             *(uint *)(puVar1 + -uVar6) & -1 << (uVar6 + 1) * 8 | uVar10 >> (3 - uVar6) * 8;
        auStack_60 = (undefined  [4])uVar10;
        local_5c = (int)sVar3;
        local_58 = (int)sVar4;
        local_54 = (uint)*(short *)((int)puVar14 + 0xe);
        local_48 = (uint)*(byte *)((int)puVar14 + 0x26);
        local_50 = uVar17;
        local_4c = uVar15;
        iVar18 = FUN_8001f14c(uVar13,puVar14 + 0xb,(int)sVar2,*(undefined4 *)(param_1 + 0x108),
                              uVar16,uVar9);
        FUN_80021774(param_1,iVar18);
      }
      else {
        uVar13 = FUN_800143ec(PTR_DAT_800a59b0,0x3c,1,0);
        uVar16 = FUN_8007b69c(param_1 + 0x84,uVar19);
        uVar10 = local_34;
        uVar9 = local_38;
        sVar2 = *(short *)(puVar14 + 3);
        uVar6 = (uint)&stack0xffffff9f & 3;
        puVar7 = (uint *)(&stack0xffffff9f + -uVar6);
        *puVar7 = *puVar7 & -1 << (uVar6 + 1) * 8 | local_38 >> (3 - uVar6) * 8;
        puVar1 = auStack_60 + 3;
        uVar6 = (uint)puVar1 & 3;
        *(uint *)(puVar1 + -uVar6) =
             *(uint *)(puVar1 + -uVar6) & -1 << (uVar6 + 1) * 8 | uVar10 >> (3 - uVar6) * 8;
        auStack_60 = (undefined  [4])uVar10;
        local_5c = (int)sVar3;
        local_58 = (int)sVar4;
        local_4c = (uint)*(byte *)((int)puVar14 + 0x26);
        local_54 = uVar17;
        local_50 = uVar15;
        iVar18 = FUN_8001ecbc(uVar13,puVar14 + 0xb,(int)sVar2,*(undefined4 *)(param_1 + 0x108),
                              uVar16,uVar9);
        FUN_8002158c(param_1,iVar18);
      }
      *(uint *)(iVar18 + 0x20) = puVar14[4];
      *(uint *)(iVar18 + 0x24) = puVar14[5];
      *(undefined2 *)(iVar18 + 0x30) = *(undefined2 *)(puVar14 + 6);
      *(undefined2 *)(iVar18 + 0x32) = *(undefined2 *)((int)puVar14 + 0x1a);
      *(undefined *)(iVar18 + 0x3a) = *(undefined *)(puVar14 + 7);
      *(undefined *)(iVar18 + 0x3b) = *(undefined *)((int)puVar14 + 0x1d);
    }
    uVar19 = uVar19 + 1;
  } while( true );
}



void FUN_80024cf0(int param_1)

{
  uint uVar1;
  uint *puVar2;
  char cVar3;
  undefined4 uVar4;
  int iVar5;
  undefined2 local_38;
  undefined2 local_36;
  undefined2 local_30;
  undefined2 local_2e;
  uint local_28;
  uint local_24;
  uint uStack_15;
  undefined uStack_11;
  
  iVar5 = param_1 + 0x84;
  cVar3 = FUN_8007b70c(iVar5);
  if (cVar3 == '\0') {
    *(undefined4 *)(param_1 + 0x68) = 0;
  }
  else {
    FUN_8007b718(&local_38,iVar5);
    FUN_8007b738(&local_30,iVar5);
    local_28 = CONCAT22(local_36,local_38);
    local_24 = CONCAT22(local_2e,local_30);
    uVar4 = FUN_8007b75c();
    uVar1 = (uint)&uStack_15 & 3;
    puVar2 = (uint *)((int)&uStack_15 - uVar1);
    *puVar2 = *puVar2 & -1 << (uVar1 + 1) * 8 | local_28 >> (3 - uVar1) * 8;
    uVar1 = (uint)&uStack_11 & 3;
    puVar2 = (uint *)(&uStack_11 + -uVar1);
    *puVar2 = *puVar2 & -1 << (uVar1 + 1) * 8 | local_24 >> (3 - uVar1) * 8;
    *(undefined4 *)(param_1 + 0x68) = uVar4;
    uVar1 = param_1 + 0x6fU & 3;
    puVar2 = (uint *)((param_1 + 0x6fU) - uVar1);
    *puVar2 = *puVar2 & -1 << (uVar1 + 1) * 8 | local_28 >> (3 - uVar1) * 8;
    uVar1 = param_1 + 0x6cU & 3;
    puVar2 = (uint *)((param_1 + 0x6cU) - uVar1);
    *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar1) * 8 | local_28 << uVar1 * 8;
    uVar1 = param_1 + 0x73U & 3;
    puVar2 = (uint *)((param_1 + 0x73U) - uVar1);
    *puVar2 = *puVar2 & -1 << (uVar1 + 1) * 8 | local_24 >> (3 - uVar1) * 8;
    uVar1 = param_1 + 0x70U & 3;
    puVar2 = (uint *)((param_1 + 0x70U) - uVar1);
    *puVar2 = *puVar2 & 0xffffffffU >> (4 - uVar1) * 8 | local_24 << uVar1 * 8;
  }
  return;
}



void FUN_80024dc0(int param_1)

{
  undefined *puVar1;
  int iVar2;
  uint uVar3;
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 *puVar7;
  undefined4 *puVar8;
  uint uVar9;
  
  iVar2 = *(int *)(param_1 + 0x28);
  while (iVar2 != 0) {
    puVar7 = *(undefined4 **)(param_1 + 0x28);
    potentially_load_asset_(PTR_DAT_800a59b0,puVar7[1],0,0);
    puVar1 = PTR_DAT_800a59b0;
    *(undefined4 *)(param_1 + 0x28) = *puVar7;
    potentially_load_asset_(puVar1,puVar7,8,0);
    iVar2 = *(int *)(param_1 + 0x28);
  }
  uVar3 = FUN_8007b768(param_1 + 0x84);
  if ((uVar3 & 0xffff) != 0) {
    iVar2 = FUN_8007b77c(param_1 + 0x84);
    for (uVar9 = 0; (uVar9 & 0xffff) < (uVar3 & 0xffff); uVar9 = uVar9 + 1) {
      puVar8 = (undefined4 *)((uVar9 & 0xffff) * 0x18 + iVar2);
      puVar7 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x18,1,0);
      uVar4 = puVar8[1];
      uVar5 = puVar8[2];
      uVar6 = puVar8[3];
      *puVar7 = *puVar8;
      puVar7[1] = uVar4;
      puVar7[2] = uVar5;
      puVar7[3] = uVar6;
      uVar4 = puVar8[5];
      puVar7[4] = puVar8[4];
      puVar7[5] = uVar4;
      puVar8 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
      uVar4 = *(undefined4 *)(param_1 + 0x28);
      puVar8[1] = puVar7;
      *puVar8 = uVar4;
      *(undefined4 **)(param_1 + 0x28) = puVar8;
    }
  }
  return;
}



void FUN_80024f30(int param_1)

{
  char cVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  uint uVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  short sVar9;
  uint unaff_s6;
  
  iVar8 = 0;
  iVar7 = 0;
  iVar2 = FUN_8007b67c(param_1 + 0x84);
  sVar9 = 1;
  while( true ) {
    iVar6 = (int)sVar9;
    if ((int)(uint)*(ushort *)(param_1 + 0x104) <= iVar6) break;
    if ((*(byte *)(iVar6 + iVar2 + -1) & 4) != 0) {
      iVar3 = FUN_8007b618(param_1 + 0x84,iVar6);
      if (iVar8 == 0) {
        uVar4 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
        iVar8 = FUN_8001fcec(uVar4);
        FUN_800213a4(param_1,iVar8);
        iVar7 = *(int *)(iVar8 + 0x34);
        unaff_s6 = (int)*(short *)(iVar7 + 4) + 0xfU >> 4;
      }
      uVar5 = unaff_s6 & 0xff;
      if (uVar5 == 0) {
        trap(0x1c00);
      }
      iVar6 = iVar6 * 8;
      *(undefined2 *)(iVar6 + *(int *)(param_1 + 0x108)) = *(undefined2 *)(iVar7 + 0x24);
      *(undefined2 *)(iVar6 + *(int *)(param_1 + 0x108) + 2) = *(undefined2 *)(iVar7 + 0x26);
      cVar1 = *(char *)(iVar7 + 0x31);
      *(char *)(iVar6 + *(int *)(param_1 + 0x108) + 4) =
           *(char *)(iVar7 + 0x30) + (char)((iVar3 - 1U) % uVar5) * '\x10';
      *(char *)(iVar6 + *(int *)(param_1 + 0x108) + 5) =
           cVar1 + (char)((iVar3 - 1U) / uVar5) * '\x10';
      *(undefined *)(iVar6 + *(int *)(param_1 + 0x108) + 6) = 1;
    }
    sVar9 = sVar9 + 1;
  }
  return;
}



void FUN_800250c4(int param_1)

{
  bool bVar1;
  int iVar2;
  undefined4 *puVar3;
  int iVar4;
  undefined4 *puVar5;
  undefined4 *puVar6;
  short sVar7;
  
  iVar2 = FUN_8007b4f0(param_1 + 0x84);
  sVar7 = 0;
  if (iVar2 != 0) {
    for (; iVar4 = sVar7 * 4, (int)sVar7 < (int)(uint)*(byte *)(param_1 + 0x114); sVar7 = sVar7 + 1)
    {
      if ((*(byte *)(iVar2 + iVar4) & 1) != 0) {
        iVar4 = *(int *)(iVar4 + *(int *)(param_1 + 0x110));
        if (*(undefined4 **)(param_1 + 0x1c) == (undefined4 *)0x0) {
          puVar3 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
          *(undefined4 **)(param_1 + 0x1c) = puVar3;
        }
        else {
          puVar3 = *(undefined4 **)(param_1 + 0x1c);
          puVar6 = (undefined4 *)0x0;
          while (puVar5 = puVar3, bVar1 = false, puVar5 != (undefined4 *)0x0) {
            if (*(short *)(iVar4 + 0x10) <= *(short *)(puVar5[1] + 0x10)) {
              puVar3 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
              if (puVar6 == (undefined4 *)0x0) {
                *(undefined4 **)(param_1 + 0x1c) = puVar3;
              }
              else {
                *puVar6 = puVar3;
              }
              *puVar3 = puVar5;
              puVar3[1] = iVar4;
              bVar1 = true;
              break;
            }
            puVar6 = puVar5;
            puVar3 = (undefined4 *)*puVar5;
          }
          if (bVar1) goto LAB_8002520c;
          puVar3 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,8,1,0);
          *puVar6 = puVar3;
        }
        *puVar3 = 0;
        puVar3[1] = iVar4;
      }
LAB_8002520c:
    }
  }
  return;
}



void load_all_assets_for_level(astruct_15 *param_1)

{
  undefined2 uVar1;
  undefined *puVar2;
  byte bVar3;
  undefined uVar4;
  short sVar5;
  u_short uVar6;
  int iVar7;
  undefined4 uVar8;
  u_long *p;
  uint tp;
  int iVar9;
  int iVar10;
  undefined *some_addr_at_0x84;
  byte *pbVar11;
  int iVar12;
  ushort i;
  short local_38;
  short local_36;
  RECT tile_;
  
  some_addr_at_0x84 = &param_1->field_0x84;
  sVar5 = FUN_8007b4fc(some_addr_at_0x84);
  puVar2 = PTR_DAT_800a59b0;
  param_1->field260_0x104 = sVar5 + 1U;
  iVar7 = FUN_800143ec(puVar2,8,sVar5 + 1U,0);
  param_1->field263_0x108 = iVar7;
  bVar3 = get_tile_count_((astruct_16 *)some_addr_at_0x84);
  param_1->tile_count = bVar3;
  iVar7 = FUN_800143ec(PTR_DAT_800a59b0,4,bVar3,0);
  param_1->tile_ptr = iVar7;
  iVar7 = FUN_8007b4f0(some_addr_at_0x84);
  for (i = 0; (int)(short)i < (int)(uint)param_1->tile_count; i = i + 1) {
    uVar8 = FUN_800143ec(PTR_DAT_800a59b0,0x3c,1,0);
    uVar8 = FUN_8001978c(uVar8,1);
    iVar12 = (short)i * 4;
    *(undefined4 *)(iVar12 + param_1->tile_ptr) = uVar8;
    uVar8 = FUN_8007b4b8(some_addr_at_0x84,i & 0xff);
    load_tiles(*(undefined4 *)(iVar12 + param_1->tile_ptr),uVar8);
    pbVar11 = (byte *)(iVar7 + iVar12);
    if ((iVar7 != 0) && ((*pbVar11 & 1) != 0)) {
      uVar8 = FUN_8007b4b8(some_addr_at_0x84,i & 0xff);
      FUN_80019d70(*(undefined4 *)(iVar12 + param_1->tile_ptr),uVar8);
      FUN_80019f28(*(undefined4 *)(iVar12 + param_1->tile_ptr),pbVar11[3],pbVar11[1],pbVar11[2],
                   *pbVar11 & 2);
    }
  }
  iVar7 = FUN_8007b670(&param_1->field_0x84,0x3c);
  iVar12 = FUN_8007b67c(&param_1->field_0x84);
  i = 1;
  p = (u_long *)FUN_800143ec(PTR_DAT_800a59b0,1,0x100,0);
  do {
    iVar10 = (int)(short)i;
    if ((int)(uint)param_1->field260_0x104 <= iVar10) {
      potentially_load_asset_(PTR_DAT_800a59b0,p,0,0);
      return;
    }
    bVar3 = *(byte *)(iVar10 + iVar12 + -1);
    if ((bVar3 & 4) == 0) {
      tp = (uint)((bVar3 & 2) == 0);
      uVar1 = *(undefined2 *)
               (*(int *)((uint)*(byte *)(iVar10 + iVar7 + -1) * 4 + param_1->tile_ptr) + 0x2c);
      uVar8 = 0x10;
      if (tp == 0) {
        uVar8 = 8;
      }
      FUN_8007b548(&param_1->field_0x84,iVar10,p,uVar8);
      FUN_80014274(PTR_DAT_800a59b0,&local_38,tp);
      tile_.x = local_38;
      tile_.y = local_36;
      if (tp == 1) {
        tile_.w = 8;
      }
      else {
        tile_.w = 4;
      }
      tile_.h = 0x10;
      LoadImage(&tile_,p);
      DrawSync(0);
      uVar6 = GetTPage(tp,0,(int)local_38 & 0xffffffc0,(int)local_36 & 0xffffff00);
      iVar10 = (int)((uint)i << 0x10) >> 0xd;
      *(u_short *)(iVar10 + param_1->field263_0x108) = uVar6;
      *(undefined2 *)(iVar10 + param_1->field263_0x108 + 2) = uVar1;
      if (tp == 0) {
        iVar9 = param_1->field263_0x108;
        uVar4 = (undefined)(((byte)local_38 & 0x3f) << 2);
LAB_8002553c:
        *(undefined *)(iVar10 + iVar9 + 4) = uVar4;
      }
      else if (tp == 1) {
        iVar9 = param_1->field263_0x108;
        uVar4 = (undefined)(((byte)local_38 & 0x3f) << 1);
        goto LAB_8002553c;
      }
      iVar10 = (short)i * 8;
      *(char *)(iVar10 + param_1->field263_0x108 + 5) = (char)local_36;
      *(byte *)(iVar10 + param_1->field263_0x108 + 6) = *(byte *)((short)i + iVar12 + -1) & 1;
    }
    i = i + 1;
  } while( true );
}



void FUN_800255c4(int param_1,undefined2 param_2,undefined4 *param_3,undefined2 *param_4)

{
  undefined2 uVar1;
  undefined4 uVar2;
  
  uVar2 = FUN_8007b810(param_1 + 0x84,param_2);
  *param_3 = uVar2;
  uVar1 = FUN_8007b7cc(param_1 + 0x84,param_2);
  *param_4 = uVar1;
  return;
}



void FUN_80025660(int param_1,byte param_2)

{
  undefined2 uVar1;
  
  if (param_2 == 1) {
    uVar1 = 0xffd0;
  }
  else {
    if (param_2 < 2) {
      if (param_2 != 0) {
        return;
      }
      *(undefined2 *)(param_1 + 0x120) = 0;
      return;
    }
    uVar1 = 0x30;
    if (param_2 != 2) {
      return;
    }
  }
  *(undefined2 *)(param_1 + 0x120) = uVar1;
  return;
}



void FUN_800256b4(int param_1,byte param_2)

{
  undefined2 uVar1;
  
  if (param_2 == 1) {
    uVar1 = 0xffd0;
  }
  else {
    if (param_2 < 2) {
      if (param_2 != 0) {
        return;
      }
      *(undefined2 *)(param_1 + 0x122) = 0;
      return;
    }
    uVar1 = 0x30;
    if (param_2 != 2) {
      return;
    }
  }
  *(undefined2 *)(param_1 + 0x122) = uVar1;
  return;
}



void setup_controller(ushort *param_1,ushort param_2)

{
  ushort uVar1;
  ushort uVar2;
  uint uVar3;
  ushort *puVar4;
  
  if (*(char *)((int)param_1 + 5) != '\0') {
    if (((uint)param_1[8] < (uint)**(ushort **)(param_1 + 4)) && (param_2 == 0)) {
      param_1[1] = *(ushort *)((uint)param_1[8] * 4 + *(int *)(param_1 + 6)) & ~*param_1;
      uVar1 = param_1[9];
      uVar2 = *(ushort *)((uint)param_1[8] * 4 + *(int *)(param_1 + 6));
      param_1[9] = uVar1 - 1;
      *param_1 = uVar2;
      if ((ushort)(uVar1 - 1) == 0) {
        uVar1 = param_1[8];
        param_1[8] = uVar1 + 1;
        param_1[9] = *(ushort *)((uint)(ushort)(uVar1 + 1) * 4 + *(int *)(param_1 + 6) + 2);
      }
      goto LAB_80025aac;
    }
    if (*(char *)((int)param_1 + 5) != '\0') {
      *(undefined *)((int)param_1 + 5) = 0;
      param_1[1] = 0;
      *param_1 = 0;
      goto LAB_80025aac;
    }
  }
  uVar1 = *param_1;
  *param_1 = param_2;
  param_1[1] = param_2 & ~uVar1;
LAB_80025aac:
  if ((*(char *)(param_1 + 2) == '\0') || (0x3ff < **(ushort **)(param_1 + 4))) {
    *(undefined *)(param_1 + 2) = 0;
  }
  else {
    if (**(ushort **)(param_1 + 4) == 0) {
      uVar3 = (uint)param_1[8];
    }
    else {
      puVar4 = (ushort *)((uint)param_1[8] * 4 + *(int *)(param_1 + 6));
      uVar3 = param_1[8] + 1;
      if (*puVar4 == param_2) {
        puVar4[1] = puVar4[1] + 1;
        return;
      }
      param_1[8] = (ushort)uVar3;
      uVar3 = uVar3 & 0xffff;
    }
    *(undefined2 *)(uVar3 * 4 + *(int *)(param_1 + 6) + 2) = 1;
    *(ushort *)((uint)param_1[8] * 4 + *(int *)(param_1 + 6)) = param_2;
    **(short **)(param_1 + 4) = **(short **)(param_1 + 4) + 1;
  }
  return;
}



void FUN_80025b78(int param_1,int param_2)

{
  *(int *)(param_1 + 8) = param_2;
  *(int *)(param_1 + 0xc) = param_2 + 4;
  return;
}



void FUN_80025bbc(int param_1,char param_2)

{
  if (((*(char *)(param_1 + 5) == '\0') || (param_2 == '\0')) &&
     (*(char *)(param_1 + 5) = param_2, param_2 != '\0')) {
    *(undefined *)(param_1 + 4) = 0;
    *(undefined2 *)(param_1 + 0x10) = 0;
    *(undefined2 *)(param_1 + 0x12) = *(undefined2 *)(*(int *)(param_1 + 0xc) + 2);
  }
  return;
}



void FUN_80025c78(char *param_1,int param_2,char *param_3)

{
  byte bVar1;
  uint uVar2;
  byte *pbVar3;
  byte bVar4;
  byte bVar5;
  uint uVar6;
  uint uVar7;
  byte local_8 [4];
  char local_4;
  char local_3;
  char local_2;
  char local_1;
  
  local_8[0] = *param_1 + 1;
  if (local_8[0] == 5) {
    local_8[0] = *param_1 + 2;
  }
  if (local_8[0] == 0x11) {
    local_8[0] = 0x12;
  }
  local_8[1] = param_1[0x11];
  local_8[2] = param_1[0x14];
  local_8[3] = param_1[0x15];
  local_4 = param_1[0x16];
  local_3 = param_1[0x1c];
  local_2 = param_1[0x19];
  bVar4 = 0;
  local_1 = param_1[0x1b];
  uVar2 = 0;
  do {
    *(undefined *)(param_2 + uVar2) = 0;
    bVar4 = bVar4 + 1;
    uVar2 = (uint)bVar4;
  } while (bVar4 < 0xc);
  uVar7 = 0;
  uVar6 = 0;
  bVar4 = 0;
  uVar2 = 0;
  do {
    if (((int)(uint)local_8[(byte)(&DAT_8009b1f4)[uVar2 * 2]] >>
         ((byte)(&DAT_8009b1f5)[uVar2 * 2] & 0x1f) & 1U) != 0) {
      pbVar3 = (byte *)(param_2 + (uVar7 & 0xff));
      *pbVar3 = *pbVar3 | (byte)(1 << (uVar6 & 0x1f));
    }
    uVar6 = uVar6 + 1;
    if (2 < (uVar6 & 0xff)) {
      uVar6 = 0;
      uVar7 = uVar7 + 1;
    }
    bVar4 = bVar4 + 1;
    uVar2 = (uint)bVar4;
  } while (bVar4 < 0x20);
  bVar5 = 0;
  bVar4 = 0;
  do {
    uVar2 = (uint)bVar4;
    bVar4 = bVar4 + 1;
    bVar5 = bVar5 + *(char *)(param_2 + uVar2);
  } while (bVar4 < 0xc);
  bVar4 = 0xb;
  if ((*(char *)(param_2 + 0xb) == '\0') && (bVar4 = 10, *(char *)(param_2 + 10) == '\0')) {
    bVar1 = 9;
    do {
      bVar4 = bVar1;
      if (bVar4 == 0) break;
      bVar1 = bVar4 - 1;
    } while (*(char *)(param_2 + (uint)bVar4) == '\0');
  }
  *(byte *)((uint)bVar4 + param_2 + 1) = bVar5 & 7;
  *param_3 = bVar4 + 2;
  return;
}



void initialise_struct(undefined *param_1)

{
  int iVar1;
  
  iVar1 = 0;
  *param_1 = 1;
  param_1[1] = 1;
  param_1[0x11] = 5;
  param_1[0x12] = 0;
  param_1[0x14] = 0;
  param_1[0x15] = 0;
  param_1[0x16] = 0;
  param_1[0x1c] = 0;
  param_1[0x13] = 0;
  param_1[0x19] = 0;
  param_1[0x1a] = 0;
  param_1[0x1b] = 0;
  param_1[0x17] = 0;
  param_1[0x18] = 0;
  param_1[0x1d] = 0;
  param_1[0x10] = 1;
  *(undefined2 *)(param_1 + 2) = 0;
  param_1[4] = 0;
  param_1[5] = 0;
  do {
    param_1[(short)iVar1 + 6] = 0;
    iVar1 = iVar1 + 1;
  } while (iVar1 * 0x10000 >> 0x10 < 10);
  return;
}



void FUN_80026158(int param_1)

{
  *(undefined *)(param_1 + 0x1a) = 0;
  return;
}



void FUN_80026160(int param_1)

{
  int iVar1;
  int iVar2;
  
  PTR_DAT_800a59d8[0x18] = 0;
  iVar2 = 0;
  *(byte *)(param_1 + 0x17) = *(byte *)(param_1 + 0x17) & 0xfd;
  do {
    iVar1 = param_1 + (short)iVar2;
    if (*(char *)(iVar1 + 6) != '\0') {
      *(char *)(param_1 + 5) = *(char *)(param_1 + 5) + '\x01';
      *(undefined *)(iVar1 + 6) = 0;
    }
    iVar2 = iVar2 + 1;
  } while (iVar2 * 0x10000 >> 0x10 < 10);
  return;
}



void FUN_800261d0(undefined *param_1)

{
  int iVar1;
  
  iVar1 = 0;
  *param_1 = 1;
  param_1[1] = 1;
  param_1[0x11] = 5;
  param_1[0x12] = 0;
  param_1[0x14] = 0;
  param_1[0x15] = 0;
  param_1[0x16] = 0;
  param_1[0x1c] = 0;
  param_1[0x13] = 0;
  param_1[0x19] = 0;
  param_1[0x1a] = 0;
  param_1[0x1b] = 0;
  param_1[0x17] = 0;
  param_1[0x18] = 0;
  param_1[0x1d] = 0;
  param_1[0x10] = 1;
  *(undefined2 *)(param_1 + 2) = 0;
  param_1[4] = 0;
  param_1[5] = 0;
  do {
    param_1[(short)iVar1 + 6] = 0;
    iVar1 = iVar1 + 1;
  } while (iVar1 * 0x10000 >> 0x10 < 10);
  return;
}



void FUN_8002625c(int param_1)

{
  int iVar1;
  
  iVar1 = 0;
  *(undefined *)(param_1 + 5) = 0;
  *(undefined *)(param_1 + 4) = 0;
  *(char *)(param_1 + 0x10) = *(char *)(param_1 + 0x10) + '\x01';
  do {
    *(undefined *)(param_1 + (short)iVar1 + 6) = 0;
    iVar1 = iVar1 + 1;
  } while (iVar1 * 0x10000 >> 0x10 < 10);
  return;
}



void FUN_800262a8(int param_1)

{
  *(undefined *)(param_1 + 0x17) = 0;
  *(undefined *)(param_1 + 0x1d) = 0;
  if (*(char *)(param_1 + 0x11) != '\0') {
    *(char *)(param_1 + 0x11) = *(char *)(param_1 + 0x11) + -1;
  }
  return;
}



void FUN_80026b14(undefined4 param_1,byte param_2)

{
  if (param_2 < 3) {
    PTR_DAT_800a59d8[0x14] = 0;
    PTR_DAT_800a59d8[0x15] = 0;
  }
  if (param_2 < 10) {
    PTR_DAT_800a59d8[0x16] = 0;
  }
  if (param_2 < 0xd) {
    PTR_DAT_800a59d8[0x1c] = 0;
  }
  return;
}



void FUN_800275e0(int param_1)

{
  uint uVar1;
  
  *(undefined *)(*(int *)(param_1 + 0x34) + 10) = 1;
  uVar1 = (uint)*(ushort *)(param_1 + 0x118);
  if (uVar1 == 0) {
    uVar1 = (uint)*(ushort *)(param_1 + 0x114);
  }
  else {
    if (uVar1 == 0) {
      trap(0x1c00);
    }
    uVar1 = *(ushort *)(param_1 + 0x114) / uVar1 & 0xff;
    if (uVar1 == 0) {
      *(undefined *)(*(int *)(param_1 + 0x34) + 10) = 0;
    }
  }
  FUN_8001d0bc(param_1,uVar1 % 10);
  FUN_8001d1bc(param_1,uVar1 % 10);
  FUN_8001d23c(param_1,0);
  return;
}



void FUN_800279c4(int param_1)

{
  if ((uint)*(byte *)(param_1 + 0x114) < *(byte *)(param_1 + 0x116) + 1) {
    *(undefined *)(*(int *)(param_1 + 0x34) + 0x37) = 1;
  }
  else {
    *(undefined *)(*(int *)(param_1 + 0x34) + 0x37) = 0;
  }
  return;
}



undefined4 * FUN_800279fc(undefined4 *param_1)

{
  short sVar1;
  u_short uVar2;
  int iVar3;
  
  sVar1 = *(short *)(PTR_DAT_800a59b0 + 2);
  FUN_8001c71c(param_1,0x8c510186,10000,0x18,(int)(short)(sVar1 + 0x20),0);
  param_1[6] = &DAT_800105cc;
  param_1[2] = 0xffff0000;
  param_1[3] = &LAB_80020284;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80026f30;
  param_1[9] = 0xffff0000;
  param_1[10] = &LAB_8001a2c8;
  param_1[0xb] = 0xffff0000;
  param_1[0xc] = &LAB_8001a2e4;
  *(undefined2 *)((int)param_1 + 0x106) = 0x98;
  *(undefined *)(param_1 + 5) = 0;
  *(undefined *)((int)param_1 + 0x10e) = 0;
  *(undefined2 *)(param_1 + 0x43) = 0;
  *(short *)(param_1 + 0x42) = sVar1 + 0x20;
  *(undefined *)(param_1 + 0x44) = 1;
  FUN_8001eaa8(param_1,DAT_800a59e4,PTR_LAB_800a59e8);
  *(undefined *)((int)param_1 + 0x111) = 0;
  param_1[6] = &DAT_8001056c;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80027bb4;
  iVar3 = param_1[0xd];
  *(undefined *)(iVar3 + 0x34) = 0x20;
  *(undefined *)(iVar3 + 0x35) = 0x60;
  *(undefined *)(iVar3 + 0x36) = 0x30;
  iVar3 = param_1[0xd];
  uVar2 = GetTPage((uint)*(byte *)(iVar3 + 0x32),3,(int)*(short *)(iVar3 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar3 + 0x12) & 0xffffff00);
  *(u_short *)(iVar3 + 0x24) = uVar2;
  return param_1;
}



undefined4 * FUN_80027cf0(undefined4 *param_1)

{
  short sVar1;
  u_short uVar2;
  int iVar3;
  
  sVar1 = *(short *)(PTR_DAT_800a59b0 + 2);
  FUN_8001c71c(param_1,0x6a351094,10000,0x120,(int)(short)(sVar1 + 0x20),0);
  param_1[6] = &DAT_800105cc;
  param_1[2] = 0xffff0000;
  param_1[3] = &LAB_80020284;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80026f30;
  param_1[9] = 0xffff0000;
  param_1[10] = &LAB_8001a2c8;
  param_1[0xb] = 0xffff0000;
  param_1[0xc] = &LAB_8001a2e4;
  *(undefined2 *)((int)param_1 + 0x106) = 200;
  *(undefined *)(param_1 + 5) = 0;
  *(undefined *)((int)param_1 + 0x10e) = 0;
  *(undefined2 *)(param_1 + 0x43) = 0;
  *(short *)(param_1 + 0x42) = sVar1 + 0x20;
  *(undefined *)(param_1 + 0x44) = 1;
  FUN_8001eaa8(param_1,DAT_800a59e4,PTR_LAB_800a59e8);
  param_1[6] = &DAT_8001054c;
  *(undefined *)((int)param_1 + 0x111) = 0;
  *(undefined2 *)(param_1[0xd] + 8) = 0x271a;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80027e98;
  iVar3 = param_1[0xd];
  uVar2 = GetTPage((uint)*(byte *)(iVar3 + 0x32),1,(int)*(short *)(iVar3 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar3 + 0x12) & 0xffffff00);
  *(u_short *)(iVar3 + 0x24) = uVar2;
  return param_1;
}



void FUN_800281a0(undefined4 *param_1,undefined4 param_2)

{
  byte bVar1;
  undefined uVar2;
  short sVar3;
  undefined *puVar4;
  u_short uVar5;
  undefined4 *puVar6;
  undefined4 uVar7;
  int iVar8;
  int iVar9;
  uint uVar10;
  byte local_268;
  
  FUN_80019744(param_1,30000);
  param_1[6] = &DAT_8001050c;
  param_1[7] = param_2;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8002a374;
  param_1[2] = 0xffff0000;
  param_1[3] = &LAB_8002abbc;
  local_268 = 0;
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x114,1,0);
  FUN_8001c71c(puVar6,0xb8700ca1,10000,0x18,0xffffffe0,1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0x16;
  *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  *(undefined *)((int)puVar6 + 0x111) = 0;
  param_1[8] = puVar6;
  iVar8 = puVar6[0xd];
  uVar5 = GetTPage((uint)*(byte *)(iVar8 + 0x32),1,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  puVar4 = PTR_DAT_800a59b0;
  *(u_short *)(iVar8 + 0x24) = uVar5;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  bVar1 = PTR_DAT_800a59d8[0x12];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x25,0xffffffe0,1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0x20;
  *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined2 *)(puVar6 + 0x47) = 0x25;
  *(undefined *)((int)puVar6 + 0x11b) = 0;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 10;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[9] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  bVar1 = PTR_DAT_800a59d8[0x12];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x31,0xffffffe0,1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0x20;
  *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  *(undefined2 *)(puVar6 + 0x47) = 0x31;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x11b) = 0xc;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 0;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[10] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x114,1,0);
  FUN_8001c71c(puVar6,0xa9240484,10000,0x118,0xffffffe0,1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0xf;
  *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  *(undefined *)((int)puVar6 + 0x111) = 0;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0xb] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  bVar1 = PTR_DAT_800a59d8[0x11];
  FUN_8001c71c(puVar6,0xe2f188,10000,0xff,0xffffffe0,1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0x20;
  *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined2 *)(puVar6 + 0x47) = 0xff;
  *(undefined *)((int)puVar6 + 0x11b) = 0;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 10;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0xc] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  bVar1 = PTR_DAT_800a59d8[0x11];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x10b,0xffffffe0,1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0x20;
  *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  *(undefined *)((int)puVar6 + 0x111) = 0;
  puVar6[6] = &DAT_800105ac;
  *(undefined2 *)(puVar6 + 0x47) = 0x10b;
  *(undefined *)((int)puVar6 + 0x11b) = 0;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 0;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  param_1[0xd] = puVar6;
  *(undefined *)(param_1[0xb] + 0xf6) = 0;
  *(undefined *)(*(int *)(param_1[0xb] + 0x34) + 0x37) = 0;
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x114,1,0);
  FUN_8001c71c(puVar6,0xe8628689,10000,0x98,0xffffffe0,1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0x16;
  *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  *(undefined *)((int)puVar6 + 0x111) = 0;
  param_1[0xe] = puVar6;
  iVar8 = puVar6[0xd];
  uVar5 = GetTPage((uint)*(byte *)(iVar8 + 0x32),1,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  puVar4 = PTR_DAT_800a59b0;
  *(u_short *)(iVar8 + 0x24) = uVar5;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  bVar1 = PTR_DAT_800a59d8[0x13];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x92,0xffffffe0,1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0x28;
  *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined2 *)(puVar6 + 0x47) = 0x92;
  *(undefined *)((int)puVar6 + 0x11b) = 0;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 10;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0xf] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  bVar1 = PTR_DAT_800a59d8[0x13];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x9e,0xffffffe0,1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0x28;
  *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  *(undefined2 *)(puVar6 + 0x47) = 0x9e;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x11b) = 6;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 0;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  param_1[0x10] = puVar6;
  while( true ) {
    uVar10 = (uint)local_268;
    if (2 < uVar10) break;
    puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x118,1,0);
    uVar2 = PTR_DAT_800a59d8[0x19];
    FUN_8001c71c(puVar6,0x88a28194,10000,0x60,0xffffffe0,1);
    puVar6[6] = &DAT_800105cc;
    puVar6[2] = 0xffff0000;
    puVar6[3] = &LAB_80020284;
    *puVar6 = 0xffff0000;
    puVar6[1] = &LAB_80026f30;
    puVar6[9] = 0xffff0000;
    puVar6[10] = &LAB_8001a2c8;
    puVar6[0xb] = 0xffff0000;
    puVar6[0xc] = &LAB_8001a2e4;
    *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
    *(undefined *)(puVar6 + 5) = 0;
    *(undefined *)((int)puVar6 + 0x10e) = 0;
    *(undefined2 *)(puVar6 + 0x43) = 0;
    *(ushort *)((int)puVar6 + 0x106) = (ushort)local_268 * 0x10 + 0x16;
    *(undefined *)(puVar6 + 0x44) = 1;
    FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
    *(undefined *)((int)puVar6 + 0x111) = 0;
    puVar6[6] = &DAT_8001058c;
    *(undefined *)(puVar6 + 0x45) = uVar2;
    *(undefined *)((int)puVar6 + 0x115) = uVar2;
    *(byte *)((int)puVar6 + 0x116) = local_268;
    *puVar6 = 0xffff0000;
    puVar6[1] = &LAB_8002785c;
    FUN_800279c4(puVar6);
    *(undefined *)((int)puVar6 + 0x117) = 10;
    *(undefined *)((int)puVar6 + 0xf6) = 0;
    *(undefined *)(puVar6[0xd] + 0x37) = 1;
    puVar4 = PTR_DAT_800a59b0;
    param_1[uVar10 + 0x11] = puVar6;
    puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x118,1,0);
    uVar2 = PTR_DAT_800a59d8[0x1a];
    FUN_8001c71c(puVar6,0x80e85ea0,10000,0xd0,0xffffffe0,1);
    puVar6[6] = &DAT_800105cc;
    puVar6[2] = 0xffff0000;
    puVar6[3] = &LAB_80020284;
    *puVar6 = 0xffff0000;
    puVar6[1] = &LAB_80026f30;
    puVar6[9] = 0xffff0000;
    puVar6[10] = &LAB_8001a2c8;
    puVar6[0xb] = 0xffff0000;
    puVar6[0xc] = &LAB_8001a2e4;
    *(undefined *)(puVar6 + 5) = 0;
    *(undefined *)((int)puVar6 + 0x10e) = 0;
    *(undefined2 *)(puVar6 + 0x43) = 0;
    *(ushort *)((int)puVar6 + 0x106) = (ushort)local_268 * 0x14 + 0x1c;
    *(undefined2 *)(puVar6 + 0x42) = 0xffe0;
    *(undefined *)(puVar6 + 0x44) = 1;
    FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
    *(undefined *)((int)puVar6 + 0x111) = 0;
    puVar6[6] = &DAT_8001058c;
    *(undefined *)(puVar6 + 0x45) = uVar2;
    *(undefined *)((int)puVar6 + 0x115) = uVar2;
    *(byte *)((int)puVar6 + 0x116) = local_268;
    *puVar6 = 0xffff0000;
    puVar6[1] = &LAB_8002785c;
    FUN_800279c4(puVar6);
    local_268 = local_268 + 1;
    *(undefined *)((int)puVar6 + 0x117) = 10;
    *(undefined *)((int)puVar6 + 0xf6) = 0;
    *(undefined *)(puVar6[0xd] + 0x37) = 1;
    param_1[uVar10 + 0x14] = puVar6;
  }
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x114,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  FUN_8001c71c(puVar6,0x9158a0f6,10000,0x18,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 200;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  *(undefined *)((int)puVar6 + 0x111) = 0;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x17] = puVar6;
  puVar6[0x14] = 0x8000;
  puVar6[0x15] = 0x8000;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  bVar1 = PTR_DAT_800a59d8[0x14];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x25,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0xd2;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined2 *)(puVar6 + 0x47) = 0x25;
  *(undefined *)((int)puVar6 + 0x11b) = 0;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 10;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x18] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  bVar1 = PTR_DAT_800a59d8[0x14];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x31,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0xd2;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined2 *)(puVar6 + 0x47) = 0x31;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined *)((int)puVar6 + 0x11b) = 0xc;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 0;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x19] = puVar6;
  uVar7 = FUN_800143ec(puVar4,0x114,1,0);
  uVar7 = FUN_800279fc(uVar7);
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x1b] = uVar7;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x114,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  FUN_8001c71c(puVar6,0xa9240484,10000,0xe,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0x88;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  *(undefined *)((int)puVar6 + 0x111) = 0;
  param_1[0x1a] = puVar6;
  *(undefined *)((int)puVar6 + 0xf6) = 0;
  iVar8 = *(int *)(param_1[0x1a] + 0x34);
  *(undefined *)(iVar8 + 0x34) = 0x20;
  *(undefined *)(iVar8 + 0x35) = 0x60;
  *(undefined *)(iVar8 + 0x37) = 0;
  *(undefined *)(iVar8 + 0x36) = 0x30;
  puVar4 = PTR_DAT_800a59b0;
  *(undefined2 *)(iVar8 + 8) = 0x271a;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  bVar1 = PTR_DAT_800a59d8[0x15];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x25,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0xa2;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined2 *)(puVar6 + 0x47) = 0x25;
  *(undefined *)((int)puVar6 + 0x11b) = 0;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 10;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x1c] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  bVar1 = PTR_DAT_800a59d8[0x15];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x31,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0xa2;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined2 *)(puVar6 + 0x47) = 0x31;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined *)((int)puVar6 + 0x11b) = 0xc;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 0;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x1d] = puVar6;
  uVar7 = FUN_800143ec(puVar4,0x114,1,0);
  uVar7 = FUN_80027cf0(uVar7);
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x1e] = uVar7;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  bVar1 = PTR_DAT_800a59d8[0x16];
  FUN_8001c71c(puVar6,0xe2f188,10000,0xff,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0xd2;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined2 *)(puVar6 + 0x47) = 0xff;
  *(undefined *)((int)puVar6 + 0x11b) = 0;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 10;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x1f] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  bVar1 = PTR_DAT_800a59d8[0x16];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x10b,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0xd2;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined2 *)(puVar6 + 0x47) = 0x10b;
  *(undefined *)((int)puVar6 + 0x11b) = 0;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 0;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x20] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x114,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  FUN_8001c71c(puVar6,0x902c0002,10000,0x118,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0x88;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  *(undefined *)((int)puVar6 + 0x111) = 0;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x21] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  bVar1 = PTR_DAT_800a59d8[0x1c];
  FUN_8001c71c(puVar6,0xe2f188,10000,0xff,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0xa2;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined2 *)(puVar6 + 0x47) = 0xff;
  *(undefined *)((int)puVar6 + 0x11b) = 0;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 10;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x22] = puVar6;
  puVar6 = (undefined4 *)FUN_800143ec(puVar4,0x120,1,0);
  sVar3 = *(short *)(PTR_DAT_800a59b0 + 2);
  bVar1 = PTR_DAT_800a59d8[0x1c];
  FUN_8001c71c(puVar6,0xe2f188,10000,0x10b,(int)(short)(sVar3 + 0x20),1);
  puVar6[6] = &DAT_800105cc;
  puVar6[2] = 0xffff0000;
  puVar6[3] = &LAB_80020284;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80026f30;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  *(undefined *)(puVar6 + 5) = 0;
  *(undefined *)((int)puVar6 + 0x10e) = 0;
  *(undefined2 *)(puVar6 + 0x43) = 0;
  *(undefined2 *)((int)puVar6 + 0x106) = 0xa2;
  *(short *)(puVar6 + 0x42) = sVar3 + 0x20;
  *(undefined *)(puVar6 + 0x44) = 1;
  FUN_8001eaa8(puVar6,DAT_800a59e4,PTR_LAB_800a59e8);
  puVar6[6] = &DAT_800105ac;
  *(undefined *)((int)puVar6 + 0x111) = 0;
  *(undefined2 *)(puVar6 + 0x47) = 0x10b;
  *(undefined *)((int)puVar6 + 0x11b) = 0;
  *(ushort *)(puVar6 + 0x45) = (ushort)bVar1;
  *(ushort *)((int)puVar6 + 0x116) = (ushort)bVar1;
  *(undefined2 *)(puVar6 + 0x46) = 0;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_80027414;
  FUN_800275e0(puVar6);
  *(undefined *)((int)puVar6 + 0x11a) = 10;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x23] = puVar6;
  iVar8 = FUN_800143ec(puVar4,0x104,1,0);
  FUN_8001c864(iVar8,&DAT_8009b1d0,0x271a,0xa0,0x78);
  *(undefined **)(iVar8 + 0x18) = &DAT_800105ec;
  *(undefined4 *)(iVar8 + 0x24) = 0xffff0000;
  *(undefined **)(iVar8 + 0x28) = &LAB_8001a2c8;
  *(undefined4 *)(iVar8 + 0x2c) = 0xffff0000;
  *(undefined **)(iVar8 + 0x30) = &LAB_8001a2e4;
  iVar9 = *(int *)(iVar8 + 0x34);
  *(undefined *)(iVar8 + 0x14) = 0;
  uVar5 = GetTPage((uint)*(byte *)(iVar9 + 0x32),1,(int)*(short *)(iVar9 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar9 + 0x12) & 0xffffff00);
  *(u_short *)(iVar9 + 0x24) = uVar5;
  *(undefined *)(iVar8 + 0x101) = 1;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x25] = iVar8;
  iVar8 = FUN_800143ec(puVar4,0x104,1,0);
  FUN_8001c864(iVar8,&DAT_8009b1dc,0x271a,0xa0,0x78);
  *(undefined **)(iVar8 + 0x18) = &DAT_800105ec;
  *(undefined4 *)(iVar8 + 0x24) = 0xffff0000;
  *(undefined **)(iVar8 + 0x28) = &LAB_8001a2c8;
  *(undefined4 *)(iVar8 + 0x2c) = 0xffff0000;
  *(undefined **)(iVar8 + 0x30) = &LAB_8001a2e4;
  iVar9 = *(int *)(iVar8 + 0x34);
  *(undefined *)(iVar8 + 0x14) = 0;
  uVar5 = GetTPage((uint)*(byte *)(iVar9 + 0x32),1,(int)*(short *)(iVar9 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar9 + 0x12) & 0xffffff00);
  *(u_short *)(iVar9 + 0x24) = uVar5;
  *(undefined *)(iVar8 + 0x101) = 1;
  puVar4 = PTR_DAT_800a59b0;
  param_1[0x26] = iVar8;
  iVar8 = FUN_800143ec(puVar4,0x104,1,0);
  FUN_8001c864(iVar8,&DAT_8009b1e8,0x271a,0xa0,0x78);
  *(undefined **)(iVar8 + 0x18) = &DAT_800105ec;
  *(undefined4 *)(iVar8 + 0x24) = 0xffff0000;
  *(undefined **)(iVar8 + 0x28) = &LAB_8001a2c8;
  *(undefined4 *)(iVar8 + 0x2c) = 0xffff0000;
  *(undefined **)(iVar8 + 0x30) = &LAB_8001a2e4;
  iVar9 = *(int *)(iVar8 + 0x34);
  *(undefined *)(iVar8 + 0x14) = 0;
  uVar5 = GetTPage((uint)*(byte *)(iVar9 + 0x32),1,(int)*(short *)(iVar9 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar9 + 0x12) & 0xffffff00);
  *(u_short *)(iVar9 + 0x24) = uVar5;
  *(undefined *)(iVar8 + 0x101) = 1;
  param_1[0x27] = iVar8;
  *(undefined *)((int)param_1 + 0xa3) = 0;
  *(undefined *)(param_1 + 0x29) = 0;
  *(undefined *)((int)param_1 + 0xa5) = 0;
  *(undefined *)((int)param_1 + 0xa6) = 0;
  *(undefined *)((int)param_1 + 0xa7) = 0;
  *(undefined *)(param_1 + 0x2a) = 0;
  *(undefined *)((int)param_1 + 0xa9) = 0;
  *(undefined *)((int)param_1 + 0xaa) = 0;
  *(undefined *)((int)param_1 + 0xab) = 0;
  *(undefined *)((int)param_1 + 0xa2) = 0;
  *(undefined *)(param_1 + 0x2b) = 0;
  return;
}



void FUN_8002a394(int param_1)

{
  bool bVar1;
  undefined *puVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  
  if ((*(char *)(param_1 + 0xa2) != '\0') && (*(char *)(*(int *)(param_1 + 0x94) + 0x101) != '\0'))
  {
    FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x94) + 0x34));
    FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x94));
    FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x98) + 0x34));
    FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x98));
    FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x9c) + 0x34));
    FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x9c));
    *(undefined *)(param_1 + 0xa2) = 0;
  }
  puVar2 = PTR_DAT_800a59d8;
  if (*(char *)(param_1 + 0xa3) != '\0') {
    if (*(char *)(*(int *)(param_1 + 0x20) + 0x110) == '\0') {
      *(ushort *)(*(int *)(param_1 + 0x24) + 0x116) = (ushort)(byte)PTR_DAT_800a59d8[0x12];
      *(ushort *)(*(int *)(param_1 + 0x28) + 0x116) = (ushort)(byte)puVar2[0x12];
    }
    else {
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x20) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x24) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x28) + 0x34));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x20));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x24));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x28));
      *(undefined *)(param_1 + 0xa3) = 0;
    }
  }
  puVar2 = PTR_DAT_800a59d8;
  if (*(char *)(param_1 + 0xa4) != '\0') {
    if (*(char *)(*(int *)(param_1 + 0x2c) + 0x110) == '\0') {
      *(ushort *)(*(int *)(param_1 + 0x30) + 0x116) = (ushort)(byte)PTR_DAT_800a59d8[0x11];
      *(ushort *)(*(int *)(param_1 + 0x34) + 0x116) = (ushort)(byte)puVar2[0x11];
    }
    else {
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x2c) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x30) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x34) + 0x34));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x2c));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x30));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x34));
      *(undefined *)(param_1 + 0xa4) = 0;
    }
  }
  puVar2 = PTR_DAT_800a59d8;
  if (*(char *)(param_1 + 0xa5) != '\0') {
    if (*(char *)(*(int *)(param_1 + 0x38) + 0x110) == '\0') {
      *(ushort *)(*(int *)(param_1 + 0x3c) + 0x116) = (ushort)(byte)PTR_DAT_800a59d8[0x13];
      *(ushort *)(*(int *)(param_1 + 0x40) + 0x116) = (ushort)(byte)puVar2[0x13];
    }
    else {
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x38) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x3c) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x40) + 0x34));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x38));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x3c));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x40));
      *(undefined *)(param_1 + 0xa5) = 0;
    }
  }
  if (*(char *)(param_1 + 0xa6) != '\0') {
    uVar5 = 0;
    if (*(char *)(*(int *)(param_1 + 0x44) + 0x110) == '\0') {
      for (uVar5 = 0; (uVar5 & 0xff) < 3; uVar5 = uVar5 + 1) {
        *(undefined *)(*(int *)((uVar5 & 0xff) * 4 + param_1 + 0x44) + 0x115) =
             PTR_DAT_800a59d8[0x19];
      }
    }
    else {
      uVar3 = 0;
      bVar1 = true;
      while (bVar1) {
        iVar4 = uVar3 * 4 + param_1;
        uVar5 = uVar5 + 1;
        FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(iVar4 + 0x44) + 0x34));
        uVar3 = uVar5 & 0xff;
        FUN_80021d2c(BUF_PTR,*(undefined4 *)(iVar4 + 0x44));
        bVar1 = uVar3 < 3;
      }
      *(undefined *)(param_1 + 0xa6) = 0;
    }
  }
  if (*(char *)(param_1 + 0xa7) != '\0') {
    uVar5 = 0;
    if (*(char *)(*(int *)(param_1 + 0x50) + 0x110) == '\0') {
      for (uVar5 = 0; (uVar5 & 0xff) < 3; uVar5 = uVar5 + 1) {
        *(undefined *)(*(int *)((uVar5 & 0xff) * 4 + param_1 + 0x50) + 0x115) =
             PTR_DAT_800a59d8[0x1a];
      }
    }
    else {
      uVar3 = 0;
      bVar1 = true;
      while (bVar1) {
        iVar4 = uVar3 * 4 + param_1;
        uVar5 = uVar5 + 1;
        FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(iVar4 + 0x50) + 0x34));
        uVar3 = uVar5 & 0xff;
        FUN_80021d2c(BUF_PTR,*(undefined4 *)(iVar4 + 0x50));
        bVar1 = uVar3 < 3;
      }
      *(undefined *)(param_1 + 0xa7) = 0;
    }
  }
  puVar2 = PTR_DAT_800a59d8;
  if (*(char *)(param_1 + 0xa8) != '\0') {
    if (*(char *)(*(int *)(param_1 + 0x5c) + 0x110) == '\0') {
      *(ushort *)(*(int *)(param_1 + 0x60) + 0x116) = (ushort)(byte)PTR_DAT_800a59d8[0x14];
      *(ushort *)(*(int *)(param_1 + 100) + 0x116) = (ushort)(byte)puVar2[0x14];
    }
    else {
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x5c) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x60) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 100) + 0x34));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x5c));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x60));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 100));
      *(undefined *)(param_1 + 0xa8) = 0;
    }
  }
  puVar2 = PTR_DAT_800a59d8;
  if (*(char *)(param_1 + 0xa9) != '\0') {
    if (*(char *)(*(int *)(param_1 + 0x68) + 0x110) == '\0') {
      *(ushort *)(*(int *)(param_1 + 0x70) + 0x116) = (ushort)(byte)PTR_DAT_800a59d8[0x15];
      *(ushort *)(*(int *)(param_1 + 0x74) + 0x116) = (ushort)(byte)puVar2[0x15];
    }
    else {
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x68) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x6c) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x70) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x74) + 0x34));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x68));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x6c));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x70));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x74));
      *(undefined *)(param_1 + 0xa9) = 0;
    }
  }
  puVar2 = PTR_DAT_800a59d8;
  if (*(char *)(param_1 + 0xaa) != '\0') {
    if (*(char *)(*(int *)(param_1 + 0x78) + 0x110) == '\0') {
      *(ushort *)(*(int *)(param_1 + 0x7c) + 0x116) = (ushort)(byte)PTR_DAT_800a59d8[0x16];
      *(ushort *)(*(int *)(param_1 + 0x80) + 0x116) = (ushort)(byte)puVar2[0x16];
    }
    else {
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x78) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x7c) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x80) + 0x34));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x78));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x7c));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x80));
      *(undefined *)(param_1 + 0xaa) = 0;
    }
  }
  puVar2 = PTR_DAT_800a59d8;
  if (*(char *)(param_1 + 0xab) != '\0') {
    if (*(char *)(*(int *)(param_1 + 0x84) + 0x110) == '\0') {
      *(ushort *)(*(int *)(param_1 + 0x88) + 0x116) = (ushort)(byte)PTR_DAT_800a59d8[0x1c];
      *(ushort *)(*(int *)(param_1 + 0x8c) + 0x116) = (ushort)(byte)puVar2[0x1c];
    }
    else {
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x84) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x88) + 0x34));
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x8c) + 0x34));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x84));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x88));
      FUN_80021d2c(BUF_PTR,*(undefined4 *)(param_1 + 0x8c));
      *(undefined *)(param_1 + 0xab) = 0;
    }
  }
  return;
}



void FUN_8002b228(int param_1)

{
  undefined *puVar1;
  undefined4 *puVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  int iVar5;
  byte bVar6;
  uint uVar7;
  
  FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x94));
  FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x98));
  FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x9c));
  *(undefined *)(param_1 + 0xa0) = 0;
  *(undefined *)(param_1 + 0xa1) = 0;
  iVar5 = *(int *)(*(int *)(param_1 + 0x98) + 0x34);
  *(undefined *)(iVar5 + 0x34) = 0x80;
  *(undefined *)(iVar5 + 0x35) = 0x80;
  *(undefined *)(iVar5 + 0x36) = 0x80;
  iVar5 = *(int *)(*(int *)(param_1 + 0x9c) + 0x34);
  *(undefined *)(iVar5 + 0x34) = 0x40;
  *(undefined *)(iVar5 + 0x35) = 0x40;
  *(undefined *)(iVar5 + 0x36) = 0x40;
  puVar2 = *(undefined4 **)(param_1 + 0x94);
  *puVar2 = 0xffff0000;
  puVar2[1] = &LAB_80026c4c;
  puVar2[0x14] = 0;
  puVar2[0x15] = 0;
  *(undefined *)(puVar2 + 0x40) = 0x14;
  puVar2 = *(undefined4 **)(param_1 + 0x98);
  *puVar2 = 0xffff0000;
  puVar2[1] = &LAB_80026c4c;
  puVar2[0x14] = 0;
  puVar2[0x15] = 0;
  *(undefined *)(puVar2 + 0x40) = 0x14;
  puVar2 = *(undefined4 **)(param_1 + 0x9c);
  *puVar2 = 0xffff0000;
  puVar2[1] = &LAB_80026c4c;
  puVar2[0x14] = 0;
  puVar2[0x15] = 0;
  *(undefined *)(puVar2 + 0x40) = 0x14;
  *(undefined *)(param_1 + 0xa2) = 1;
  iVar5 = FUN_800143ec(PTR_DAT_800a59b0,0x24,1,0);
  FUN_80019744(iVar5,0x44c);
  puVar1 = PTR_DAT_800a59b0;
  *(undefined **)(iVar5 + 0x18) = &DAT_8001052c;
  uVar3 = FUN_800143ec(puVar1,0x44,1,0);
  uVar4 = FUN_80034890(uVar3,0x20,0x20,0x20,2,9000);
  uVar3 = BUF_PTR;
  *(undefined4 *)(iVar5 + 0x1c) = uVar4;
  FUN_80021078(uVar3);
  *(undefined *)(iVar5 + 0x20) = 0;
  uVar3 = BUF_PTR;
  *(int *)(param_1 + 0x90) = iVar5;
  FUN_80020f64(uVar3);
  if (*(char *)(param_1 + 0xa3) == '\0') {
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x20));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x24));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x28));
    puVar1 = PTR_DAT_800a59d8;
    *(ushort *)(*(int *)(param_1 + 0x24) + 0x114) = (ushort)(byte)PTR_DAT_800a59d8[0x12];
    *(ushort *)(*(int *)(param_1 + 0x28) + 0x114) = (ushort)(byte)puVar1[0x12];
    *(undefined *)(param_1 + 0xa3) = 1;
  }
  else {
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x20));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x24));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x28));
  }
  if (*(char *)(param_1 + 0xa4) == '\0') {
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x2c));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x30));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x34));
    puVar1 = PTR_DAT_800a59d8;
    *(ushort *)(*(int *)(param_1 + 0x30) + 0x114) = (ushort)(byte)PTR_DAT_800a59d8[0x11];
    *(ushort *)(*(int *)(param_1 + 0x34) + 0x114) = (ushort)(byte)puVar1[0x11];
    *(undefined *)(param_1 + 0xa4) = 1;
  }
  else {
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x2c));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x30));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x34));
  }
  if (*(char *)(param_1 + 0xa5) == '\0') {
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x38));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x3c));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x40));
    puVar1 = PTR_DAT_800a59d8;
    *(ushort *)(*(int *)(param_1 + 0x3c) + 0x114) = (ushort)(byte)PTR_DAT_800a59d8[0x13];
    *(ushort *)(*(int *)(param_1 + 0x40) + 0x114) = (ushort)(byte)puVar1[0x13];
    *(undefined *)(param_1 + 0xa5) = 1;
  }
  else {
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x38));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x3c));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x40));
  }
  bVar6 = 0;
  if (*(char *)(param_1 + 0xa6) == '\0') {
    for (uVar7 = 0; (uVar7 & 0xff) < 3; uVar7 = uVar7 + 1) {
      iVar5 = (uVar7 & 0xff) * 4 + param_1;
      FUN_800213a4(BUF_PTR,*(undefined4 *)(iVar5 + 0x44));
      *(undefined *)(*(int *)(iVar5 + 0x44) + 0x114) = PTR_DAT_800a59d8[0x19];
    }
    *(undefined *)(param_1 + 0xa6) = 1;
  }
  else {
    uVar7 = 0;
    do {
      bVar6 = bVar6 + 1;
      FUN_80020f64(BUF_PTR,*(undefined4 *)(uVar7 * 4 + param_1 + 0x44));
      uVar7 = (uint)bVar6;
    } while (bVar6 < 3);
  }
  bVar6 = 0;
  if (*(char *)(param_1 + 0xa7) == '\0') {
    for (uVar7 = 0; (uVar7 & 0xff) < 3; uVar7 = uVar7 + 1) {
      iVar5 = (uVar7 & 0xff) * 4 + param_1;
      FUN_800213a4(BUF_PTR,*(undefined4 *)(iVar5 + 0x50));
      *(undefined *)(*(int *)(iVar5 + 0x50) + 0x114) = PTR_DAT_800a59d8[0x1a];
    }
    *(undefined *)(param_1 + 0xa7) = 1;
  }
  else {
    uVar7 = 0;
    do {
      bVar6 = bVar6 + 1;
      FUN_80020f64(BUF_PTR,*(undefined4 *)(uVar7 * 4 + param_1 + 0x50));
      uVar7 = (uint)bVar6;
    } while (bVar6 < 3);
  }
  if (*(char *)(param_1 + 0xa8) == '\0') {
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x5c));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x60));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 100));
    puVar1 = PTR_DAT_800a59d8;
    *(ushort *)(*(int *)(param_1 + 0x60) + 0x114) = (ushort)(byte)PTR_DAT_800a59d8[0x14];
    *(ushort *)(*(int *)(param_1 + 100) + 0x114) = (ushort)(byte)puVar1[0x14];
    *(undefined *)(param_1 + 0xa8) = 1;
  }
  else {
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x5c));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x60));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 100));
  }
  if (*(char *)(param_1 + 0xa9) == '\0') {
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x68));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x6c));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x70));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x74));
    puVar1 = PTR_DAT_800a59d8;
    *(ushort *)(*(int *)(param_1 + 0x70) + 0x114) = (ushort)(byte)PTR_DAT_800a59d8[0x15];
    *(ushort *)(*(int *)(param_1 + 0x74) + 0x114) = (ushort)(byte)puVar1[0x15];
    *(undefined *)(param_1 + 0xa9) = 1;
  }
  else {
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x68));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x6c));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x70));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x74));
  }
  if (*(char *)(param_1 + 0xaa) == '\0') {
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x78));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x7c));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x80));
    puVar1 = PTR_DAT_800a59d8;
    *(ushort *)(*(int *)(param_1 + 0x7c) + 0x114) = (ushort)(byte)PTR_DAT_800a59d8[0x16];
    *(ushort *)(*(int *)(param_1 + 0x80) + 0x114) = (ushort)(byte)puVar1[0x16];
    *(undefined *)(param_1 + 0xaa) = 1;
  }
  else {
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x78));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x7c));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x80));
  }
  if (*(char *)(param_1 + 0xab) == '\0') {
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x84));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x88));
    FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x8c));
    puVar1 = PTR_DAT_800a59d8;
    *(ushort *)(*(int *)(param_1 + 0x88) + 0x114) = (ushort)(byte)PTR_DAT_800a59d8[0x1c];
    *(ushort *)(*(int *)(param_1 + 0x8c) + 0x114) = (ushort)(byte)puVar1[0x1c];
    *(undefined *)(param_1 + 0xab) = 1;
  }
  else {
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x84));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x88));
    FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x8c));
  }
  *(undefined *)(*(int *)(param_1 + 0x20) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x24) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x28) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x2c) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x30) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x34) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x38) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x3c) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x40) + 0x111) = 1;
  for (uVar7 = 0; (uVar7 & 0xff) < 3; uVar7 = uVar7 + 1) {
    iVar5 = (uVar7 & 0xff) * 4 + param_1;
    *(undefined *)(*(int *)(iVar5 + 0x44) + 0x111) = 1;
    *(undefined *)(*(int *)(iVar5 + 0x50) + 0x111) = 1;
  }
  *(undefined *)(*(int *)(param_1 + 0x5c) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x60) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 100) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x68) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x6c) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x70) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x74) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x78) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x7c) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x80) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x84) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x88) + 0x111) = 1;
  *(undefined *)(*(int *)(param_1 + 0x8c) + 0x111) = 1;
  *(undefined *)(param_1 + 0xac) = 1;
  return;
}



void FUN_8002bb90(int param_1)

{
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  uint uVar4;
  
  iVar2 = *(int *)(param_1 + 0x90);
  *(undefined *)(iVar2 + 0x20) = 1;
  *(undefined *)(*(int *)(iVar2 + 0x1c) + 10) = 0;
  puVar1 = *(undefined4 **)(param_1 + 0x94);
  *puVar1 = 0xffff0000;
  puVar1[1] = &LAB_80026cd4;
  puVar1[0x14] = 0x10000;
  puVar1[0x15] = 0x10000;
  *(undefined *)(puVar1 + 0x40) = 0x14;
  puVar1 = *(undefined4 **)(param_1 + 0x98);
  *puVar1 = 0xffff0000;
  puVar1[1] = &LAB_80026cd4;
  puVar1[0x14] = 0x10000;
  puVar1[0x15] = 0x10000;
  *(undefined *)(puVar1 + 0x40) = 0x14;
  puVar1 = *(undefined4 **)(param_1 + 0x9c);
  *puVar1 = 0xffff0000;
  puVar1[1] = &LAB_80026cd4;
  puVar1[0x14] = 0x10000;
  puVar1[0x15] = 0x10000;
  *(undefined *)(puVar1 + 0x40) = 0x14;
  iVar2 = *(int *)(param_1 + 0x20);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x24);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x28);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x2c);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x30);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x34);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x38);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x3c);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x40);
  uVar4 = 0;
  while( true ) {
    *(undefined *)(iVar2 + 0x111) = 0;
    *(undefined2 *)(iVar2 + 0x10c) = 0;
    if (2 < (uVar4 & 0xff)) break;
    iVar2 = (uVar4 & 0xff) * 4 + param_1;
    iVar3 = *(int *)(iVar2 + 0x44);
    *(undefined *)(iVar3 + 0x111) = 0;
    *(undefined2 *)(iVar3 + 0x10c) = 0;
    iVar2 = *(int *)(iVar2 + 0x50);
    uVar4 = uVar4 + 1;
  }
  iVar2 = *(int *)(param_1 + 0x5c);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x60);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 100);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x68);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x6c);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x70);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x74);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x78);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x7c);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x80);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x84);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x88);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  iVar2 = *(int *)(param_1 + 0x8c);
  *(undefined *)(iVar2 + 0x111) = 0;
  *(undefined2 *)(iVar2 + 0x10c) = 0;
  *(undefined *)(param_1 + 0xac) = 0;
  return;
}



void FUN_8002bde4(int param_1)

{
  uint uVar1;
  int iVar2;
  
  FUN_8007c348(0x646c2cc0,0xa0,1);
  uVar1 = *(byte *)(param_1 + 0xa0) + 1 & 1;
  *(char *)(param_1 + 0xa0) = (char)uVar1;
  iVar2 = *(int *)(*(int *)(uVar1 * 4 + param_1 + 0x98) + 0x34);
  *(undefined *)(iVar2 + 0x34) = 0x80;
  *(undefined *)(iVar2 + 0x35) = 0x80;
  *(undefined *)(iVar2 + 0x36) = 0x80;
  iVar2 = *(int *)(*(int *)((*(byte *)(param_1 + 0xa0) + 1 & 1) * 4 + param_1 + 0x98) + 0x34);
  *(undefined *)(iVar2 + 0x34) = 0x40;
  *(undefined *)(iVar2 + 0x35) = 0x40;
  *(undefined *)(iVar2 + 0x36) = 0x40;
  return;
}



undefined4 FUN_8002be88(int param_1)

{
  undefined uVar1;
  int iVar2;
  
  FUN_8007c348(0x90810000,0xa0,1);
  if (*(char *)(param_1 + 0xa1) == '\0') {
    if (*(char *)(param_1 + 0xa0) == '\0') {
      return 1;
    }
    *(undefined *)(param_1 + 0xa1) = 1;
    *(undefined *)(param_1 + 0xa0) = 1;
    FUN_8001d07c(*(undefined4 *)(param_1 + 0x94),0x69c8f473,1);
    FUN_8001d07c(*(undefined4 *)(param_1 + 0x98),0x2ad0f011,1);
    FUN_8001d07c(*(undefined4 *)(param_1 + 0x9c),0x29c0e211,1);
    iVar2 = *(int *)(*(int *)(param_1 + 0x98) + 0x34);
    *(undefined *)(iVar2 + 0x34) = 0x40;
    *(undefined *)(iVar2 + 0x35) = 0x40;
    *(undefined *)(iVar2 + 0x36) = 0x40;
    iVar2 = *(int *)(*(int *)(param_1 + 0x9c) + 0x34);
    uVar1 = 0x80;
  }
  else {
    if (*(char *)(param_1 + 0xa0) == '\0') {
      return 2;
    }
    *(undefined *)(param_1 + 0xa1) = 0;
    *(undefined *)(param_1 + 0xa0) = 0;
    FUN_8001d07c(*(undefined4 *)(param_1 + 0x94),0xad0f813,1);
    FUN_8001d07c(*(undefined4 *)(param_1 + 0x98),0x69c04050,1);
    FUN_8001d07c(*(undefined4 *)(param_1 + 0x9c),0x68c0f413,1);
    iVar2 = *(int *)(*(int *)(param_1 + 0x98) + 0x34);
    *(undefined *)(iVar2 + 0x34) = 0x80;
    *(undefined *)(iVar2 + 0x35) = 0x80;
    *(undefined *)(iVar2 + 0x36) = 0x80;
    iVar2 = *(int *)(*(int *)(param_1 + 0x9c) + 0x34);
    uVar1 = 0x40;
  }
  *(undefined *)(iVar2 + 0x34) = uVar1;
  *(undefined *)(iVar2 + 0x35) = uVar1;
  *(undefined *)(iVar2 + 0x36) = uVar1;
  return 0;
}



void FUN_80030d08(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined param_4,
                 int param_5,short param_6,undefined param_7)

{
  short local_res8;
  short sStackX_a;
  
  local_res8 = (short)param_3;
  sStackX_a = (short)((uint)param_3 >> 0x10);
  FUN_8001c71c(param_1,param_2,(int)param_6,(int)local_res8,(int)sStackX_a,param_7);
  param_1[6] = &DAT_80010ba8;
  *(undefined2 *)(param_1 + 4) = 0x4b0;
  *param_1 = 0xffff0000;
  param_1[1] = FUN_80030e50;
  param_1[2] = 0xffff0000;
  param_1[3] = &LAB_80030fdc;
  FUN_8001d23c(param_1,0);
  *(undefined *)(param_1 + 0x1d) = param_4;
  if (param_5 != 0x10000) {
    param_1[0x16] = param_5;
    param_1[0x17] = param_5;
    param_1[0x14] = param_5;
    param_1[0x15] = param_5;
    param_1[9] = 0xffff0000;
    param_1[10] = &LAB_8001a268;
    param_1[0xb] = 0xffff0000;
    param_1[0xc] = &LAB_8001a298;
  }
  *(undefined *)((int)param_1 + 0x102) = 0;
  *(undefined2 *)(param_1 + 0x40) = 0;
  param_1[0x41] = 0;
  return;
}



void FUN_80030e50(int param_1)

{
  short sVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  short unaff_s2;
  code *pcVar5;
  short unaff_s4;
  
  FUN_8001cb84();
  sVar1 = *(short *)(param_1 + 0x100);
  if ((sVar1 != 0) && (*(short *)(param_1 + 0x100) = sVar1 + -1, sVar1 == 1)) {
    *(undefined *)(param_1 + 0x102) = 1;
  }
  if (*(char *)(param_1 + 0x102) != '\0') {
    iVar2 = *(int *)(param_1 + 0x104);
    if ((iVar2 != 0) && (iVar4 = (int)*(short *)(iVar2 + 10), iVar4 != 0)) {
      if (iVar4 < 1) {
        pcVar5 = *(code **)(iVar2 + 0xc);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(iVar2 + *(short *)(iVar2 + 0xc));
        unaff_s2 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar5 = *(code **)(iVar3 + -4);
      }
      iVar3 = (int)*(short *)(iVar2 + 8);
      if (0 < iVar4 << 0x10) {
        iVar3 = unaff_s2 + iVar3;
      }
      (*pcVar5)(iVar2 + iVar3,0x1009,0,param_1);
    }
    iVar2 = (int)*(short *)(BUF_PTR + 10);
    if (iVar2 != 0) {
      if (iVar2 < 1) {
        pcVar5 = *(code **)(BUF_PTR + 0xc);
      }
      else {
        iVar4 = iVar2 * 8 + *(int *)(BUF_PTR + *(short *)(BUF_PTR + 0xc));
        unaff_s4 = (short)*(undefined4 *)(iVar4 + -8);
        pcVar5 = *(code **)(iVar4 + -4);
      }
      iVar4 = (int)*(short *)(BUF_PTR + 8);
      if (0 < iVar2 << 0x10) {
        iVar4 = unaff_s4 + iVar4;
      }
      (*pcVar5)(BUF_PTR + iVar4,3,0,param_1);
    }
  }
  return;
}



void FUN_800313c8(undefined4 *param_1)

{
  undefined2 uVar1;
  undefined2 uVar2;
  undefined *puVar3;
  undefined2 *puVar4;
  
  FUN_80019744(param_1,0);
  puVar3 = PTR_DAT_800a59b0;
  param_1[6] = &DAT_80010b78;
  puVar4 = (undefined2 *)FUN_800143ec(puVar3,0x1c,1,0);
  FUN_80015438(puVar4,0xffff8ad0);
  puVar3 = PTR_DAT_800a59b0;
  *(undefined **)(puVar4 + 6) = &DAT_80010b98;
  uVar1 = *(undefined2 *)puVar3;
  uVar2 = *(undefined2 *)(puVar3 + 2);
  *(undefined *)((int)puVar4 + 0x11) = 1;
  *(undefined *)((int)puVar4 + 0x13) = 100;
  *(undefined *)(puVar4 + 8) = 0x14;
  *(undefined *)(puVar4 + 9) = 0x14;
  puVar4[10] = 0x15;
  *(undefined *)((int)puVar4 + 0x17) = 0xf;
  *(undefined *)(puVar4 + 0xc) = 0xde;
  *(undefined *)((int)puVar4 + 0x19) = 0xde;
  *puVar4 = 0;
  puVar4[1] = 0;
  *(undefined *)(puVar4 + 0xb) = 10;
  puVar4[2] = uVar1;
  puVar4[3] = uVar2;
  param_1[7] = puVar4;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80031584;
  *(undefined *)(param_1 + 8) = 10;
  *(undefined *)((int)param_1 + 0x21) = 10;
  *(undefined *)(param_1 + 9) = 0;
  *(undefined *)((int)param_1 + 0x25) = 0;
  *(undefined2 *)((int)param_1 + 0x26) = 0;
  *(undefined *)((int)param_1 + 0x22) = *(undefined *)(param_1 + 8);
  *(undefined *)((int)param_1 + 0x23) = *(undefined *)((int)param_1 + 0x21);
  *(undefined2 *)(param_1 + 10) = 0;
  *(undefined2 *)((int)param_1 + 0x2a) = 0xde;
  *(undefined2 *)(param_1 + 0xb) = 0xf;
  return;
}



int FUN_80032868(int param_1,char param_2)

{
  int iVar1;
  undefined4 uVar2;
  
  FUN_80015438(param_1,999);
  *(undefined *)(param_1 + 0x1e0) = 2;
  iVar1 = BUF_PTR;
  *(undefined **)(param_1 + 0xc) = &DAT_80010b18;
  uVar2 = *(undefined4 *)(iVar1 + 0x10c);
  *(undefined *)(param_1 + 0x1e7) = 0;
  *(char *)(param_1 + 0x1e6) = (char)uVar2;
  if (param_2 == '\0') {
    *(undefined *)(param_1 + 0x1e1) = 0x20;
    *(undefined *)(param_1 + 0x1e3) = 8;
    *(undefined *)(param_1 + 0x1e2) = 0x10;
    *(undefined *)(param_1 + 0x1e4) = 4;
    *(undefined *)(param_1 + 0x1e5) = 5;
  }
  else {
    *(undefined *)(param_1 + 0x1e1) = 0x10;
    *(undefined *)(param_1 + 0x1e3) = 4;
    *(undefined *)(param_1 + 0x1e2) = 0x10;
    *(undefined *)(param_1 + 0x1e4) = 4;
    *(undefined *)(param_1 + 0x1e5) = 0;
  }
  return param_1;
}



void FUN_80033d38(undefined4 *param_1,undefined4 param_2)

{
  undefined uVar1;
  undefined uVar2;
  undefined4 uVar3;
  int iVar4;
  
  FUN_8001c6c4(param_1,0x44c);
  param_1[6] = &DAT_80010ab8;
  param_1[0x41] = 0;
  param_1[0x40] = param_2;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80034338;
  FUN_80033ef0(param_1);
  *(undefined2 *)(param_1 + 0x1a) = *(undefined2 *)(param_1[0x40] + 0x10);
  *(undefined2 *)((int)param_1 + 0x6a) = *(undefined2 *)(param_1[0x40] + 0x12);
  FUN_8001d07c(param_1,*(undefined4 *)(&DAT_8009b1a0 + *(int *)param_1[0x40] * 4),1);
  iVar4 = param_1[0xd];
  if (iVar4 != 0) {
    uVar1 = *(undefined *)(BUF_PTR + 0x125);
    uVar2 = *(undefined *)(BUF_PTR + 0x126);
    *(undefined *)(iVar4 + 0x34) = *(undefined *)(BUF_PTR + 0x124);
    *(undefined *)(iVar4 + 0x35) = uVar1;
    *(undefined *)(iVar4 + 0x36) = uVar2;
    *(undefined *)(param_1[0xd] + 0x33) = 1;
  }
  param_1[0x18] = *(undefined4 *)(param_1[0x40] + 0x14);
  uVar3 = *(undefined4 *)(param_1[0x40] + 0x18);
  *(undefined *)((int)param_1 + 0x109) = 0;
  param_1[0x19] = uVar3;
  return;
}



void FUN_80033ef0(int param_1)

{
  undefined *puVar1;
  ushort uVar2;
  uint uVar3;
  undefined *puVar4;
  int iVar5;
  int iVar6;
  undefined4 uVar7;
  int iVar8;
  uint uVar9;
  ushort uVar10;
  int iVar11;
  uint uVar12;
  uint uVar13;
  int *local_48 [3];
  uint uStack_3c;
  undefined local_30 [8];
  
  FUN_8007bbac(local_48,*(undefined4 *)(&DAT_8009b1a0 + **(int **)(param_1 + 0x100) * 4));
  puVar1 = local_30 + 3;
  uVar3 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar3) =
       *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | uStack_3c >> (3 - uVar3) * 8;
  local_30._0_4_ = uStack_3c;
  uVar3 = local_30._0_4_;
  local_30._0_2_ = (undefined2)uStack_3c;
  uVar10 = local_30._0_2_ + 3 & 0xfffc;
  local_30._0_4_ = uVar3;
  if ((*local_48[0] == 0x180104) || (*local_48[0] == 0x1498810c)) {
    iVar5 = FUN_800143ec(PTR_DAT_800a59b0,0x60,1,0);
    iVar11 = (int)(short)uVar10;
    iVar6 = *(int *)(param_1 + 0x100);
    uVar2 = *(ushort *)(iVar6 + 0x1c);
    uVar9 = *(uint *)(iVar6 + 0x38);
    puVar1 = local_30 + 3;
    uVar3 = (uint)puVar1 & 3;
    *(uint *)(puVar1 + -uVar3) =
         *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | uStack_3c >> (3 - uVar3) * 8;
    local_30._0_4_ = uStack_3c;
    uVar3 = local_30._0_4_;
    uVar12 = *(uint *)(iVar6 + 4);
    uVar13 = *(uint *)(iVar6 + 0x20);
    local_30._2_2_ = (undefined2)(uStack_3c >> 0x10);
    iVar8 = (int)(short)local_30._2_2_;
    local_30._0_4_ = uVar3;
    FUN_80015468(iVar5,(int)((*(ushort *)(iVar6 + 0x1c) + 1) * 0x10000) >> 0x10,iVar11,iVar8,1);
    *(bool *)(iVar5 + 0x5b) = uVar9 < uVar2;
    uVar7 = BUF_PTR;
    *(undefined **)(iVar5 + 0xc) = &DAT_80010b00;
    FUN_800255c4(uVar7,uVar12 & 0xffff,iVar5 + 0x54,iVar5 + 0x58);
    FUN_800255c4(BUF_PTR,uVar13 & 0xffff,iVar5 + 0x4c,iVar5 + 0x50);
    iVar6 = *(short *)(iVar5 + 0x58) + -1;
    if (iVar6 == 0) {
      trap(0x1c00);
    }
    if ((iVar6 == -1) && (iVar11 == -0x80000000)) {
      trap(0x1800);
    }
    *(char *)(iVar5 + 0x5a) = (char)(iVar11 / iVar6);
    uVar7 = FUN_800143ec(PTR_DAT_800a59b0,0x34,*(short *)(iVar5 + 0x58) + -1,0);
    puVar1 = PTR_DAT_800a59b0;
    *(undefined4 *)(iVar5 + 0x3c) = uVar7;
    uVar7 = FUN_800143ec(puVar1,0x34,*(short *)(iVar5 + 0x58) + -1,0);
    puVar1 = PTR_DAT_800a59b0;
    *(undefined4 *)(iVar5 + 0x40) = uVar7;
    uVar7 = FUN_800143ec(puVar1,2,*(short *)(iVar5 + 0x58) + -1,0);
    *(undefined4 *)(iVar5 + 0x48) = uVar7;
    *(undefined *)(iVar5 + 0x5c) = 1;
    *(undefined *)(iVar5 + 0x5d) = 0;
    *(int *)(param_1 + 0x34) = iVar5;
    *(bool *)(iVar5 + 0x5d) = *local_48[0] == 0x1498810c;
    iVar5 = FUN_800143ec(PTR_DAT_800a59b0,0x10,1,0);
    FUN_80015438(iVar5,(int)((*(ushort *)(*(int *)(param_1 + 0x100) + 0x1c) - 1) * 0x10000) >> 0x10)
    ;
    uVar7 = BUF_PTR;
    *(undefined **)(iVar5 + 0xc) = &DAT_80010ad8;
    *(int *)(param_1 + 0x104) = iVar5;
    FUN_80021078(uVar7);
    *(undefined *)(param_1 + 0x108) = 1;
  }
  else {
    iVar5 = FUN_800143ec(PTR_DAT_800a59b0,0x5c,1,0);
    iVar11 = (int)(short)uVar10;
    iVar6 = *(int *)(param_1 + 0x100);
    uVar2 = *(ushort *)(iVar6 + 0x1c);
    uVar9 = *(uint *)(iVar6 + 0x38);
    puVar1 = local_30 + 3;
    uVar3 = (uint)puVar1 & 3;
    *(uint *)(puVar1 + -uVar3) =
         *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | uStack_3c >> (3 - uVar3) * 8;
    local_30._0_4_ = uStack_3c;
    uVar3 = local_30._0_4_;
    uVar12 = *(uint *)(iVar6 + 4);
    uVar13 = *(uint *)(iVar6 + 0x20);
    local_30._2_2_ = (undefined2)(uStack_3c >> 0x10);
    iVar8 = (int)(short)local_30._2_2_;
    local_30._0_4_ = uVar3;
    FUN_80015468(iVar5,(int)((*(ushort *)(iVar6 + 0x1c) + 2) * 0x10000) >> 0x10,iVar11,iVar8,1);
    *(bool *)(iVar5 + 0x57) = uVar9 < uVar2;
    uVar7 = BUF_PTR;
    *(undefined **)(iVar5 + 0xc) = &DAT_80010ae8;
    FUN_800255c4(uVar7,uVar12 & 0xffff,iVar5 + 0x50,iVar5 + 0x54);
    FUN_800255c4(BUF_PTR,uVar13 & 0xffff,iVar5 + 0x48,iVar5 + 0x4c);
    iVar6 = *(short *)(iVar5 + 0x54) + -1;
    if (iVar6 == 0) {
      trap(0x1c00);
    }
    if ((iVar6 == -1) && (iVar11 == -0x80000000)) {
      trap(0x1800);
    }
    *(char *)(iVar5 + 0x56) = (char)(iVar11 / iVar6);
    uVar7 = FUN_800143ec(PTR_DAT_800a59b0,0x34,*(short *)(iVar5 + 0x54) + -1,0);
    puVar1 = PTR_DAT_800a59b0;
    *(undefined4 *)(iVar5 + 0x3c) = uVar7;
    uVar7 = FUN_800143ec(puVar1,0x34,*(short *)(iVar5 + 0x54) + -1,0);
    *(undefined4 *)(iVar5 + 0x40) = uVar7;
    *(undefined *)(iVar5 + 0x58) = 0;
    *(int *)(param_1 + 0x34) = iVar5;
    *(bool *)(iVar5 + 0x58) = *local_48[0] == 0x8148080;
    *(undefined *)(param_1 + 0x108) = 0;
    *(undefined4 *)(param_1 + 0x104) = 0;
  }
  puVar4 = PTR_DAT_800a59b0;
  puVar1 = local_30 + 3;
  uVar3 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar3) =
       *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | uStack_3c >> (3 - uVar3) * 8;
  local_30._0_4_ = uStack_3c;
  uVar3 = local_30._0_4_;
  local_30._2_2_ = (undefined2)(uStack_3c >> 0x10);
  iVar5 = (int)(short)local_30._2_2_;
  *(int *)(param_1 + 0xd4) = (short)uVar10 * iVar5;
  local_30._0_4_ = uVar3;
  uVar7 = FUN_800143ec(puVar4,1,(short)uVar10 * iVar5,0);
  *(undefined4 *)(param_1 + 0xb0) = uVar7;
  return;
}



undefined4 FUN_800346f0(int param_1)

{
  int iVar1;
  short sVar2;
  undefined4 uVar3;
  short sVar4;
  
  sVar2 = *(short *)(BUF_PTR + 0x44);
  if (*(int *)(param_1 + 0x60) != 0x10000) {
    sVar2 = (short)((uint)((int)sVar2 * *(int *)(param_1 + 0x60)) >> 0x10);
  }
  sVar4 = *(short *)(BUF_PTR + 0x46);
  if (*(int *)(param_1 + 100) != 0x10000) {
    sVar4 = (short)((uint)((int)sVar4 * *(int *)(param_1 + 100)) >> 0x10);
  }
  iVar1 = *(int *)(param_1 + 0x100);
  uVar3 = 0;
  if (((((int)*(short *)(iVar1 + 0xc) < sVar2 + -0x10) ||
       ((int)sVar2 + (int)*(short *)PTR_DAT_800a59b0 + 0x10 < (int)*(short *)(iVar1 + 8))) ||
      ((int)*(short *)(iVar1 + 0xe) < sVar4 + -0x10)) ||
     ((int)sVar4 + (int)*(short *)(PTR_DAT_800a59b0 + 2) + 0x10 < (int)*(short *)(iVar1 + 10))) {
    uVar3 = 1;
  }
  return uVar3;
}



void FUN_80034890(int param_1,undefined param_2,undefined param_3,undefined param_4,
                 undefined param_5,short param_6)

{
  FUN_80015438(param_1,(int)param_6);
  *(undefined **)(param_1 + 0xc) = &DAT_80010aa8;
  *(undefined *)(param_1 + 0x40) = param_2;
  *(undefined *)(param_1 + 0x41) = param_3;
  *(undefined *)(param_1 + 0x42) = param_4;
  *(undefined *)(param_1 + 0x43) = param_5;
  return;
}



void FUN_80034a50(int param_1,undefined4 param_2,undefined4 param_3,short param_4,undefined param_5)

{
  short local_res8;
  short sStackX_a;
  
  sStackX_a = (short)((uint)param_3 >> 0x10);
  local_res8 = (short)param_3;
  FUN_8001f940(param_1,param_2,(int)param_4,(int)local_res8,(int)sStackX_a,param_5);
  *(undefined **)(param_1 + 0x18) = &DAT_80010a88;
  *(undefined2 *)(param_1 + 0x10) = 0x44c;
  *(undefined4 *)(param_1 + 8) = 0xffff0000;
  *(undefined **)(param_1 + 0xc) = &LAB_80034ae0;
  *(undefined *)(param_1 + 0x34) = 0;
  return;
}



void FUN_80034bb4(undefined4 *param_1,undefined4 param_2,short param_3,short param_4,
                 undefined4 param_5,undefined4 param_6)

{
  int iVar1;
  
  FUN_8001c71c(param_1,0x168254b5,0x3bf,(int)param_3,(int)param_4,1);
  param_1[6] = &DAT_80010a68;
  param_1[0x41] = param_5;
  param_1[0x42] = param_6;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80034ca4;
  iVar1 = rand();
  *(ushort *)(param_1 + 0x40) = ((ushort)iVar1 & 0x3f) + 0x40;
  param_1[0x44] = param_2;
  *(short *)(param_1 + 0x43) = param_3;
  *(short *)((int)param_1 + 0x10e) = param_4;
  return;
}



void FUN_80034ec4(undefined4 *param_1,undefined4 param_2,short param_3,short param_4,int param_5,
                 undefined4 param_6,undefined4 param_7,undefined4 param_8)

{
  uint uVar1;
  int iVar2;
  
  FUN_8001c71c(param_1,param_2,3000,(int)param_3,(int)param_4,0);
  param_1[6] = &DAT_80010a48;
  param_1[0x40] = param_6;
  *(undefined2 *)(param_1 + 4) = 0x44c;
  param_1[0x41] = param_7;
  param_1[0x42] = param_8;
  if (param_1[0x40] == 0x7fffffff) {
    uVar1 = rand();
    param_1[0x40] = (uVar1 & 0x7fff) * 0x20 + -0x60000;
  }
  if (param_1[0x41] == 0x7fffffff) {
    uVar1 = rand();
    param_1[0x41] = -((uVar1 & 0x7fff) * 0x10 + 0x20000);
  }
  if (param_1[0x42] == 0x7fffffff) {
    uVar1 = rand();
    param_1[0x42] = (uVar1 & 0x1fff) - 0x400;
  }
  iVar2 = rand();
  FUN_8001d0bc(param_1,(iVar2 % 5) * 0x10000 >> 0x10);
  *(undefined2 *)(param_1 + 0x1b) = 0;
  *(undefined2 *)((int)param_1 + 0x6e) = 0;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_800350e8;
  param_1[7] = 0xffff0000;
  param_1[8] = &LAB_800351b8;
  param_1[0x14] = param_5;
  param_1[0x15] = param_5;
  param_1[0x16] = param_5;
  param_1[0x17] = param_5;
  param_1[9] = 0xffff0000;
  param_1[10] = &LAB_8001a268;
  param_1[0xb] = 0xffff0000;
  param_1[0xc] = &LAB_8001a298;
  param_1[0x42] = param_1[0x42] * param_5 >> 0x10;
  return;
}



void FUN_800362a0(undefined4 *param_1,undefined4 param_2)

{
  undefined *puVar1;
  undefined2 uVar2;
  uint uVar3;
  uint *puVar4;
  int iVar5;
  undefined4 uVar6;
  undefined4 *puVar7;
  uint uVar8;
  int iVar9;
  undefined auStack_30 [4];
  undefined local_2c [4];
  undefined *local_28;
  
  puVar7 = param_1;
  FUN_8001a0c4(param_1,0x4b0);
  param_1[6] = &DAT_800109f0;
  param_1[0x1e] = param_2;
  local_2c = (undefined  [4])0xffff0000;
  local_28 = &LAB_8003646c;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8003646c;
  iVar5 = param_1[0x1e];
  uVar3 = iVar5 + 0x3bU & 3;
  uVar8 = iVar5 + 0x38U & 3;
  auStack_30 = (undefined  [4])
               ((*(int *)((iVar5 + 0x3bU) - uVar3) << (3 - uVar3) * 8 |
                0xffffffffU >> (uVar3 + 1) * 8 & 0x8003646c) & -1 << (4 - uVar8) * 8 |
               *(uint *)((iVar5 + 0x38U) - uVar8) >> uVar8 * 8);
  uVar3 = iVar5 + 0x3fU & 3;
  uVar8 = iVar5 + 0x3cU & 3;
  uVar8 = (*(int *)((iVar5 + 0x3fU) - uVar3) << (3 - uVar3) * 8 |
          (uint)puVar7 & 0xffffffffU >> (uVar3 + 1) * 8) & -1 << (4 - uVar8) * 8 |
          *(uint *)((iVar5 + 0x3cU) - uVar8) >> uVar8 * 8;
  puVar1 = auStack_30 + 3;
  uVar3 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar3) =
       *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | (uint)auStack_30 >> (3 - uVar3) * 8;
  puVar1 = local_2c + 3;
  uVar3 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar3) =
       *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | uVar8 >> (3 - uVar3) * 8;
  local_2c._0_2_ = (undefined2)uVar8;
  iVar5 = (int)(short)local_2c._0_2_;
  local_2c._2_2_ = (undefined2)(uVar8 >> 0x10);
  iVar9 = (int)(short)local_2c._2_2_;
  local_2c = (undefined  [4])uVar8;
  FUN_8001a3a8(param_1,(*(short *)(*(int *)(param_1[0x1e] + 0x34) + 8) + -1) * 0x10000 >> 0x10,iVar5
               ,iVar9,1);
  uVar3 = (int)param_1 + 0x3bU & 3;
  puVar4 = (uint *)(((int)param_1 + 0x3bU) - uVar3);
  *puVar4 = *puVar4 & -1 << (uVar3 + 1) * 8 | (uint)auStack_30 >> (3 - uVar3) * 8;
  uVar3 = (uint)(param_1 + 0xe) & 3;
  puVar4 = (uint *)((int)(param_1 + 0xe) - uVar3);
  *puVar4 = *puVar4 & 0xffffffffU >> (4 - uVar3) * 8 | (int)auStack_30 << uVar3 * 8;
  uVar3 = (int)param_1 + 0x3fU & 3;
  puVar4 = (uint *)(((int)param_1 + 0x3fU) - uVar3);
  *puVar4 = *puVar4 & -1 << (uVar3 + 1) * 8 | (uint)local_2c >> (3 - uVar3) * 8;
  uVar3 = (uint)(param_1 + 0xf) & 3;
  puVar4 = (uint *)((int)(param_1 + 0xf) - uVar3);
  *puVar4 = *puVar4 & 0xffffffffU >> (4 - uVar3) * 8 | (int)local_2c << uVar3 * 8;
  *(undefined *)((int)param_1 + 0x81) = 1;
  *(undefined2 *)(param_1 + 0x1a) = *(undefined2 *)(param_1[0x1e] + 0x68);
  *(undefined2 *)((int)param_1 + 0x6a) = *(undefined2 *)(param_1[0x1e] + 0x6a);
  uVar6 = *(undefined4 *)(param_1[0x1e] + 0x50);
  param_1[0x14] = uVar6;
  param_1[0x15] = uVar6;
  uVar6 = *(undefined4 *)(param_1[0x1e] + 0x58);
  param_1[0x16] = uVar6;
  param_1[0x17] = uVar6;
  if (param_1[0x16] != 0x10000) {
    param_1[9] = 0xffff0000;
    param_1[10] = &LAB_8001a268;
    param_1[0xb] = 0xffff0000;
    param_1[0xc] = &LAB_8001a298;
  }
  *(undefined *)(param_1 + 0x1d) = *(undefined *)(param_1[0x1e] + 0x74);
  *(undefined *)((int)param_1 + 0x75) = *(undefined *)(param_1[0x1e] + 0x75);
  param_1[0x1f] = *(undefined4 *)(param_1[0x1e] + 0xcc);
  uVar2 = *(undefined2 *)(param_1[0x1e] + 0xda);
  *(undefined *)(param_1 + 0x20) = 0x18;
  *(undefined *)((int)param_1 + 0x76) = 1;
  *(char *)((int)param_1 + 0x82) = (char)uVar2;
  return;
}



undefined4 * FUN_80036694(undefined4 *param_1)

{
  u_short uVar1;
  int iVar2;
  
  FUN_800362a0();
  param_1[6] = &DAT_800109d0;
  *(undefined *)(param_1 + 0x21) = 0x40;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80036730;
  iVar2 = param_1[0xd];
  uVar1 = GetTPage((uint)*(byte *)(iVar2 + 0x32),1,(int)*(short *)(iVar2 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar2 + 0x12) & 0xffffff00);
  *(u_short *)(iVar2 + 0x24) = uVar1;
  return param_1;
}



void FUN_8003780c(undefined4 *param_1,undefined2 param_2,undefined2 param_3,undefined2 param_4,
                 undefined2 param_5,undefined2 param_6)

{
  undefined *puVar1;
  undefined4 uVar2;
  int iVar3;
  
  FUN_80019744(param_1,0x44c);
  puVar1 = PTR_DAT_800a59b0;
  param_1[6] = &DAT_80010950;
  iVar3 = FUN_800143ec(puVar1,0x94,1,0);
  FUN_80015438(iVar3,3000);
  uVar2 = BUF_PTR;
  *(undefined **)(iVar3 + 0xc) = &DAT_80010970;
  param_1[8] = iVar3;
  FUN_80021078(uVar2);
  *(undefined2 *)((int)param_1 + 0x2a) = param_6;
  *(undefined2 *)(param_1 + 9) = param_2;
  *(undefined2 *)((int)param_1 + 0x26) = param_3;
  *(undefined2 *)(param_1 + 10) = param_4;
  *(undefined2 *)(param_1 + 7) = param_5;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_800379ac;
  *(undefined *)((int)param_1 + 0x1e) = 0;
  *(undefined2 *)((int)param_1 + 0x12) = 0x40;
  return;
}



undefined4 * FUN_80037adc(undefined4 *param_1,uint param_2,int param_3,char param_4)

{
  undefined *puVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  undefined local_50 [28];
  undefined4 local_34;
  undefined *local_30;
  
  puVar1 = local_50 + 3;
  uVar2 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar2) =
       *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | param_2 >> (3 - uVar2) * 8;
  local_50._0_2_ = (undefined2)param_2;
  iVar4 = (int)(short)local_50._0_2_;
  local_50._2_2_ = (undefined2)(param_2 >> 0x10);
  iVar3 = (int)(short)local_50._2_2_;
  local_50._0_4_ = param_2;
  FUN_8001c71c(param_1,0x6a351094,2000,iVar4,iVar3,0);
  param_1[6] = &DAT_80010ba8;
  *(undefined2 *)(param_1 + 4) = 0x4b0;
  *param_1 = 0xffff0000;
  param_1[1] = FUN_80030e50;
  local_34 = 0xffff0000;
  local_30 = &LAB_80030fdc;
  param_1[2] = 0xffff0000;
  param_1[3] = &LAB_80030fdc;
  FUN_8001d23c(param_1,0);
  *(undefined *)(param_1 + 0x1d) = 0;
  if (param_3 != 0x10000) {
    param_1[0x16] = param_3;
    param_1[0x17] = param_3;
    param_1[0x14] = param_3;
    param_1[0x15] = param_3;
    param_1[9] = 0xffff0000;
    param_1[10] = &LAB_8001a268;
    param_1[0xb] = 0xffff0000;
    param_1[0xc] = &LAB_8001a298;
  }
  param_1[6] = &DAT_80010930;
  *(undefined *)((int)param_1 + 0x102) = 0;
  *(undefined2 *)(param_1 + 0x40) = 0;
  param_1[0x41] = 0;
  param_1[0x43] = param_3;
  *(char *)(param_1 + 0x42) = param_4;
  if (param_4 == '\0') {
    param_1[0x43] = (int)param_1[0x43] >> 1;
  }
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80037c90;
  return param_1;
}



void FUN_80037d30(undefined4 *param_1)

{
  undefined uVar1;
  undefined *puVar2;
  undefined4 uVar3;
  int iVar4;
  
  FUN_80019744(param_1,0x44c);
  param_1[6] = &DAT_80010910;
  puVar2 = PTR_DAT_800a59b0;
  *(undefined2 *)((int)param_1 + 0x22) = 0xff;
  iVar4 = FUN_800143ec(puVar2,0x44,1,0);
  uVar1 = *(undefined *)((int)param_1 + 0x22);
  FUN_80015438(iVar4,9000);
  *(undefined *)(iVar4 + 0x43) = 1;
  *(undefined *)(iVar4 + 0x40) = uVar1;
  *(undefined *)(iVar4 + 0x41) = uVar1;
  *(undefined *)(iVar4 + 0x42) = uVar1;
  uVar3 = BUF_PTR;
  *(undefined **)(iVar4 + 0xc) = &DAT_80010aa8;
  param_1[7] = iVar4;
  FUN_80021078(uVar3);
  *(undefined2 *)(param_1 + 8) = 0x50;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80037ed4;
  param_1[2] = 0xffff0000;
  param_1[3] = &LAB_80038008;
  *(undefined *)(param_1 + 9) = 0;
  *(undefined2 *)((int)param_1 + 0x12) = 0x40;
  return;
}



void FUN_80038028(undefined4 *param_1,uint param_2,int param_3)

{
  undefined *puVar1;
  uint uVar2;
  u_short uVar3;
  int iVar4;
  int iVar5;
  undefined local_48 [28];
  undefined4 local_2c;
  undefined *local_28;
  
  puVar1 = local_48 + 3;
  uVar2 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar2) =
       *(uint *)(puVar1 + -uVar2) & -1 << (uVar2 + 1) * 8 | param_2 >> (3 - uVar2) * 8;
  local_48._0_2_ = (undefined2)param_2;
  iVar5 = (int)(short)local_48._0_2_;
  local_48._2_2_ = (undefined2)(param_2 >> 0x10);
  iVar4 = (int)(short)local_48._2_2_;
  local_48._0_4_ = param_2;
  FUN_8001c71c(param_1,0xa921e2c,2000,iVar5,iVar4,0);
  param_1[6] = &DAT_80010ba8;
  *(undefined2 *)(param_1 + 4) = 0x4b0;
  *param_1 = 0xffff0000;
  param_1[1] = FUN_80030e50;
  local_2c = 0xffff0000;
  local_28 = &LAB_80030fdc;
  param_1[2] = 0xffff0000;
  param_1[3] = &LAB_80030fdc;
  FUN_8001d23c(param_1,0);
  *(undefined *)(param_1 + 0x1d) = 0;
  if (param_3 != 0x10000) {
    param_1[0x16] = param_3;
    param_1[0x17] = param_3;
    param_1[0x14] = param_3;
    param_1[0x15] = param_3;
    param_1[9] = 0xffff0000;
    param_1[10] = &LAB_8001a268;
    local_2c = 0xffff0000;
    local_28 = &LAB_8001a298;
    param_1[0xb] = 0xffff0000;
    param_1[0xc] = &LAB_8001a298;
  }
  iVar4 = param_1[0xd];
  *(undefined *)((int)param_1 + 0x102) = 0;
  *(undefined2 *)(param_1 + 0x40) = 0;
  param_1[0x41] = 0;
  param_1[6] = &DAT_800108f0;
  uVar3 = GetTPage((uint)*(byte *)(iVar4 + 0x32),1,(int)*(short *)(iVar4 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar4 + 0x12) & 0xffffff00);
  *(u_short *)(iVar4 + 0x24) = uVar3;
  param_1[0x14] = 0x40000;
  param_1[0x15] = 0x40000;
  param_1[2] = 0xffff0000;
  param_1[3] = &LAB_8003826c;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8003820c;
  *(undefined *)(param_1 + 0x42) = 0;
  return;
}



undefined4 * FUN_800382fc(undefined4 *param_1)

{
  undefined uVar1;
  undefined *puVar2;
  undefined4 uVar3;
  int iVar4;
  
  FUN_80019744(param_1,0x44c);
  puVar2 = PTR_DAT_800a59b0;
  param_1[6] = &DAT_800108d0;
  *(undefined2 *)((int)param_1 + 0x22) = 0;
  iVar4 = FUN_800143ec(puVar2,0x44,1,0);
  uVar1 = *(undefined *)((int)param_1 + 0x22);
  FUN_80015438(iVar4,20000);
  *(undefined *)(iVar4 + 0x43) = 2;
  *(undefined *)(iVar4 + 0x40) = uVar1;
  *(undefined *)(iVar4 + 0x41) = uVar1;
  *(undefined *)(iVar4 + 0x42) = uVar1;
  uVar3 = BUF_PTR;
  *(undefined **)(iVar4 + 0xc) = &DAT_80010aa8;
  param_1[7] = iVar4;
  FUN_80021078(uVar3);
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80038464;
  return param_1;
}



undefined4 load_files_from_cd(void)

{
  CdlFILE *files;
  undefined4 uVar1;
  CdlFILE *music2;
  CdlFILE *music3;
  CdlFILE *music4;
  CdlFILE *music5;
  
  CdInit();
  files = CdSearchFile((CdlFILE *)&GAME_BLB,"\\GAME.BLB;1");
  uVar1 = 0;
  if (files != (CdlFILE *)0x0) {
    GAMEBLB = CdPosToInt((CdlLOC *)&GAME_BLB);
    files = CdSearchFile((CdlFILE *)&CD_FS,"\\MUSIC1.XA;1");
    if (files != (CdlFILE *)0x0) {
      MUSIC1 = CdPosToInt((CdlLOC *)&CD_FS);
    }
    music2 = CdSearchFile((CdlFILE *)&CD_FS,"\\MUSIC2.XA;1");
    if (music2 != (CdlFILE *)0x0) {
      MUSIC2 = CdPosToInt((CdlLOC *)&CD_FS);
    }
    music3 = CdSearchFile((CdlFILE *)&CD_FS,"\\MUSIC3.XA;1");
    if (music3 != (CdlFILE *)0x0) {
      MUSIC3 = CdPosToInt((CdlLOC *)&CD_FS);
    }
    music4 = CdSearchFile((CdlFILE *)&CD_FS,"\\MUSIC4.XA;1");
    if (music4 != (CdlFILE *)0x0) {
      MUSIC4 = CdPosToInt((CdlLOC *)&CD_FS);
    }
    music5 = CdSearchFile((CdlFILE *)&CD_FS,"\\MUSIC5.XA;1");
    if (music5 != (CdlFILE *)0x0) {
      MUSIC5 = CdPosToInt((CdlLOC *)&CD_FS);
    }
    if ((((files != (CdlFILE *)0x0) && (music2 != (CdlFILE *)0x0)) && (music3 != (CdlFILE *)0x0)) &&
       ((music4 != (CdlFILE *)0x0 && (music5 != (CdlFILE *)0x0)))) {
      GAME_FILES_OK = true;
    }
    uVar1 = 1;
  }
  return uVar1;
}



int load_game_blb_asset(uint offset,int sector_count,u_long *buffer_pointer)

{
  CdlLOC cdloc [2];
  
  CdIntToPos(GAMEBLB + (offset & 0xffff),cdloc);
                    // \x02 means set pos
                    // 
  CdControl('\x02',&cdloc[0].minute,(u_char *)0x0);
  CdRead(sector_count & 0xffff,buffer_pointer,128);
  CdReadSync(0,(u_char *)0);
  return 1;
}



int FUN_80038ca8(byte param_1,byte param_2)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  
  if (GAME_FILES_OK) {
    uVar2 = *(ushort *)(&DAT_8009b448 + ((uint)param_1 * 8 + (uint)param_2) * 2) - 2;
    if (param_2 == 0) {
      uVar2 = *(ushort *)(&DAT_8009b448 + ((uint)param_1 * 8 + (uint)param_2) * 2) - 3;
    }
    cd_param = 0xc0;
    DAT_800a5a54 = (&MUSIC1)[param_1] + (uVar2 & 0xffff) * 8;
    iVar3 = 8;
    DAT_800a5a48 = param_1;
    CdControl('\x0e',&cd_param,(u_char *)0x0);
    do {
      DAT_800a5a50 = (&MUSIC1)[DAT_800a5a48];
      iVar1 = CdControl('\x1b',&CD_FS + (uint)DAT_800a5a48 * 0x18,(u_char *)0x0);
      iVar3 = iVar3 + -1;
      if (iVar1 == 1) {
        cd_param = 0xc8;
        CdControl(0xe,&cd_param,(u_char *)0x0);
        DAT_800a5a68 = 1;
        DAT_800a5a69 = param_2;
                    // choose apcdm play sector
                    // 
        iVar3 = CdControlB(0xd,&DAT_800a5a68,&DAT_800a5a58);
        CD_PLAYING = true;
        return iVar3;
      }
    } while (iVar3 != 0);
  }
  return 0;
}



void stop_cd(void)

{
  if (GAME_FILES_OK) {
    CdControl('\b',(u_char *)0x0,(u_char *)0x0);
    CdFlush();
    CD_PLAYING = false;
  }
  return;
}



undefined4 FUN_80038e4c(void)

{
  undefined4 uVar1;
  
  if (GAME_FILES_OK) {
    uVar1 = 1;
    if (DAT_800a5a46 == '\0') {
      CdControl('\t',(u_char *)0x0,(u_char *)0x0);
      uVar1 = 1;
      DAT_800a5a46 = '\x01';
    }
  }
  else {
    uVar1 = 0;
  }
  return uVar1;
}



int FUN_80038e9c(void)

{
  int iVar1;
  
  if (GAME_FILES_OK) {
    if (DAT_800a5a46 == '\0') {
      iVar1 = 1;
    }
    else {
      iVar1 = CdControl('\x1b',(u_char *)0x0,(u_char *)0x0);
      DAT_800a5a46 = '\0';
    }
  }
  else {
    iVar1 = 0;
  }
  return iVar1;
}



uint handle_music(void)

{
  int iVar1;
  uint uVar2;
  int unaff_s1;
  u_char auStack_18 [8];
  bool is_valid_track;
  
  if (DAT_800a5a46 == '\0') {
    if (!CD_PLAYING) {
      return 1;
    }
    if (GAME_FILES_OK) {
      iVar1 = CdSync(1,auStack_18);
      if (iVar1 == 2) {
        if (DAT_800a5a50 <= DAT_800a5a54) {
          is_valid_track = false;
          iVar1 = CdLastCom();
          if (iVar1 == 0x11) {
            unaff_s1 = CdPosToInt((CdlLOC *)(auStack_18 + 5));
            is_valid_track = 0 < unaff_s1;
          }
          if (is_valid_track) {
            DAT_800a5a50 = unaff_s1;
          }
          uVar2 = CdControlF('\x11',(u_char *)0x0);
          return uVar2;
        }
        DAT_800a5a50 = (&MUSIC1)[DAT_800a5a48];
        uVar2 = CdControl('\x1b',&CD_FS + (uint)DAT_800a5a48 * 0x18,(u_char *)0x0);
        DAT_800a5a47 = 0;
        return uVar2;
      }
      if (iVar1 < 3 != 0) {
        return (uint)(iVar1 < 3);
      }
      if (iVar1 != 5) {
        return 5;
      }
      DAT_800a5a47 = DAT_800a5a47 + 1;
      if (DAT_800a5a47 < 6) {
        return 0;
      }
      DAT_800a5a50 = (&MUSIC1)[DAT_800a5a48];
      CdControl('\x1b',&CD_FS + (uint)DAT_800a5a48 * 0x18,(u_char *)0x0);
      DAT_800a5a47 = 0;
      return 0;
    }
  }
  else {
    CdControl('\t',(u_char *)0x0,(u_char *)0x0);
  }
  return 1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool load_str(char *param_1,int param_2,short param_3,u_short *param_4)

{
  undefined *puVar1;
  bool bVar2;
  u_long uVar5;
  CdlFILE *pCVar6;
  int iVar7;
  bool bVar8;
  DISPENV display_env;
  CdlFILE CStack72;
  RECT local_30;
  undefined auStack40 [8];
  uint uVar3;
  undefined uVar4;
  
  bVar8 = true;
  uVar5 = PadRead(1);
  bVar2 = (uVar5 & 0xffff) != 0;
  FUN_80039c18(0);
  DAT_800a5a74 = param_3 - 1;
  VLC_BUFFER = (astruct_12 *)param_4;
  if (param_2 == 0) {
    pCVar6 = CdSearchFile(&CStack72,param_1);
    if (pCVar6 == (CdlFILE *)0x0) {
      return true;
    }
  }
  else {
    CdIntToPos(param_2,&CStack72.pos);
  }
  uVar4 = DAT_800a60dc;
  FUN_8007cc28(4);
  prepare_image_struct(0xf0,true,0);
  FUN_80039da4(&CStack72,&LAB_80039e24);
  DecDCTvlcBuild(&VLC_BUFFER->vlc_table);
  while (iVar7 = FUN_80039f6c(), iVar7 == -1) {
    puVar1 = auStack40 + 3;
    uVar3 = (uint)puVar1 & 3;
    *(uint *)(puVar1 + -uVar3) =
         *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | (uint)CStack72.pos >> (3 - uVar3) * 8;
    auStack40._0_4_ = CStack72.pos;
    FUN_8003a22c(auStack40);
  }
  DAT_800a5a76 = '\0';
LAB_80039250:
  do {
    DecDCTin((u_long *)(&DCT_LOAD_BUF)[output_run_level_],3);
    DecDCTout((u_long *)(&IMAGE_BUFFER_START)[IMAGE_SIZE_OFFSET],((int)bit_depth * (int)height) / 2)
    ;
    while (iVar7 = FUN_80039f6c(), iVar7 == -1) {
      iVar7 = StGetBackloc((CdlLOC *)auStack40);
      if (((int)(uint)DAT_800a5a74 < iVar7) || (iVar7 < 1)) {
        puVar1 = auStack40 + 3;
        uVar3 = (uint)puVar1 & 3;
        *(uint *)(puVar1 + -uVar3) =
             *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 |
             (uint)CStack72.pos >> (3 - uVar3) * 8;
        auStack40._0_4_ = CStack72.pos;
      }
      FUN_8003a22c(auStack40);
    }
    FUN_8003a194();
    VSync(0);
    SetDefDispEnv(&display_env,0,-(uint)(_buffer_counter_ == 0) & 0xf0,0x1e0,0x100);
    display_env.screen.x = 0;
    display_env.screen.y = 0;
    display_env.screen.w = 0;
    display_env.screen.h = 0xf0;
    display_env.isrgb24 = '\x01';
    display_env.disp.w =
         (short)((ulonglong)((longlong)((int)display_env.disp.w << 1) * 0x55555556) >> 0x20) -
         (short)(((int)display_env.disp.w << 1) >> 0x1f);
    PutDispEnv(&display_env);
    SetDispMask(1);
    if (DAT_800a5a76 != '\0') goto LAB_800393fc;
    if (bVar2) {
      uVar5 = PadRead(1);
      if ((uVar5 & 0xffff) == 0) {
        bVar2 = false;
      }
      if (bVar2) goto LAB_80039250;
    }
    uVar5 = PadRead(1);
    if ((uVar5 & 0xfff) != 0) {
      bVar8 = (uVar5 & 0x800) == 0;
      CdControlB('\t',(u_char *)0x0,(u_char *)0x0);
LAB_800393fc:
      local_30.x = 0;
      local_30.w = 480;
      local_30.h = 256;
      local_30.y = -(ushort)(_buffer_counter_ == 0) & 0xf0;
      ClearImage(&local_30,'\0','\0','\0');
      VSync(0);
      SetDefDispEnv(&display_env,0,-(uint)(_buffer_counter_ == 0) & 0xf0,0x140,0x100);
      display_env.isrgb24 = '\0';
      display_env.screen.x = 0;
      display_env.screen.y = 0;
      display_env.screen.w = 0;
      display_env.screen.h = 240;
      PutDispEnv(&display_env);
      local_30.x = 0;
      local_30.w = 480;
      local_30.h = 256;
      _buffer_counter_ = (uint)(_buffer_counter_ == 0);
      local_30.y = -(ushort)(_buffer_counter_ == 0) & 0xf0;
      ClearImage(&local_30,'\0','\0','\0');
      VSync(0);
      SetDefDispEnv(&display_env,0,-(uint)(_buffer_counter_ == 0) & 0xf0,0x140,0x100);
      display_env.isrgb24 = '\0';
      display_env.screen.x = 0;
      display_env.screen.y = 0;
      display_env.screen.w = 0;
      display_env.screen.h = 240;
      PutDispEnv(&display_env);
      DecDCToutCallback((func *)0x0);
      FUN_800866e8();
      CdControlB('\t',(u_char *)0x0,(u_char *)0x0);
      FUN_8007cc28(uVar4);
      return bVar8;
    }
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// potentially a menu?
// 

undefined4 load_screen(uint offset,uint sector_count,u_short *buffer_location)

{
  bool bVar2;
  char cVar3;
  u_long button_status;
  uint load_asset_status;
  undefined4 uVar4;
  int iVar5;
  int iVar6;
  undefined4 uVar7;
  DISPENV display_env;
  RECT RECT;
  bool bVar1;
  undefined uVar2;
  
  bVar1 = true;
  uVar7 = 1;
  button_status = PadRead(1);
  bVar2 = (button_status & 0xffff) != 0;
  VLC_BUFFER = (astruct_12 *)buffer_location;
  load_asset_status =
       load_game_blb_asset(offset & 0xffff,sector_count & 0xffff,buffer_location + 0x33800);
  uVar2 = DAT_800a60dc;
  uVar4 = 1;
  if ((load_asset_status & 0xff) != 0) {
    FUN_8007cc28(4);
    FUN_8007ca5c(5,6);
    prepare_image_struct(0x100,true,1);
    DecDCTReset(0);
    DecDCToutCallback((func *)&LAB_80039e24);
    DecDCTvlcBuild(&VLC_BUFFER->vlc_table);
    FUN_8003a104(0);
    DAT_800a5a76 = '\0';
    iVar5 = 1;
LAB_80039638:
    uVar4 = uVar7;
    if (DAT_800a5a76 == '\0') {
      DecDCTin((u_long *)(&DCT_LOAD_BUF)[output_run_level_],3);
      DecDCTout((u_long *)(&IMAGE_BUFFER_START)[IMAGE_SIZE_OFFSET],
                ((int)bit_depth * (int)height) / 2);
      iVar6 = iVar5 + 1;
      cVar3 = FUN_8003a104(iVar5);
      if (cVar3 == '\0') {
        DAT_800a5a76 = '\x01';
      }
      FUN_8003a194();
      iVar5 = 0;
      if (bVar1) {
        bVar1 = false;
      }
      else {
        do {
          FUN_8007cc78();
          if (bVar2) {
            button_status = PadRead(1);
            if ((button_status & 0xffff) == 0) {
              bVar2 = false;
            }
            if (!bVar2) goto LAB_8003970c;
          }
          else {
LAB_8003970c:
            button_status = PadRead(1);
            if ((button_status & 0xffff) != 0) {
              if ((button_status & 0x800) != 0) {
                uVar7 = 0;
              }
              DAT_800a5a76 = '\x01';
              break;
            }
          }
          VSync(0);
          iVar5 = iVar5 + 1;
        } while (iVar5 < 0x150);
      }
      VSync(0);
      uVar4 = uVar7;
      if (DAT_800a5a76 == '\0') {
        SetDefDispEnv(&display_env,0,(uint)(_buffer_counter_ == 0) << 8,0x1e0,0x100);
        display_env.screen.x = 0;
        display_env.screen.y = 0;
        display_env.screen.w = 0;
        display_env.isrgb24 = '\x01';
        display_env.screen.h = 0xf0;
        display_env.disp.w =
             (short)((ulonglong)((longlong)((int)display_env.disp.w << 1) * 0x55555556) >> 0x20) -
             (short)(((int)display_env.disp.w << 1) >> 0x1f);
        PutDispEnv(&display_env);
        SetDispMask(1);
        iVar5 = iVar6;
        if (bVar2) goto code_r0x800397ec;
        goto LAB_80039810;
      }
    }
    RECT.x = 0;
    RECT.w = 0x1e0;
    RECT.h = 0x100;
    RECT.y = (ushort)(_buffer_counter_ == 0) << 8;
    ClearImage(&RECT,'\0','\0','\0');
    VSync(0);
    SetDefDispEnv(&display_env,0,(uint)(_buffer_counter_ == 0) << 8,0x140,0x100);
    display_env.isrgb24 = '\0';
    display_env.screen.x = 0;
    display_env.screen.y = 0;
    display_env.screen.w = 0;
    display_env.screen.h = 0xf0;
    PutDispEnv(&display_env);
    RECT.x = 0;
    RECT.w = 0x1e0;
    RECT.h = 0x100;
    _buffer_counter_ = (uint)(_buffer_counter_ == 0);
    RECT.y = (ushort)(_buffer_counter_ == 0) << 8;
    ClearImage(&RECT,'\0','\0','\0');
    VSync(0);
    SetDefDispEnv(&display_env,0,(uint)(_buffer_counter_ == 0) << 8,0x140,0x100);
    display_env.isrgb24 = '\0';
    display_env.screen.x = 0;
    display_env.screen.y = 0;
    display_env.screen.w = 0;
    display_env.screen.h = 0xf0;
    PutDispEnv(&display_env);
    DecDCToutCallback((func *)0x0);
    stop_cd_wrapper();
    FUN_8007cc28(uVar2);
  }
  return uVar4;
code_r0x800397ec:
  button_status = PadRead(1);
  if ((button_status & 0xfff) == 0) {
    bVar2 = false;
  }
  if (!bVar2) {
LAB_80039810:
    button_status = PadRead(1);
    if (((button_status & 0xffff) != 0) && ((button_status & 0x800) != 0)) {
      uVar7 = 0;
    }
  }
  goto LAB_80039638;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_800395ac(void)

{
  bool bVar1;
  undefined uVar2;
  char cVar3;
  int in_v0;
  uint uVar4;
  undefined4 uVar5;
  u_long uVar6;
  astruct_12 *unaff_s0;
  int iVar7;
  uint unaff_s1;
  int iVar8;
  uint unaff_s2;
  char unaff_s4;
  undefined4 unaff_s5;
  short param_8;
  short param_9;
  short sStack00000022;
  short param_10;
  short sStack00000026;
  undefined4 param_11;
  short param_13;
  short sStack00000032;
  short param_14;
  short sStack00000036;
  
  bVar1 = in_v0 != 0;
  VLC_BUFFER = unaff_s0;
  uVar4 = load_game_blb_asset(unaff_s1 & 0xffff,unaff_s2 & 0xffff,unaff_s0 + 0x19c);
  uVar2 = DAT_800a60dc;
                    // if the asset isn't loaded
  uVar5 = 1;
  if ((uVar4 & 0xff) != 0) {
    FUN_8007cc28(4);
    FUN_8007ca5c(5,6);
    prepare_image_struct(256,true,1);
    DecDCTReset(0);
    DecDCToutCallback((func *)&LAB_80039e24);
    DecDCTvlcBuild(&VLC_BUFFER->vlc_table);
    FUN_8003a104(0);
    DAT_800a5a76 = '\0';
    iVar7 = 1;
LAB_80039638:
    uVar5 = unaff_s5;
    if (DAT_800a5a76 == '\0') {
      DecDCTin((u_long *)(&DCT_LOAD_BUF)[output_run_level_],3);
                    // The last param is the size of the data being recieved 
      DecDCTout((u_long *)(&IMAGE_BUFFER_START)[IMAGE_SIZE_OFFSET],
                ((int)bit_depth * (int)height) / 2);
      iVar8 = iVar7 + 1;
      cVar3 = FUN_8003a104(iVar7);
      if (cVar3 == '\0') {
        DAT_800a5a76 = '\x01';
      }
      FUN_8003a194();
      iVar7 = 0;
      if (unaff_s4 == '\0') {
        do {
          FUN_8007cc78();
          if (bVar1) {
            uVar6 = PadRead(1);
            if ((uVar6 & 0xffff) == 0) {
              bVar1 = false;
            }
            if (!bVar1) goto LAB_8003970c;
          }
          else {
LAB_8003970c:
            uVar6 = PadRead(1);
            if ((uVar6 & 0xffff) != 0) {
              if ((uVar6 & 0x800) != 0) {
                unaff_s5 = 0;
              }
              DAT_800a5a76 = '\x01';
              break;
            }
          }
          VSync(0);
          iVar7 = iVar7 + 1;
        } while (iVar7 < 0x150);
      }
      else {
        unaff_s4 = '\0';
      }
      VSync(0);
      uVar5 = unaff_s5;
      if (DAT_800a5a76 == '\0') {
        SetDefDispEnv((DISPENV *)&stack0x00000018,0,(uint)(_buffer_counter_ == 0) << 8,480,256);
        param_9 = 0;
        sStack00000022 = 0;
        param_10 = 0;
        param_11._1_1_ = 1;
        sStack00000026 = 240;
        param_8 = (short)((ulonglong)((longlong)((int)param_8 << 1) * 0x55555556) >> 0x20) -
                  (short)(((int)param_8 << 1) >> 0x1f);
        PutDispEnv((DISPENV *)&stack0x00000018);
        SetDispMask(1);
        iVar7 = iVar8;
        if (bVar1) goto code_r0x800397ec;
        goto LAB_80039810;
      }
    }
    param_13 = 0;
    param_14 = 480;
    sStack00000036 = 256;
    sStack00000032 = (ushort)(_buffer_counter_ == 0) << 8;
    ClearImage((RECT *)&stack0x00000030,0,0,0);
    VSync(0);
    SetDefDispEnv((DISPENV *)&stack0x00000018,0,(uint)(_buffer_counter_ == 0) << 8,320,256);
    param_11._1_1_ = '\0';
    param_9 = 0;
    sStack00000022 = 0;
    param_10 = 0;
    sStack00000026 = 240;
    PutDispEnv((DISPENV *)&stack0x00000018);
    param_13 = 0;
    param_14 = 480;
    sStack00000036 = 256;
    _buffer_counter_ = (uint)(_buffer_counter_ == 0);
    sStack00000032 = (ushort)(_buffer_counter_ == 0) << 8;
    ClearImage((RECT *)&stack0x00000030,'\0','\0','\0');
    VSync(0);
    SetDefDispEnv((DISPENV *)&stack0x00000018,0,(uint)(_buffer_counter_ == 0) << 8,0x140,256);
    param_11._1_1_ = '\0';
    param_9 = 0;
    sStack00000022 = 0;
    param_10 = 0;
    sStack00000026 = 240;
    PutDispEnv((DISPENV *)&stack0x00000018);
    DecDCToutCallback((func *)0x0);
    stop_cd_wrapper();
    FUN_8007cc28(uVar2);
  }
  return uVar5;
code_r0x800397ec:
  uVar6 = PadRead(1);
  if ((uVar6 & 0xfff) == 0) {
    bVar1 = false;
  }
  if (!bVar1) {
LAB_80039810:
    uVar6 = PadRead(1);
    if (((uVar6 & 0xffff) != 0) && ((uVar6 & 0x800) != 0)) {
      unaff_s5 = 0;
    }
  }
  goto LAB_80039638;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// param 4 is 5 on bootup
// param 5 is 10

undefined4
draw_load_screen(uint offset,uint sector_count,astruct_12 *buf,short param_4,short param_5)

{
  bool bVar1;
  uint uVar2;
  u_long uVar3;
  short sVar4;
  DISPENV DStack_40;
  
  VLC_BUFFER = buf;
                    // initially the BLB header is loaded
                    // afterwards it loads the blob at 0x6000
  uVar2 = load_game_blb_asset(offset & 0xffff,sector_count & 0xffff,buf + 0x19c);
  if ((uVar2 & 0xff) != 0) {
    prepare_image_struct(256,false,0);
    VSync(0);
    SetDefDispEnv(&DStack_40,0,0x100,0x140,0x100);
    DStack_40.screen.x = 0;
    DStack_40.screen.y = 0;
    DStack_40.screen.w = 0;
    DStack_40.screen.h = 240;
    DStack_40.isrgb24 = '\0';
    PutDispEnv(&DStack_40);
    SetDispMask(1);
                    // initialise image subsystems
    DecDCTReset(0);
                    // call back at end of MDEC transmission
    DecDCToutCallback((func *)&LAB_80039e24);
    DecDCTvlcBuild(&VLC_BUFFER->vlc_table);
    output_run_level_ = (uint)(output_run_level_ == 0);
    DecDCTvlc2((u_long *)(VLC_BUFFER + 0x19c),(u_long *)(&DCT_LOAD_BUF)[output_run_level_],
               &VLC_BUFFER->vlc_table);
    DecDCTin((u_long *)(&DCT_LOAD_BUF)[output_run_level_],2);
    DecDCTout((u_long *)(&IMAGE_BUFFER_START)[IMAGE_SIZE_OFFSET],((int)bit_depth * (int)height) / 2)
    ;
    FUN_8003a194();
    VSync(0);
    SetDefDispEnv(&DStack_40,0,(uint)(_buffer_counter_ == 0) << 8,320,256);
    DStack_40.screen.x = 0;
    DStack_40.screen.y = 0;
    DStack_40.screen.w = 0;
    DStack_40.screen.h = 240;
    DStack_40.isrgb24 = '\0';
    PutDispEnv(&DStack_40);
    SetDispMask(1);
    DecDCToutCallback((func *)0x0);
    param_4 = param_4 * 60;
    sVar4 = param_5 * 60;
    if (sVar4 == 0) {
      return 1;
    }
    while (bVar1 = param_4 != 0, param_4 = param_4 + -1, bVar1) {
      sVar4 = sVar4 + -1;
      VSync(0);
    }
    while (sVar4 != 0) {
                    // perhaps to skip movie?
      uVar3 = PadRead(1);
      if (param_5 == 99) {
        if ((uVar3 & 0x10) != 0) {
          return 0;
        }
        if ((uVar3 & 0x800) != 0) {
          return 1;
        }
      }
      else {
        if ((uVar3 & 0xffff) != 0) {
          return 1;
        }
        sVar4 = sVar4 + -1;
      }
      VSync(0);
    }
  }
  return 1;
}



void FUN_80039c18(int param_1)

{
  DISPENV DStack_20;
  
  FUN_8003a2a0();
  SetDefDispEnv(&DStack_20,0,(uint)(param_1 == 0) << 8,0x1e0,0x100);
  DStack_20.screen.x = 0;
  DStack_20.screen.y = 0;
  DStack_20.screen.w = 0;
  DStack_20.screen.h = 0xf0;
  DStack_20.isrgb24 = '\x01';
  DStack_20.disp.w =
       (short)((ulonglong)((longlong)((int)DStack_20.disp.w << 1) * 0x55555556) >> 0x20) -
       (short)(((int)DStack_20.disp.w << 1) >> 0x1f);
  PutDispEnv(&DStack_20);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void prepare_image_struct(undefined2 image_size,bool full_colour_mode,uint param_3)

{
  output_run_level_ = 0;
  IMAGE_SIZE_OFFSET = 0;
  DAT_8009b528 = 0;
  DAT_8009b52a = 0;
  DAT_800a5a84 = VLC_BUFFER + 400;
  DCT_LOAD_BUF = VLC_BUFFER + 0x44;
  DAT_800a5a90 = VLC_BUFFER + 0xe4;
  IMAGE_BUFFER_START = VLC_BUFFER + 0x184;
  DAT_8009b52c = uVar1;
  if (!full_colour_mode) {
    DAT_8009b52c = 320;
  }
  DAT_8009b52e = image_size;
  DAT_8009b530 = 0;
  DAT_8009b532 = image_size;
  DAT_8009b534 = uVar3;
  if (!full_colour_mode) {
    DAT_8009b534 = 320;
  }
  DAT_8009b536 = image_size;
  _buffer_counter_ = param_3 & 0xff;
  DAT_800a5a98 = 0;
  IMAGE_SIZE_OR_HEIGHT_ = image_size;
  if ((param_3 & 0xff) == 0) {
    IMAGE_SIZE_OR_HEIGHT_ = 0;
  }
  bit_depth = uVar5;
  if (!full_colour_mode) {
    bit_depth = 16;
  }
  height = image_size;
  DAT_800a5a77 = 0;
  return;
}



void FUN_80039da4(undefined4 param_1,func *param_2)

{
  DecDCTReset(0);
  DecDCToutCallback(param_2);
  StSetRing((u_long *)(VLC_BUFFER + 0x19c),0x100);
  StSetStream(1,1,0xffffffff,(func1 *)0x0,(func2 *)&LAB_80039f64);
  FUN_8003a22c(param_1);
  return;
}



undefined4 FUN_80039f6c(void)

{
  u_long *bs;
  int iVar1;
  
  iVar1 = 2000;
  do {
    bs = (u_long *)setup_movie_headers();
    iVar1 = iVar1 + -1;
    if (bs != (u_long *)0x0) {
      output_run_level_ = (uint)(output_run_level_ == 0);
      DecDCTvlc2(bs,(u_long *)(&DCT_LOAD_BUF)[output_run_level_],&VLC_BUFFER->vlc_table);
      StFreeRing(bs);
      return 0;
    }
  } while (iVar1 != 0);
  return 0xffffffff;
}



undefined4 setup_movie_headers(void)

{
  u_long uVar1;
  int iVar2;
  u_long *local_18;
  u_long *local_14;
  RECT local_10;
  
  iVar2 = 2000;
  do {
    uVar1 = StGetNext(&local_18,&local_14);
    iVar2 = iVar2 + -1;
    if (uVar1 == 0) {
      if ((uint)DAT_800a5a74 <= local_14[2]) {
        DAT_800a5a76 = 1;
      }
      if ((DAT_800a5a6c != *(ushort *)(local_14 + 4)) ||
         (DAT_800a5a70 != *(ushort *)((int)local_14 + 0x12))) {
        local_10.w = 0x1e0;
        local_10.x = 0;
        local_10.y = 0;
        local_10.h = 0x200;
        ClearImage(&local_10,'\0','\0','\0');
        DAT_800a5a6c = (uint)*(ushort *)(local_14 + 4);
        DAT_800a5a70 = (uint)*(ushort *)((int)local_14 + 0x12);
      }
      height = (undefined2)DAT_800a5a70;
      DAT_8009b52c = (undefined2)(DAT_800a5a6c * 3 - ((int)(DAT_800a5a6c * 3) >> 0x1f) >> 1);
      DAT_8009b52e = (undefined2)DAT_800a5a70;
      DAT_8009b534 = DAT_8009b52c;
      DAT_8009b536 = (undefined2)DAT_800a5a70;
      return local_18;
    }
  } while (iVar2 != 0);
  return 0;
}



bool FUN_8003a104(uint param_1)

{
  bool bVar1;
  
  bVar1 = param_1 < *(byte *)&VLC_BUFFER[0x19c].vlc_table;
  if (bVar1) {
    output_run_level_ = (uint)(output_run_level_ == 0);
    DecDCTvlc2((u_long *)
               ((int)&VLC_BUFFER[0x19c].vlc_table +
               *(int *)(&VLC_BUFFER[0x19c].field_0xc + param_1 * 0xc)),
               (u_long *)(&DCT_LOAD_BUF)[output_run_level_],&VLC_BUFFER->vlc_table);
  }
  return bVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_8003a194(void)

{
  int local_8;
  
  local_8 = 0x800000;
  if (DAT_800a5a77 == '\0') {
    do {
      local_8 = local_8 + -1;
      if (local_8 == 0) {
        _buffer_counter_ = (uint)(_buffer_counter_ == 0);
        DAT_800a5a98 = (&DAT_8009b528)[_buffer_counter_ * 4];
        IMAGE_SIZE_OR_HEIGHT_ = (&DAT_8009b52a)[_buffer_counter_ * 4];
        DAT_800a5a77 = '\x01';
      }
    } while (DAT_800a5a77 == '\0');
  }
  DAT_800a5a77 = 0;
  return;
}



void FUN_8003a22c(u_char *param_1)

{
  int iVar1;
  u_char local_10 [8];
  
  local_10[0] = 0x80;
  do {
    do {
      iVar1 = CdControl('\x02',param_1,(u_char *)0x0);
    } while (iVar1 == 0);
    do {
      iVar1 = CdControl('\x0e',local_10,(u_char *)0x0);
    } while (iVar1 == 0);
    VSync(3);
    iVar1 = CdRead2(0x1e0);
  } while (iVar1 == 0);
  return;
}



void FUN_8003a2a0(void)

{
  DISPENV DStack_30;
  RECT local_18;
  
  VSync(0);
  SetDefDispEnv(&DStack_30,0,0,0x140,0x100);
  DStack_30.isrgb24 = '\0';
  DStack_30.screen.x = 0;
  DStack_30.screen.y = 0;
  DStack_30.screen.w = 0;
  DStack_30.screen.h = 0xf0;
  PutDispEnv(&DStack_30);
  local_18.x = 0;
  local_18.y = 0;
  local_18.w = 0x1e0;
  local_18.h = 0x100;
  ClearImage(&local_18,'\0','\0','\0');
  local_18.y = 0x100;
  ClearImage(&local_18,'\0','\0','\0');
  return;
}



int FUN_8003a794(int param_1,undefined param_2,short param_3,uint param_4)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  short in_t0;
  code *pcVar4;
  short unaff_s2;
  
  iVar3 = (int)*(short *)(param_1 + 0x2e);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar1 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      in_t0 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar4 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar3 << 0x10) {
      iVar1 = in_t0 + iVar1;
    }
    param_4 = (*pcVar4)(param_1 + iVar1,(int)(short)param_4);
  }
  iVar3 = (int)*(short *)(param_1 + 0x26);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar1 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      unaff_s2 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar4 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar3 << 0x10) {
      iVar1 = unaff_s2 + iVar1;
    }
    param_3 = (*pcVar4)(param_1 + iVar1,(int)param_3);
  }
  uVar2 = FUN_80081c68(BUF_PTR,param_2,(int)param_3);
  iVar3 = *(int *)(param_1 + 0x5c);
  iVar1 = ((param_4 | 0xf) - (uVar2 & 0xff)) * 0x10000;
  uVar2 = iVar1 / iVar3;
  if (iVar3 == 0) {
    trap(0x1c00);
  }
  if ((iVar3 == -1) && (iVar1 == -0x80000000)) {
    trap(0x1800);
  }
  iVar3 = uVar2 << 0x10;
  if ((*(int *)(param_1 + 0x58) == 0xc000) && (iVar3 = uVar2 << 0x10, (uVar2 & 3) - 1 < 2)) {
    iVar3 = (uVar2 + 1) * 0x10000;
  }
  return iVar3 >> 0x10;
}



void FUN_8003a974(int param_1,undefined4 param_2,short param_3)

{
  char cVar1;
  short sVar2;
  short sVar3;
  int iVar4;
  int iVar5;
  code *pcVar6;
  short unaff_s2;
  undefined local_38 [4];
  undefined auStack_34 [4];
  undefined local_30;
  undefined local_2f;
  undefined local_2e [22];
  
  iVar5 = (int)*(short *)(param_1 + 0x26);
  sVar2 = *(short *)(param_1 + 0x68);
  if (iVar5 != 0) {
    if (iVar5 < 1) {
      pcVar6 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar4 = iVar5 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      param_3 = (short)*(undefined4 *)(iVar4 + -8);
      pcVar6 = *(code **)(iVar4 + -4);
    }
    iVar4 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar5 << 0x10) {
      iVar4 = param_3 + iVar4;
    }
    sVar2 = (*pcVar6)(param_1 + iVar4,(int)sVar2);
  }
  iVar5 = (int)*(short *)(param_1 + 0x2e);
  sVar3 = *(short *)(param_1 + 0x6a);
  if (iVar5 != 0) {
    if (iVar5 < 1) {
      pcVar6 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar4 = iVar5 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      unaff_s2 = (short)*(undefined4 *)(iVar4 + -8);
      pcVar6 = *(code **)(iVar4 + -4);
    }
    iVar4 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar5 << 0x10) {
      iVar4 = unaff_s2 + iVar4;
    }
    sVar3 = (*pcVar6)(param_1 + iVar4,(int)sVar3);
  }
  cVar1 = FUN_800245b8(BUF_PTR,(int)sVar2,(int)sVar3,local_38,auStack_34);
  if ((cVar1 != '\0') &&
     (cVar1 = FUN_8007eec8(BUF_PTR,local_38[0],&local_30,&local_2f,local_2e), cVar1 != '\0')) {
    iVar5 = *(int *)(param_1 + 0x34);
    *(undefined *)(iVar5 + 0x34) = local_30;
    *(undefined *)(iVar5 + 0x35) = local_2f;
    *(undefined *)(iVar5 + 0x36) = local_2e[0];
  }
  return;
}



undefined4 * FUN_80044f3c(undefined4 *param_1,short param_2,short param_3,int param_4)

{
  bool bVar1;
  bool bVar2;
  char cVar3;
  short sVar4;
  short sVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  short unaff_s2;
  code *pcVar9;
  short unaff_s4;
  int local_38;
  undefined auStack_34 [20];
  
  FUN_8001c864(param_1,&DAT_8009b70c,0x3ca,(int)param_2,(int)param_3);
  param_1[6] = &DAT_80011088;
  *(undefined2 *)(param_1 + 4) = 900;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_800452d4;
  if (param_4 == 0) {
    FUN_8001c360(param_1);
  }
  else if (param_4 != 0x10000) {
    param_1[0x14] = param_4;
    param_1[0x15] = param_4;
    param_1[0x16] = param_4;
    param_1[0x17] = param_4;
    param_1[9] = 0xffff0000;
    param_1[10] = &LAB_8001a268;
    param_1[0xb] = 0xffff0000;
    param_1[0xc] = &LAB_8001a298;
    iVar6 = param_1[0x16];
    if (iVar6 == 0) {
      trap(0x1c00);
    }
    if ((iVar6 == -1) && ((int)*(short *)(param_1 + 0x1a) << 0x10 == -0x80000000)) {
      trap(0x1800);
    }
    iVar8 = param_1[0x17];
    iVar7 = (int)*(short *)((int)param_1 + 0x6a) << 0x10;
    if (iVar8 == 0) {
      trap(0x1c00);
    }
    if ((iVar8 == -1) && (iVar7 == -0x80000000)) {
      trap(0x1800);
    }
    *(short *)(param_1 + 0x1a) = (short)(((int)*(short *)(param_1 + 0x1a) << 0x10) / iVar6);
    *(short *)((int)param_1 + 0x6a) = (short)(iVar7 / iVar8);
  }
  bVar2 = false;
  iVar6 = (int)*(short *)((int)param_1 + 0x26);
  sVar4 = *(short *)(param_1 + 0x1a);
  bVar1 = false;
  param_1[0x41] = param_1[0x14];
  if (iVar6 != 0) {
    if (iVar6 < 1) {
      pcVar9 = (code *)param_1[10];
    }
    else {
      iVar7 = iVar6 * 8 + *(int *)((int)param_1 + (int)*(short *)(param_1 + 10));
      unaff_s2 = (short)*(undefined4 *)(iVar7 + -8);
      pcVar9 = *(code **)(iVar7 + -4);
    }
    iVar7 = (int)*(short *)(param_1 + 9);
    if (0 < iVar6 << 0x10) {
      iVar7 = unaff_s2 + iVar7;
    }
    sVar4 = (*pcVar9)((int)param_1 + iVar7,(int)sVar4);
  }
  iVar6 = (int)*(short *)((int)param_1 + 0x2e);
  sVar5 = *(short *)((int)param_1 + 0x6a);
  if (iVar6 != 0) {
    if (iVar6 < 1) {
      pcVar9 = (code *)param_1[0xc];
    }
    else {
      iVar7 = iVar6 * 8 + *(int *)((int)param_1 + (int)*(short *)(param_1 + 0xc));
      unaff_s4 = (short)*(undefined4 *)(iVar7 + -8);
      pcVar9 = *(code **)(iVar7 + -4);
    }
    iVar7 = (int)*(short *)(param_1 + 0xb);
    if (0 < iVar6 << 0x10) {
      iVar7 = unaff_s4 + iVar7;
    }
    sVar5 = (*pcVar9)((int)param_1 + iVar7,(int)sVar5);
  }
  cVar3 = FUN_800245b8(BUF_PTR,(int)sVar4,(int)sVar5,&local_38,auStack_34);
  if (cVar3 != '\0') {
    if (local_38 == 0x2c) {
      bVar2 = true;
    }
    else if (local_38 == 0x2e) {
      bVar1 = true;
    }
  }
  if (*(char *)(BUF_PTR + 0x19c) != '\0') {
    bVar2 = true;
  }
  param_1[0x42] = 0;
  if (bVar1) {
    iVar6 = param_1[0xd];
    *(undefined *)(iVar6 + 0x34) = 0x74;
    *(undefined *)(iVar6 + 0x35) = 0x24;
    *(undefined *)(iVar6 + 0x36) = 0x38;
  }
  else if (bVar2) {
    iVar6 = param_1[0xd];
    *(undefined *)(iVar6 + 0x34) = 0x38;
    *(undefined *)(iVar6 + 0x35) = 0x38;
    *(undefined *)(iVar6 + 0x36) = 0x60;
  }
  *(undefined *)(param_1 + 0x40) = 0x5a;
  return param_1;
}



undefined4 *
FUN_8004f4e0(undefined4 *param_1,short param_2,short param_3,undefined param_4,int param_5,
            undefined4 param_6)

{
  u_short uVar1;
  int iVar2;
  int iVar3;
  short unaff_s4;
  code *pcVar4;
  
  FUN_8001c71c(param_1,param_6,0x406,(int)param_2,(int)param_3,0);
  param_1[6] = &DAT_800115c8;
  *(undefined2 *)(param_1 + 4) = 100;
  param_1[7] = 0xffff0000;
  param_1[8] = &LAB_8004f86c;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8004f6c4;
  FUN_8001aab0(param_1,param_4);
  if (param_5 != 0x10000) {
    param_1[0x14] = param_5;
    param_1[0x15] = param_5;
    param_1[0x16] = param_5;
    param_1[0x17] = param_5;
    param_1[9] = 0xffff0000;
    param_1[10] = &LAB_8001a268;
    param_1[0xb] = 0xffff0000;
    param_1[0xc] = &LAB_8001a298;
  }
  iVar3 = param_1[0xd];
  uVar1 = GetTPage((uint)*(byte *)(iVar3 + 0x32),1,(int)*(short *)(iVar3 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar3 + 0x12) & 0xffffff00);
  *(u_short *)(iVar3 + 0x24) = uVar1;
  iVar3 = (int)*(short *)((int)param_1 + 2);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = (code *)param_1[1];
    }
    else {
      iVar2 = iVar3 * 8 + *(int *)((int)param_1 + (int)*(short *)(param_1 + 1));
      unaff_s4 = (short)*(undefined4 *)(iVar2 + -8);
      pcVar4 = *(code **)(iVar2 + -4);
    }
    iVar2 = (int)*(short *)param_1;
    if (0 < iVar3 << 0x10) {
      iVar2 = unaff_s4 + iVar2;
    }
    (*pcVar4)((int)param_1 + iVar2);
  }
  return param_1;
}



undefined4 * FUN_8004f89c(undefined4 *param_1,short param_2,short param_3,char param_4,int param_5)

{
  undefined4 uVar1;
  undefined *puVar2;
  undefined uVar3;
  int iVar4;
  int iVar5;
  short unaff_s2;
  code *pcVar6;
  
  FUN_8001c864(param_1,&DAT_8009bc3c,0x4b0,(int)param_2,(int)param_3);
  param_1[6] = &DAT_800115a8;
  *(undefined2 *)(param_1 + 4) = 300;
  *(char *)(param_1 + 0x1d) = param_4;
  param_1[7] = 0xffff0000;
  param_1[8] = &LAB_8004fd78;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8004fb18;
  param_1[2] = 0xffff0000;
  param_1[3] = &LAB_8004fcfc;
  if (param_5 != 0x10000) {
    param_1[0x14] = param_5;
    param_1[0x15] = param_5;
    param_1[0x16] = param_5;
    param_1[0x17] = param_5;
    param_1[9] = 0xffff0000;
    param_1[10] = &LAB_8001a268;
    param_1[0xb] = 0xffff0000;
    param_1[0xc] = &LAB_8001a298;
  }
  param_1[0x42] = 0;
  *(undefined2 *)(param_1 + 0x1b) = 0;
  *(undefined2 *)((int)param_1 + 0x6e) = 0;
  if (param_4 == '\0') {
    uVar3 = 0x20;
  }
  else {
    uVar3 = 0x60;
  }
  *(undefined *)((int)param_1 + 0x102) = uVar3;
  *(undefined2 *)(param_1 + 0x41) = 4;
  puVar2 = PTR_LAB_800a5cd8;
  uVar1 = DAT_800a5cd4;
  *(undefined *)(param_1 + 0x40) = 2;
  *(undefined *)((int)param_1 + 0x101) = 10;
  FUN_8001eaa8(param_1,uVar1,puVar2);
  iVar5 = (int)*(short *)((int)param_1 + 2);
  if (iVar5 != 0) {
    if (iVar5 < 1) {
      pcVar6 = (code *)param_1[1];
    }
    else {
      iVar4 = iVar5 * 8 + *(int *)((int)param_1 + (int)*(short *)(param_1 + 1));
      unaff_s2 = (short)*(undefined4 *)(iVar4 + -8);
      pcVar6 = *(code **)(iVar4 + -4);
    }
    iVar4 = (int)*(short *)param_1;
    if (0 < iVar5 << 0x10) {
      iVar4 = unaff_s2 + iVar4;
    }
    (*pcVar6)((int)param_1 + iVar4);
  }
  return param_1;
}



void FUN_8005028c(int param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  short unaff_s4;
  code *pcVar5;
  int iVar6;
  int iVar7;
  short local_30;
  short local_2e;
  short local_2c;
  short local_2a;
  
  iVar3 = BUF_PTR;
  iVar4 = 10000;
  *(undefined4 *)(param_1 + 0x108) = 0;
  for (piVar2 = *(int **)(iVar3 + 0x24); piVar2 != (int *)0x0; piVar2 = (int *)*piVar2) {
    iVar3 = piVar2[1];
    if ((*(ushort *)(iVar3 + 0x12) & 4) != 0) {
      FUN_8001a444(iVar3,&local_30);
      iVar1 = *(int *)(param_1 + 0x58);
      iVar6 = ((int)local_30 << 0x10) / iVar1;
      if (iVar1 == 0) {
        trap(0x1c00);
      }
      if ((iVar1 == -1) && ((int)local_30 << 0x10 == -0x80000000)) {
        trap(0x1800);
      }
      local_30 = (short)iVar6;
      iVar1 = *(int *)(param_1 + 0x58);
      if (iVar1 == 0) {
        trap(0x1c00);
      }
      if ((iVar1 == -1) && ((int)local_2c << 0x10 == -0x80000000)) {
        trap(0x1800);
      }
      local_2c = (short)(((int)local_2c << 0x10) / iVar1);
      iVar1 = *(int *)(param_1 + 0x5c);
      iVar7 = ((int)local_2e << 0x10) / iVar1;
      if (iVar1 == 0) {
        trap(0x1c00);
      }
      if ((iVar1 == -1) && ((int)local_2e << 0x10 == -0x80000000)) {
        trap(0x1800);
      }
      local_2e = (short)iVar7;
      iVar1 = *(int *)(param_1 + 0x5c);
      if (iVar1 == 0) {
        trap(0x1c00);
      }
      if ((iVar1 == -1) && ((int)local_2a << 0x10 == -0x80000000)) {
        trap(0x1800);
      }
      local_2a = (short)(((int)local_2a << 0x10) / iVar1);
      iVar1 = (int)(((iVar6 + ((int)local_2c - (int)local_30 >> 1)) -
                    (uint)*(ushort *)(param_1 + 0x68)) * 0x10000) >> 0x10;
      iVar6 = (int)(((iVar7 + ((int)local_2a - (int)local_2e >> 1)) -
                    (uint)*(ushort *)(param_1 + 0x6a)) * 0x10000) >> 0x10;
      iVar1 = csqrt((iVar1 * iVar1 + iVar6 * iVar6) * 0x1000);
      iVar1 = (iVar1 << 4) >> 0x10;
      if ((*(int *)(param_1 + 0x108) == 0) || (iVar1 < (short)iVar4)) {
        *(int *)(param_1 + 0x108) = iVar3;
        iVar4 = iVar1;
      }
    }
  }
  iVar3 = *(int *)(param_1 + 0x108);
  if (iVar3 != 0) {
    iVar4 = (int)*(short *)(iVar3 + 10);
    if (iVar4 == 0) {
      iVar3 = 0;
    }
    else {
      if (iVar4 < 1) {
        pcVar5 = *(code **)(iVar3 + 0xc);
      }
      else {
        iVar1 = iVar4 * 8 + *(int *)(iVar3 + *(short *)(iVar3 + 0xc));
        unaff_s4 = (short)*(undefined4 *)(iVar1 + -8);
        pcVar5 = *(code **)(iVar1 + -4);
      }
      iVar1 = (int)*(short *)(iVar3 + 8);
      if (0 < iVar4 << 0x10) {
        iVar1 = unaff_s4 + iVar1;
      }
      iVar3 = (*pcVar5)(iVar3 + iVar1,0x1008,0,param_1);
    }
    if (iVar3 == 0) {
      *(undefined4 *)(param_1 + 0x108) = 0;
    }
  }
  return;
}



void FUN_80053228(undefined4 *param_1,short param_2,short param_3,undefined param_4)

{
  FUN_8001c71c(param_1,0xb01c25f0,9000,(int)param_2,(int)param_3,0);
  param_1[6] = &DAT_800114a8;
  FUN_8001aab0(param_1,param_4);
  param_1[7] = 0xffff0000;
  param_1[8] = &LAB_80053624;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8005330c;
  *(undefined2 *)((int)param_1 + 0x106) = 0;
  *(undefined *)(param_1 + 0x41) = 0;
  *(undefined *)((int)param_1 + 0xf6) = 0;
  *(undefined2 *)(param_1 + 0x40) = *(undefined2 *)(param_1 + 0x1a);
  *(undefined2 *)((int)param_1 + 0x102) = *(undefined2 *)((int)param_1 + 0x6a);
  *(undefined *)(param_1[0xd] + 0x37) = 0;
  return;
}



undefined4 * FUN_800549b0(undefined4 *param_1,short param_2,short param_3)

{
  FUN_8001c71c(param_1,0xc34aa22,0x3cc,(int)param_2,(int)param_3,0);
  param_1[6] = &DAT_800113e8;
  *(undefined2 *)(param_1 + 4) = 0x44c;
  param_1[0x40] = 0xfff80000;
  param_1[7] = 0xffff0000;
  param_1[8] = &LAB_80054c00;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80054a68;
  return param_1;
}



void FUN_80059664(undefined4 *param_1,undefined4 param_2,short param_3,short param_4,char param_5)

{
  undefined uVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  short sVar6;
  undefined *puVar7;
  uint uVar8;
  
  FUN_8001c864(param_1,&DAT_8009c1d0,1000,(int)param_3,(int)param_4);
  param_1[6] = &DAT_80011804;
  *(undefined2 *)(param_1 + 4) = 1000;
  param_1[0x40] = param_2;
  param_1[0x5d] = 0xffffffff;
  param_1[7] = 0xffff0000;
  param_1[8] = &LAB_80061140;
  *param_1 = 0xffff0000;
  param_1[1] = FUN_8005b3d4;
  param_1[9] = 0xffff0000;
  param_1[10] = &LAB_8001a268;
  param_1[0xb] = 0xffff0000;
  param_1[0xc] = &LAB_8001a298;
  uVar2 = 0x8000;
  if (PTR_DAT_800a59d8[0x18] == '\0') {
    uVar2 = *(undefined4 *)(BUF_PTR + 0x11c);
  }
  param_1[0x16] = uVar2;
  iVar3 = param_1[0x16];
  if (iVar3 == 0) {
    trap(0x1c00);
  }
  if ((iVar3 == -1) && ((int)*(short *)(param_1 + 0x1a) << 0x10 == -0x80000000)) {
    trap(0x1800);
  }
  param_1[0x17] = param_1[0x16];
  iVar5 = param_1[0x17];
  iVar4 = (int)*(short *)((int)param_1 + 0x6a) << 0x10;
  uVar8 = iVar4 / iVar5;
  if (iVar5 == 0) {
    trap(0x1c00);
  }
  if ((iVar5 == -1) && (iVar4 == -0x80000000)) {
    trap(0x1800);
  }
  param_1[0x15] = param_1[0x16];
  param_1[0x14] = param_1[0x16];
  *(short *)(param_1 + 0x1a) = (short)(((int)*(short *)(param_1 + 0x1a) << 0x10) / iVar3);
  sVar6 = (short)uVar8;
  *(short *)((int)param_1 + 0x6a) = sVar6;
  if ((param_1[0x16] == 0xc000) && ((uVar8 & 3) - 1 < 2)) {
    *(short *)((int)param_1 + 0x6a) = sVar6 + 1;
  }
  FUN_80059a30(param_1);
  *(undefined *)((int)param_1 + 0x1b3) = 0xff;
  *(undefined *)((int)param_1 + 0x1ae) = 0;
  *(undefined *)((int)param_1 + 0x1af) = 0;
  *(undefined *)(param_1 + 0x6c) = 0;
  *(undefined *)((int)param_1 + 0x1b1) = 0;
  *(undefined *)(param_1 + 0x5e) = 0;
  *(undefined *)((int)param_1 + 0x1b2) = 0;
  *(undefined *)(param_1 + 0x4a) = 0;
  *(undefined *)(param_1 + 0x4f) = 0;
  *(undefined *)(param_1 + 0x4d) = 0;
  *(undefined *)((int)param_1 + 0x135) = 0;
  iVar3 = BUF_PTR;
  *(undefined2 *)((int)param_1 + 0x1a6) = 0;
  *(undefined2 *)(param_1 + 0x6a) = 0;
  param_1[0x43] = 0;
  param_1[0x44] = 0;
  param_1[0x45] = 0;
  param_1[0x46] = 0;
  *(undefined2 *)(param_1 + 0x58) = 0;
  *(undefined2 *)((int)param_1 + 0x162) = 0;
  param_1[0x4b] = 0;
  *(undefined2 *)((int)param_1 + 0x136) = 0;
  param_1[0x2d] = 0;
  param_1[0x2e] = 0;
  *(undefined *)((int)param_1 + 0x15d) = *(undefined *)(iVar3 + 0x124);
  *(undefined *)((int)param_1 + 0x15e) = *(undefined *)(BUF_PTR + 0x125);
  uVar1 = *(undefined *)(BUF_PTR + 0x126);
  *(undefined *)((int)param_1 + 0x17d) = 0;
  *(undefined *)((int)param_1 + 0x15f) = uVar1;
  param_1[0x50] = 0;
  *(undefined *)((int)param_1 + 0x159) = 0;
  *(undefined *)(param_1 + 0x59) = 0;
  iVar3 = BUF_PTR;
  *(undefined2 *)(param_1 + 0x51) = 0;
  param_1[0x53] = 0;
  *(undefined2 *)((int)param_1 + 0x156) = 0;
  if (*(char *)(iVar3 + 0x161) == '\0') {
    uVar2 = DAT_800a5d8c;
    puVar7 = PTR_LAB_800a5d90;
    if (param_5 != '\0') {
      uVar2 = DAT_800a5d84;
      puVar7 = PTR_LAB_800a5d88;
    }
  }
  else {
    uVar1 = *(undefined *)(iVar3 + 0x198);
    *(undefined *)((int)param_1 + 0x1b3) = uVar1;
    FUN_8007c32c(uVar1);
    puVar7 = PTR_LAB_800a5d80;
    uVar2 = DAT_800a5d7c;
    iVar3 = BUF_PTR;
    *(undefined *)((int)param_1 + 0x15d) = *(undefined *)(BUF_PTR + 0x199);
    *(undefined *)((int)param_1 + 0x15e) = *(undefined *)(iVar3 + 0x19a);
    *(undefined *)((int)param_1 + 0x15f) = *(undefined *)(iVar3 + 0x19b);
  }
  FUN_8001eaa8(param_1,uVar2,puVar7);
  puVar7 = PTR_DAT_800a59d8;
  param_1[0x5a] = 0;
  if ((puVar7[0x17] & 1) != 0) {
    uVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x30,1,0);
    uVar2 = FUN_8006de58(uVar2,param_1);
    iVar3 = BUF_PTR;
    param_1[0x5a] = uVar2;
    FUN_80020f64(iVar3);
    FUN_80021078(BUF_PTR,*(undefined4 *)(param_1[0x5a] + 0x24));
  }
  param_1[0x5b] = 0;
  *(undefined *)(param_1 + 0x5c) = 0;
  param_1[0x68] = 0;
  return;
}



void FUN_80059a30(int param_1)

{
  undefined *puVar1;
  bool bVar2;
  uint uVar3;
  uint uVar4;
  undefined4 *puVar5;
  short sVar6;
  undefined auStack_38 [12];
  uint uStack_2c;
  undefined local_20 [8];
  undefined auStack_18 [8];
  
  puVar5 = &DAT_8009c404;
  *(undefined *)(param_1 + 0x19d) = 0xff;
  *(undefined *)(param_1 + 0x19c) = 0;
  for (sVar6 = 0; sVar6 < 7; sVar6 = sVar6 + 1) {
    FUN_8007bbac(auStack_38,*puVar5);
    puVar1 = local_20 + 3;
    uVar3 = (uint)puVar1 & 3;
    *(uint *)(puVar1 + -uVar3) =
         *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | uStack_2c >> (3 - uVar3) * 8;
    local_20._0_4_ = uStack_2c;
    uVar3 = local_20._0_4_;
    local_20._0_2_ = (undefined2)uStack_2c;
    bVar2 = false;
    if (local_20._0_2_ != 0) {
      puVar1 = auStack_18 + 3;
      uVar4 = (uint)puVar1 & 3;
      *(uint *)(puVar1 + -uVar4) =
           *(uint *)(puVar1 + -uVar4) & -1 << (uVar4 + 1) * 8 | uStack_2c >> (3 - uVar4) * 8;
      auStack_18._0_4_ = uStack_2c;
      auStack_18._2_2_ = (undefined2)(uStack_2c >> 0x10);
      bVar2 = auStack_18._2_2_ != 0;
      auStack_18._0_4_ = uVar3;
    }
    if (bVar2) {
      *(undefined4 *)((uint)*(byte *)(param_1 + 0x19c) * 4 + param_1 + 0x180) = *puVar5;
      *(char *)(param_1 + 0x19c) = *(char *)(param_1 + 0x19c) + '\x01';
    }
    puVar5 = puVar5 + 1;
    local_20._0_4_ = uVar3;
  }
  return;
}



bool FUN_80059b88(int param_1,char param_2)

{
  bool bVar1;
  int iVar2;
  char local_18;
  char local_17;
  char local_16;
  char local_15 [5];
  
  iVar2 = 2;
  if (param_2 != '\0') {
    iVar2 = -2;
  }
  local_18 = FUN_8001fea4(param_1,(int)(((uint)*(ushort *)(param_1 + 0x68) + iVar2) * 0x10000) >>
                                  0x10,(int)((*(ushort *)(param_1 + 0x6a) - 0xf) * 0x10000) >> 0x10)
  ;
  local_17 = FUN_8001fea4(param_1,(int)(((uint)*(ushort *)(param_1 + 0x68) + iVar2) * 0x10000) >>
                                  0x10,(int)((*(ushort *)(param_1 + 0x6a) - 0x10) * 0x10000) >> 0x10
                         );
  local_16 = FUN_8001fea4(param_1,(int)(((uint)*(ushort *)(param_1 + 0x68) + iVar2) * 0x10000) >>
                                  0x10,(int)((*(ushort *)(param_1 + 0x6a) - 0x20) * 0x10000) >> 0x10
                         );
  local_15[0] = FUN_8001fea4(param_1,(int)(((uint)*(ushort *)(param_1 + 0x68) + iVar2) * 0x10000) >>
                                     0x10,
                             (int)((*(ushort *)(param_1 + 0x6a) - 0x30) * 0x10000) >> 0x10);
  FUN_8005a584(param_1,&local_18);
  FUN_8005a584(param_1,&local_17);
  FUN_8005a584(param_1,&local_16);
  FUN_8005a584(param_1,local_15);
  bVar1 = false;
  if (((local_18 != 'e') && (bVar1 = false, local_17 != 'e')) && (bVar1 = false, local_16 != 'e')) {
    bVar1 = local_15[0] != 'e';
  }
  return bVar1;
}



int FUN_80059dfc(int param_1,ushort param_2,short param_3)

{
  int iVar1;
  int iVar2;
  code *pcVar3;
  uint uVar4;
  
  iVar2 = (int)*(short *)(param_1 + 0x2e);
  if (iVar2 != 0) {
    if (iVar2 < 1) {
      pcVar3 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar1 = iVar2 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      param_3 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar3 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar2 << 0x10) {
      iVar1 = param_3 + iVar1;
    }
    param_2 = (*pcVar3)(param_1 + iVar1,(int)(short)param_2);
  }
  iVar2 = *(int *)(param_1 + 0x5c);
  uVar4 = (int)((uint)(param_2 & 0xfff0) << 0x10) / iVar2;
  if (iVar2 == 0) {
    trap(0x1c00);
  }
  if ((iVar2 == -1) && ((param_2 & 0xfff0) == 0x8000)) {
    trap(0x1800);
  }
  iVar2 = uVar4 << 0x10;
  if ((*(int *)(param_1 + 0x58) == 0xc000) && (iVar2 = uVar4 << 0x10, (uVar4 & 3) - 1 < 2)) {
    iVar2 = (uVar4 + 1) * 0x10000;
  }
  return iVar2 >> 0x10;
}



int FUN_80059fe8(int param_1,uint param_2,short param_3)

{
  int iVar1;
  int iVar2;
  code *pcVar3;
  uint uVar4;
  
  iVar2 = (int)*(short *)(param_1 + 0x26);
  if (iVar2 != 0) {
    if (iVar2 < 1) {
      pcVar3 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar1 = iVar2 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      param_3 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar3 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar2 << 0x10) {
      iVar1 = param_3 + iVar1;
    }
    param_2 = (*pcVar3)(param_1 + iVar1,(int)(short)param_2);
  }
  iVar1 = *(int *)(param_1 + 0x58);
  iVar2 = ((param_2 & 0xfffffff0) + 0x10) * 0x10000;
  uVar4 = iVar2 / iVar1;
  if (iVar1 == 0) {
    trap(0x1c00);
  }
  if ((iVar1 == -1) && (iVar2 == -0x80000000)) {
    trap(0x1800);
  }
  iVar2 = uVar4 << 0x10;
  if ((iVar1 == 0xc000) && (iVar2 = uVar4 << 0x10, (uVar4 & 3) - 1 < 2)) {
    iVar2 = (uVar4 + 1) * 0x10000;
  }
  return iVar2 >> 0x10;
}



int FUN_8005a1d8(int param_1,undefined param_2,short param_3,uint param_4)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  short in_t0;
  code *pcVar4;
  short unaff_s2;
  
  iVar3 = (int)*(short *)(param_1 + 0x2e);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar1 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      in_t0 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar4 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar3 << 0x10) {
      iVar1 = in_t0 + iVar1;
    }
    param_4 = (*pcVar4)(param_1 + iVar1,(int)(short)param_4);
  }
  iVar3 = (int)*(short *)(param_1 + 0x26);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar1 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      unaff_s2 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar4 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar3 << 0x10) {
      iVar1 = unaff_s2 + iVar1;
    }
    param_3 = (*pcVar4)(param_1 + iVar1,(int)param_3);
  }
  uVar2 = FUN_80081c68(BUF_PTR,param_2,(int)param_3);
  iVar3 = *(int *)(param_1 + 0x5c);
  iVar1 = ((param_4 | 0xf) - (uVar2 & 0xff)) * 0x10000;
  uVar2 = iVar1 / iVar3;
  if (iVar3 == 0) {
    trap(0x1c00);
  }
  if ((iVar3 == -1) && (iVar1 == -0x80000000)) {
    trap(0x1800);
  }
  iVar3 = uVar2 << 0x10;
  if ((*(int *)(param_1 + 0x58) == 0xc000) && (iVar3 = uVar2 << 0x10, (uVar2 & 3) - 1 < 2)) {
    iVar3 = (uVar2 + 1) * 0x10000;
  }
  return iVar3 >> 0x10;
}



bool FUN_8005a3b8(int param_1,undefined param_2,short param_3,uint param_4,ushort param_5)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  short in_t0;
  code *pcVar4;
  short unaff_s2;
  
  iVar3 = (int)*(short *)(param_1 + 0x2e);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar1 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      in_t0 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar4 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar3 << 0x10) {
      iVar1 = in_t0 + iVar1;
    }
    param_4 = (*pcVar4)(param_1 + iVar1,(int)(short)param_4);
  }
  iVar3 = (int)*(short *)(param_1 + 0x26);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar1 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      unaff_s2 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar4 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar3 << 0x10) {
      iVar1 = unaff_s2 + iVar1;
    }
    param_3 = (*pcVar4)(param_1 + iVar1,(int)param_3);
  }
  uVar2 = FUN_80081c68(BUF_PTR,param_2,(int)param_3);
  iVar3 = *(int *)(param_1 + 0x5c);
  iVar1 = ((param_4 | 0xf) - (uVar2 & 0xff)) * 0x10000;
  if (iVar3 == 0) {
    trap(0x1c00);
  }
  if ((iVar3 == -1) && (iVar1 == -0x80000000)) {
    trap(0x1800);
  }
  return ((uint)param_5 - iVar1 / iVar3 & 0xffff) < 10;
}



undefined4 FUN_8005a584(int param_1,char *param_2)

{
  char cVar1;
  undefined4 uVar2;
  
  cVar1 = *param_2;
  if (((((byte)(cVar1 + 0x4bU) < 3) || (cVar1 == -0x37)) || (cVar1 == -0x35)) ||
     (uVar2 = 0, (byte)(cVar1 + 0x23U) < 3)) {
    if (*(char *)(param_1 + 0x128) == '\0') {
      uVar2 = 1;
    }
    else {
      *param_2 = 'e';
      uVar2 = 0;
    }
  }
  return uVar2;
}



void FUN_8005a5f0(int param_1,char param_2)

{
  uint uVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  undefined *puVar4;
  
  if ((param_2 == -0x22) && (uVar1 = FUN_8007b43c(BUF_PTR + 0x84), (uVar1 & 0xffff) >> 0xf != 0)) {
    uVar3 = *(undefined4 *)(param_1 + 0x68);
    uVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
    uVar3 = FUN_80030d08(uVar2,0x2e2414,uVar3,*(undefined *)(param_1 + 0x74),
                         *(undefined4 *)(param_1 + 0x58),0x3e9,0);
    FUN_800213a4(BUF_PTR,uVar3);
  }
  if ((PTR_DAT_800a59d8[0x17] & 1) == 0) {
    uVar3 = DAT_800a5ddc;
    puVar4 = PTR_LAB_800a5de0;
    if (*(short *)(param_1 + 0x144) != 0) {
      uVar3 = DAT_800a5dd4;
      puVar4 = PTR_LAB_800a5dd8;
    }
  }
  else {
    switch(param_2) {
    case -0x4b:
      uVar3 = DAT_800a5d94;
      puVar4 = PTR_LAB_800a5d98;
      break;
    case -0x4a:
      uVar3 = DAT_800a5d9c;
      puVar4 = PTR_LAB_800a5da0;
      break;
    case -0x49:
      uVar3 = DAT_800a5da4;
      puVar4 = PTR_LAB_800a5da8;
      break;
    default:
      goto switchD_8005a6e4_caseD_b8;
    case -0x37:
      uVar3 = DAT_800a5dac;
      puVar4 = PTR_LAB_800a5db0;
      break;
    case -0x35:
      uVar3 = DAT_800a5db4;
      puVar4 = PTR_LAB_800a5db8;
      break;
    case -0x23:
      uVar3 = DAT_800a5dbc;
      puVar4 = PTR_LAB_800a5dc0;
      break;
    case -0x22:
      uVar3 = DAT_800a5dc4;
      puVar4 = PTR_LAB_800a5dc8;
      break;
    case -0x21:
      uVar3 = DAT_800a5dcc;
      puVar4 = PTR_LAB_800a5dd0;
    }
  }
  FUN_8001eaa8(param_1,uVar3,puVar4);
switchD_8005a6e4_caseD_b8:
  return;
}



void FUN_8005a8d4(int param_1,undefined4 param_2,short param_3)

{
  bool bVar1;
  char cVar2;
  short sVar3;
  short sVar4;
  undefined2 uVar5;
  int iVar6;
  undefined4 uVar7;
  uint uVar8;
  int iVar9;
  code *pcVar10;
  short unaff_s2;
  uint local_30;
  undefined local_2c [20];
  
  bVar1 = false;
  if (*(short *)(param_1 + 0xa2) == -1) {
    bVar1 = *(undefined **)(param_1 + 0xa4) == &LAB_80069eb4;
  }
  if (bVar1) {
    return;
  }
  iVar9 = (int)*(short *)(param_1 + 0x26);
  sVar3 = *(short *)(param_1 + 0x68);
  if (iVar9 != 0) {
    if (iVar9 < 1) {
      pcVar10 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar6 = iVar9 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      param_3 = (short)*(undefined4 *)(iVar6 + -8);
      pcVar10 = *(code **)(iVar6 + -4);
    }
    iVar6 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar9 << 0x10) {
      iVar6 = param_3 + iVar6;
    }
    sVar3 = (*pcVar10)(param_1 + iVar6,(int)sVar3);
  }
  iVar9 = (int)*(short *)(param_1 + 0x2e);
  sVar4 = *(short *)(param_1 + 0x6a);
  if (iVar9 != 0) {
    if (iVar9 < 1) {
      pcVar10 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar6 = iVar9 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      unaff_s2 = (short)*(undefined4 *)(iVar6 + -8);
      pcVar10 = *(code **)(iVar6 + -4);
    }
    iVar6 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar9 << 0x10) {
      iVar6 = unaff_s2 + iVar6;
    }
    sVar4 = (*pcVar10)(param_1 + iVar6,(int)sVar4);
  }
  cVar2 = FUN_800245b8(BUF_PTR,(int)sVar3,(int)sVar4,&local_30,local_2c);
  if (cVar2 == '\0') {
    return;
  }
  switch(local_30) {
  case 0:
    *(undefined *)(BUF_PTR + 0x148) = local_2c[0];
    break;
  default:
    uVar8 = local_30 - 0x32 & 0xff;
    if (local_30 - 0x32 < 10) {
      if (PTR_DAT_800a59d8[uVar8 + 6] == '\0') {
        PTR_DAT_800a59d8[uVar8 + 6] = 1;
        FUN_8001c4a0(param_1,0x7003474c);
      }
    }
    else if (*(char *)(param_1 + 0x1ae) == '\0') {
      FUN_8007eec8(BUF_PTR,local_30 & 0xff,param_1 + 0x15d,param_1 + 0x15e,param_1 + 0x15f);
    }
    break;
  case 2:
  case 3:
  case 4:
  case 5:
  case 6:
  case 7:
    if ((local_30 - 2 & 0xff) != (uint)*(byte *)(param_1 + 0x1b3)) {
      FUN_8007c32c();
      *(char *)(param_1 + 0x1b3) = (char)(local_30 - 2);
      if ((((-1 < *(int *)(param_1 + 0x174)) && (*(short *)(param_1 + 0xa2) == -1)) &&
          (*(undefined **)(param_1 + 0xa4) == &LAB_80067de8)) &&
         (*(int *)(param_1 + 0xcc) == 0x92b8480)) {
        uVar7 = FUN_8007c348(0x248e52,0xa0,0);
        FUN_8007c778(*(undefined4 *)(param_1 + 0x174));
        *(undefined4 *)(param_1 + 0x174) = uVar7;
      }
    }
    break;
  case 0x2a:
    bVar1 = false;
    if (((*(short *)(param_1 + 0xa2) == -1) && (*(undefined **)(param_1 + 0xa4) == &LAB_80067894))
       || ((*(short *)(param_1 + 0xa2) == -1 && (*(undefined **)(param_1 + 0xa4) == &LAB_80067de8)))
       ) {
      bVar1 = true;
    }
    if (bVar1) {
      FUN_8001eaa8(param_1,DAT_800a5de4,PTR_LAB_800a5de8);
    }
    break;
  case 0x3d:
    *(undefined2 *)(param_1 + 0x160) = 0xffff;
    break;
  case 0x3e:
    *(undefined2 *)(param_1 + 0x160) = 1;
    break;
  case 0x3f:
    cVar2 = *(char *)(param_1 + 0x170);
    uVar5 = 0xfffe;
    goto LAB_8005ab28;
  case 0x40:
    cVar2 = *(char *)(param_1 + 0x170);
    uVar5 = 2;
LAB_8005ab28:
    *(undefined2 *)(param_1 + 0x160) = uVar5;
    if (cVar2 != '\0') {
      *(undefined2 *)(param_1 + 0x162) = 0xffff;
    }
    break;
  case 0x41:
    *(undefined2 *)(param_1 + 0x162) = 0xfffc;
    break;
  case 0x51:
    FUN_80025660(BUF_PTR,1);
    *(undefined2 *)(param_1 + 0x1a6) = 1;
    break;
  case 0x52:
    FUN_800256b4(BUF_PTR,1);
    *(undefined2 *)(param_1 + 0x1a8) = 1;
    break;
  case 0x65:
    FUN_80025660(BUF_PTR,0);
    *(undefined2 *)(param_1 + 0x1a6) = 0;
    break;
  case 0x66:
    FUN_800256b4(BUF_PTR,0);
    *(undefined2 *)(param_1 + 0x1a8) = 0;
    break;
  case 0x79:
    FUN_80025660(BUF_PTR,2);
    *(undefined2 *)(param_1 + 0x1a6) = 2;
    break;
  case 0x7a:
    FUN_800256b4(BUF_PTR,2);
    *(undefined2 *)(param_1 + 0x1a8) = 2;
  }
  return;
}



void FUN_8005ad14(int param_1)

{
  short sVar1;
  short sVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  short local_10;
  
  local_10 = *(short *)(param_1 + 0x68) + 0x14;
  if (*(char *)(param_1 + 0x74) != '\0') {
    local_10 = *(short *)(param_1 + 0x68) + -0x14;
  }
  sVar1 = *(short *)(param_1 + 0x6a);
  sVar2 = *(short *)(param_1 + 0x136);
  if (*(char *)(param_1 + 0x1b1) == '\0') {
    uVar3 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
    uVar4 = 0xca1b20cb;
  }
  else {
    uVar3 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
    uVar4 = 0x3d348056;
  }
  uVar3 = FUN_8004f4e0(uVar3,(int)local_10,(int)(short)(sVar1 + sVar2),
                       *(undefined *)(param_1 + 0x74),*(undefined4 *)(param_1 + 0x58),uVar4);
  FUN_800213a4(BUF_PTR,uVar3);
  PTR_DAT_800a59d8[0x13] = PTR_DAT_800a59d8[0x13] + -1;
  return;
}



void FUN_8005af8c(int param_1,int param_2,int param_3)

{
  short sVar1;
  int iVar2;
  undefined4 uVar3;
  undefined *puVar4;
  short local_20;
  short local_1e;
  short local_1c;
  undefined auStack_18 [6];
  short local_12;
  
  FUN_8001a444(param_2,&local_20);
  FUN_8001a444(param_1,auStack_18);
  iVar2 = param_3 >> 0x10;
  if (*(int *)(param_1 + 0x58) == 0x8000) {
    iVar2 = (param_3 << 1) >> 0x10;
  }
  if (((((int)local_1e - (iVar2 + -0xd) < (int)local_12) &&
       (sVar1 = *(short *)(param_1 + 0x68), local_20 <= sVar1)) && (sVar1 <= local_1c)) &&
     (*(char *)(param_1 + 0x128) == '\0')) {
    if ((PTR_DAT_800a59d8[0x17] & 1) == 0) {
      uVar3 = DAT_800a5ddc;
      puVar4 = PTR_LAB_800a5de0;
      if (*(short *)(param_1 + 0x144) != 0) {
        uVar3 = DAT_800a5dd4;
        puVar4 = PTR_LAB_800a5dd8;
      }
    }
    else {
      uVar3 = DAT_800a5dac;
      puVar4 = PTR_LAB_800a5db0;
      if (sVar1 < *(short *)(param_2 + 0x68)) {
        uVar3 = DAT_800a5db4;
        puVar4 = PTR_LAB_800a5db8;
      }
    }
    FUN_8001eaa8(param_1,uVar3,puVar4);
  }
  return;
}



void FUN_8005b184(int param_1,undefined4 param_2)

{
  undefined uVar1;
  undefined uVar2;
  undefined4 uVar3;
  int iVar4;
  undefined4 local_20;
  
  local_20 = CONCAT22(*(short *)(param_1 + 0x6a) + (ushort)*(byte *)(param_1 + 0x1a4),
                      *(undefined2 *)(param_1 + 0x68));
  uVar3 = FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  iVar4 = FUN_80030d08(uVar3,param_2,local_20,*(undefined *)(param_1 + 0x74),
                       *(undefined4 *)(param_1 + 0x58),0x3e9,0);
  *(int *)(param_1 + 0x1a0) = iVar4;
  *(int *)(iVar4 + 0x104) = param_1;
  uVar1 = *(undefined *)(param_1 + 0x15b);
  uVar2 = *(undefined *)(param_1 + 0x15c);
  iVar4 = *(int *)(*(int *)(param_1 + 0x1a0) + 0x34);
  *(undefined *)(iVar4 + 0x34) = *(undefined *)(param_1 + 0x15a);
  *(undefined *)(iVar4 + 0x35) = uVar1;
  *(undefined *)(iVar4 + 0x36) = uVar2;
  if (*(short *)(param_1 + 0x144) == 0) {
    *(undefined *)(*(int *)(*(int *)(param_1 + 0x1a0) + 0x34) + 0x38) = 0;
  }
  else {
    *(undefined *)(*(int *)(*(int *)(param_1 + 0x1a0) + 0x34) + 0x38) = 1;
  }
  FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x1a0));
  return;
}



void FUN_8005b294(int param_1,char param_2)

{
  undefined4 uVar1;
  int iVar2;
  u_short uVar3;
  uint uVar4;
  undefined4 uVar5;
  int iVar6;
  int iVar7;
  
  if (param_2 != '\0') {
    FUN_8001c4a0(param_1,0x5860c640);
  }
  uVar4 = FUN_8007b43c(BUF_PTR + 0x84);
  if ((uVar4 >> 0xe & 1) != 0) {
    uVar1 = *(undefined4 *)(param_1 + 0x68);
    uVar5 = FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
    iVar6 = FUN_80030d08(uVar5,0x422a0225,uVar1,*(undefined *)(param_1 + 0x74),
                         *(undefined4 *)(param_1 + 0x58),0x3d4,0);
    iVar7 = *(int *)(iVar6 + 0x34);
    uVar3 = GetTPage((uint)*(byte *)(iVar7 + 0x32),1,(int)*(short *)(iVar7 + 0x10) & 0xffffffc0,
                     (int)*(short *)(iVar7 + 0x12) & 0xffffff00);
    iVar2 = BUF_PTR;
    *(u_short *)(iVar7 + 0x24) = uVar3;
    FUN_800213a4(iVar2,iVar6);
  }
  return;
}



void FUN_8005b390(int param_1)

{
  int iVar1;
  
  iVar1 = rand();
  *(char *)(param_1 + 0x15d) = (char)iVar1;
  iVar1 = rand();
  *(char *)(param_1 + 0x15e) = (char)iVar1;
  iVar1 = rand();
  *(char *)(param_1 + 0x15f) = (char)iVar1;
  *(undefined *)(param_1 + 0x1ae) = 1;
  return;
}


