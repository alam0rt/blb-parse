// Part 1
void FUN_8005b3d4(int param_1)

{
  short sVar1;
  undefined *puVar2;
  int iVar3;
  undefined4 uVar4;
  undefined uVar5;
  undefined uVar6;
  int iVar7;
  undefined uVar8;
  int iVar9;
  int iVar10;
  short unaff_s2;
  code *pcVar11;
  
  if (((DAT_800a59b4 & 1) != 0) && (*(int *)(param_1 + 0xcc) != 0x1e28e0d4)) {
    FUN_8001eaa8(param_1,DAT_800a5dec,PTR_LAB_800a5df0);
  }
  iVar7 = (int)*(short *)(param_1 + 0x106);
  if (iVar7 != 0) {
    if (iVar7 < 1) {
      pcVar11 = *(code **)(param_1 + 0x108);
    }
    else {
      iVar3 = iVar7 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x108));
      unaff_s2 = (short)*(undefined4 *)(iVar3 + -8);
      pcVar11 = *(code **)(iVar3 + -4);
    }
    iVar3 = (int)*(short *)(param_1 + 0x104);
    if (0 < iVar7 << 0x10) {
      iVar3 = unaff_s2 + iVar3;
    }
    (*pcVar11)(param_1 + iVar3);
  }
  FUN_8001cb84(param_1);
  if (*(char *)(param_1 + 0x1b0) != '\0') {
    *(undefined2 *)(param_1 + 0x40) = 0xfffb;
    *(undefined2 *)(param_1 + 0x42) = 0xfff6;
    *(undefined2 *)(param_1 + 0x44) = 10;
    *(undefined2 *)(param_1 + 0x46) = 10;
  }
  iVar7 = BUF_PTR;
  *(undefined2 *)(param_1 + 0x160) = 0;
  *(undefined2 *)(param_1 + 0x162) = 0;
  if (*(char *)(iVar7 + 0x14a) == '\0') {
    FUN_8005a8d4(param_1);
    if (*(char *)(param_1 + 0x128) != '\0') {
      *(char *)(param_1 + 0x128) = *(char *)(param_1 + 0x128) + -1;
    }
    sVar1 = *(short *)(param_1 + 0x144);
    if ((sVar1 != 0) && (*(short *)(param_1 + 0x144) = sVar1 + -1, sVar1 == 1)) {
      FUN_8001c4a0(param_1,0x40e28045);
      *(undefined *)(*(int *)(param_1 + 0x34) + 0x37) = 0;
      *(undefined *)(*(int *)(param_1 + 0x34) + 0x38) = 0;
      *(undefined *)(param_1 + 0x15b) = *(undefined *)(param_1 + 0x15e);
      iVar7 = *(int *)(param_1 + 0x34);
      *(undefined *)(param_1 + 0x15a) = *(undefined *)(param_1 + 0x15d);
      uVar6 = *(undefined *)(param_1 + 0x15a);
      uVar8 = *(undefined *)(param_1 + 0x15b);
      *(undefined *)(param_1 + 0xf8) = 1;
      *(undefined *)(param_1 + 0x15c) = *(undefined *)(param_1 + 0x15f);
      *(undefined *)(iVar7 + 0x36) = *(undefined *)(param_1 + 0x15f);
      *(undefined *)(iVar7 + 0x34) = uVar6;
      *(undefined *)(iVar7 + 0x35) = uVar8;
      if (*(int *)(param_1 + 0x14c) != 0) {
        *(undefined *)(*(int *)(*(int *)(param_1 + 0x14c) + 0x34) + 10) = 0;
        FUN_80022070(BUF_PTR,*(undefined4 *)(param_1 + 0x14c));
        *(undefined4 *)(param_1 + 0x14c) = 0;
      }
    }
    puVar2 = PTR_LAB_800a5df8;
    uVar4 = DAT_800a5df4;
    if (*(char *)(param_1 + 0x159) != '\0') {
      *(undefined *)(param_1 + 0x159) = 0;
      FUN_8001eaa8(param_1,uVar4,puVar2);
    }
    if (*(int *)(param_1 + 0x168) == 0) {
      if ((PTR_DAT_800a59d8[0x17] & 1) != 0) {
        uVar4 = FUN_800143ec(PTR_DAT_800a59b0,0x30,1,0);
        uVar4 = FUN_8006de58(uVar4,param_1);
        *(undefined4 *)(param_1 + 0x168) = uVar4;
        FUN_8001c4a0(param_1,0xe0880448);
        *(undefined *)(*(int *)(*(int *)(param_1 + 0x168) + 0x24) + 0x1e0) = 0x20;
        FUN_80020f64(BUF_PTR,*(undefined4 *)(param_1 + 0x168));
        FUN_80021078(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x168) + 0x24));
      }
    }
    else if ((PTR_DAT_800a59d8[0x17] & 1) == 0) {
      *(undefined *)(*(int *)(param_1 + 0x168) + 0x2c) = 1;
      *(undefined4 *)(param_1 + 0x168) = 0;
    }
    if (*(int *)(param_1 + 0x16c) == 0) {
      if ((PTR_DAT_800a59d8[0x17] & 2) != 0) {
        uVar4 = FUN_800143ec(PTR_DAT_800a59b0,0x110,1,0);
        uVar4 = FUN_8006e198(uVar4,param_1);
        iVar7 = BUF_PTR;
        *(undefined4 *)(param_1 + 0x16c) = uVar4;
        FUN_80020f64(iVar7);
        FUN_80021078(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x16c) + 0x34));
      }
    }
    else if ((PTR_DAT_800a59d8[0x17] & 2) == 0) {
      FUN_80021d2c(BUF_PTR);
      FUN_80021dbc(BUF_PTR,*(undefined4 *)(*(int *)(param_1 + 0x16c) + 0x34));
      iVar7 = *(int *)(param_1 + 0x16c);
      if (iVar7 != 0) {
        (**(code **)(*(int *)(iVar7 + 0x18) + 0xc))
                  (iVar7 + *(short *)(*(int *)(iVar7 + 0x18) + 8),3);
      }
      *(undefined4 *)(param_1 + 0x16c) = 0;
    }
  }
  if (*(char *)(param_1 + 0x178) == '\0') {
    if (*(char *)(param_1 + 0x1b0) == '\0') {
      if (PTR_DAT_800a59d8[0x18] == '\0') {
        if ((*(int *)(BUF_PTR + 0x11c) == 0x10000) &&
           (iVar7 = *(int *)(param_1 + 0x50) + 0x1000, *(int *)(param_1 + 0x50) < 0x10000)) {
          *(int *)(param_1 + 0x50) = iVar7;
          goto LAB_8005b840;
        }
      }
      else {
        iVar7 = *(int *)(param_1 + 0x50) + -0x1000;
        if (0x8000 < *(int *)(param_1 + 0x50)) {
          *(int *)(param_1 + 0x50) = iVar7;
LAB_8005b840:
          *(int *)(param_1 + 0x54) = iVar7;
        }
      }
    }
    else {
      iVar7 = *(int *)(param_1 + 0x50) + -0x1000;
      if (0x4000 < *(int *)(param_1 + 0x50)) {
        *(int *)(param_1 + 0x50) = iVar7;
        goto LAB_8005b840;
      }
    }
  }
  if (*(char *)(param_1 + 0x17d) == '\0') {
    if (*(char *)(param_1 + 0x128) == '\0') {
      if (*(short *)(param_1 + 0x144) == 0) {
        *(undefined *)(*(int *)(param_1 + 0x34) + 0x38) = 0;
        *(undefined *)(param_1 + 0x15b) = *(undefined *)(param_1 + 0x15e);
        *(undefined *)(param_1 + 0x15a) = *(undefined *)(param_1 + 0x15d);
        iVar7 = *(int *)(param_1 + 0x34);
        uVar6 = *(undefined *)(param_1 + 0x15a);
        uVar8 = *(undefined *)(param_1 + 0x15b);
        *(undefined *)(param_1 + 0x15c) = *(undefined *)(param_1 + 0x15f);
        *(undefined *)(iVar7 + 0x36) = *(undefined *)(param_1 + 0x15f);
        *(undefined *)(iVar7 + 0x34) = uVar6;
        *(undefined *)(iVar7 + 0x35) = uVar8;
        goto LAB_8005b9fc;
      }
      *(undefined *)(*(int *)(param_1 + 0x34) + 0x38) = 1;
      *(undefined *)(param_1 + 0x15a) = 0x20;
      *(undefined *)(param_1 + 0x15b) = 0x60;
      iVar7 = *(int *)(param_1 + 0x34);
      uVar6 = *(undefined *)(param_1 + 0x15a);
      uVar8 = *(undefined *)(param_1 + 0x15b);
      uVar5 = 0x30;
    }
    else {
      iVar3 = (*(uint *)(BUF_PTR + 0x10c) & 3) * 0x20;
      iVar9 = iVar3 + -0x30;
      if (*(short *)(param_1 + 0x144) == 0) {
        *(undefined *)(*(int *)(param_1 + 0x34) + 0x38) = 0;
        iVar10 = (uint)*(byte *)(param_1 + 0x15d) + iVar9;
        iVar3 = (uint)*(byte *)(param_1 + 0x15f) + iVar9;
        iVar9 = (uint)*(byte *)(param_1 + 0x15e) + iVar9;
      }
      else {
        iVar10 = iVar3 + -0x10;
        iVar9 = iVar3 + 0x30;
        *(undefined *)(*(int *)(param_1 + 0x34) + 0x38) = 1;
      }
      if ((short)iVar10 < 0x100) {
        if ((short)iVar10 < 0) {
          iVar10 = 0;
        }
      }
      else {
        iVar10 = 0xff;
      }
      if ((short)iVar9 < 0x100) {
        if ((short)iVar9 < 0) {
          iVar9 = 0;
        }
      }
      else {
        iVar9 = 0xff;
      }
      if ((short)iVar3 < 0x100) {
        if ((short)iVar3 < 0) {
          iVar3 = 0;
        }
      }
      else {
        iVar3 = 0xff;
      }
      iVar7 = *(int *)(param_1 + 0x34);
      *(char *)(param_1 + 0x15a) = (char)iVar10;
      *(char *)(param_1 + 0x15b) = (char)iVar9;
      uVar6 = *(undefined *)(param_1 + 0x15a);
      uVar8 = *(undefined *)(param_1 + 0x15b);
      uVar5 = (undefined)iVar3;
    }
    *(undefined *)(param_1 + 0x15c) = uVar5;
    *(undefined *)(iVar7 + 0x34) = uVar6;
    *(undefined *)(iVar7 + 0x35) = uVar8;
    *(undefined *)(iVar7 + 0x36) = uVar5;
  }
  else {
    *(char *)(param_1 + 0x17d) = *(char *)(param_1 + 0x17d) + -1;
  }
LAB_8005b9fc:
  if ((*(char *)(param_1 + 0x1af) != '\0') && ((*(uint *)(BUF_PTR + 0x10c) & 7) == 0)) {
    uVar4 = FUN_800143ec(PTR_DAT_800a59b0,0x84,1,0);
    iVar7 = FUN_800362a0(uVar4,param_1);
    FUN_80020f64(BUF_PTR,iVar7);
    FUN_80021078(BUF_PTR,*(undefined4 *)(iVar7 + 0x34));
  }
  return;
}



bool FUN_8005c184(int param_1,ushort param_2,int param_3,int param_4)

{
  undefined4 uVar1;
  undefined *puVar2;
  bool bVar3;
  
  bVar3 = false;
  switch(param_2) {
  case 0x100c:
    FUN_8006cc74(param_1);
    break;
  case 0x100d:
    FUN_8006ce40(param_1);
    break;
  case 0x100f:
    *(undefined2 *)(param_1 + 0x68) = *(undefined2 *)(param_4 + 0x68);
    *(short *)(param_1 + 0x6a) = *(short *)(param_4 + 0x6a) + 0x20;
    uVar1 = DAT_800a5e1c;
    puVar2 = PTR_LAB_800a5e20;
    goto LAB_8005c254;
  case 0x1010:
    if ((*(char *)(param_1 + 0x178) != '\0') ||
       (uVar1 = DAT_800a5e14, puVar2 = PTR_LAB_800a5e18, *(char *)(param_1 + 0x1b2) != '\0')) break;
LAB_8005c254:
    FUN_8001eaa8(param_1,uVar1,puVar2);
    break;
  case 0x1017:
    bVar3 = false;
    if (*(char *)(param_1 + 0x178) == '\0') {
      bVar3 = *(char *)(param_1 + 0x1b2) == '\0';
    }
  }
  puVar2 = PTR_LAB_800a5d90;
  uVar1 = DAT_800a5d8c;
  if (param_2 == 0x1006) {
    *(int *)(param_1 + 0x110) = *(int *)(param_1 + 0x110) + param_3;
    FUN_8001eaa8(param_1,uVar1,puVar2);
  }
  else if (param_2 < 0x1007) {
    if (((param_2 == 0x1000) && (param_3 != 2)) &&
       (bVar3 = false, *(char *)(param_1 + 0x128) == '\0')) {
      if ((PTR_DAT_800a59d8[0x17] & 1) == 0) {
        uVar1 = DAT_800a5ddc;
        puVar2 = PTR_LAB_800a5de0;
        if (*(short *)(param_1 + 0x144) != 0) {
          uVar1 = DAT_800a5dd4;
          puVar2 = PTR_LAB_800a5dd8;
        }
      }
      else {
        uVar1 = DAT_800a5dac;
        puVar2 = PTR_LAB_800a5db0;
        if (*(short *)(param_1 + 0x68) < *(short *)(param_4 + 0x68)) {
          uVar1 = DAT_800a5db4;
          puVar2 = PTR_LAB_800a5db8;
        }
      }
      FUN_8001eaa8(param_1,uVar1,puVar2);
      bVar3 = true;
    }
  }
  else if (param_2 == 0x1007) {
    FUN_8005af8c(param_1,param_4,param_3);
  }
  return bVar3;
}



bool FUN_8005c3c0(int param_1,ushort param_2,int param_3,int param_4)

{
  undefined uVar1;
  undefined uVar2;
  int iVar3;
  int iVar4;
  undefined4 uVar5;
  uint uVar6;
  undefined *puVar7;
  code *pcVar8;
  bool bVar9;
  short unaff_s6;
  undefined auStack_60 [6];
  short local_5a;
  undefined auStack_58 [6];
  short local_52;
  undefined4 local_48;
  code *local_44;
  undefined4 local_30;
  code *local_2c;
  
  bVar9 = false;
  switch(param_2) {
  case 0x100c:
    FUN_8006cc74(param_1);
    break;
  case 0x100d:
    FUN_8006ce40(param_1);
    break;
  case 0x100f:
    *(undefined2 *)(param_1 + 0x68) = *(undefined2 *)(param_4 + 0x68);
    *(short *)(param_1 + 0x6a) = *(short *)(param_4 + 0x6a) + 0x20;
    uVar5 = DAT_800a5e1c;
    puVar7 = PTR_LAB_800a5e20;
    goto LAB_8005c49c;
  case 0x1010:
    if ((*(char *)(param_1 + 0x178) != '\0') ||
       (uVar5 = DAT_800a5e14, puVar7 = PTR_LAB_800a5e18, *(char *)(param_1 + 0x1b2) != '\0')) break;
LAB_8005c49c:
    FUN_8001eaa8(param_1,uVar5,puVar7);
    break;
  case 0x1017:
    bVar9 = false;
    if (*(char *)(param_1 + 0x178) == '\0') {
      bVar9 = *(char *)(param_1 + 0x1b2) == '\0';
    }
  }
  if (param_2 == 0x1007) {
    FUN_8005af8c(param_1,param_4,param_3);
  }
  else if (param_2 < 0x1008) {
    if (param_2 == 0x1000) {
      FUN_8001a444(param_4,auStack_60);
      FUN_8001a444(param_1,auStack_58);
      if ((param_3 == 2) || ((param_3 != 1 && (1 < (int)local_5a - (int)local_52)))) {
        if (0 < *(int *)(param_1 + 0x110)) {
          *(undefined *)(BUF_PTR + 0x11a) = 0x14;
        }
        if ((param_3 != 2) || (0 < *(int *)(param_1 + 0x110))) {
          iVar4 = (int)*(short *)(param_4 + 10);
          if (iVar4 != 0) {
            if (iVar4 < 1) {
              pcVar8 = *(code **)(param_4 + 0xc);
            }
            else {
              iVar3 = iVar4 * 8 + *(int *)(param_4 + *(short *)(param_4 + 0xc));
              local_48 = *(undefined4 *)(iVar3 + -8);
              pcVar8 = *(code **)(iVar3 + -4);
              local_44 = pcVar8;
            }
            iVar3 = (int)*(short *)(param_4 + 8);
            if (0 < iVar4 << 0x10) {
              iVar3 = (short)local_48 + iVar3;
            }
            (*pcVar8)(param_4 + iVar3,0x1001,0,param_1);
          }
          if ((*(short *)(param_1 + 0xa2) == -1) &&
             ((*(undefined **)(param_1 + 0xa4) == &LAB_800691c0 ||
              (*(undefined **)(param_1 + 0xa4) == &LAB_8006946c)))) {
            *(char *)(param_1 + 0x164) = *(char *)(param_1 + 0x164) + '\x01';
          }
          else {
            *(undefined *)(param_1 + 0x164) = 0;
          }
          FUN_8001eaa8(param_1,DAT_800a5e24,PTR_LAB_800a5e28);
        }
      }
      else {
        bVar9 = false;
        if (*(char *)(param_1 + 0x128) == '\0') {
          if ((PTR_DAT_800a59d8[0x17] & 1) == 0) {
            uVar5 = DAT_800a5ddc;
            puVar7 = PTR_LAB_800a5de0;
            if (*(short *)(param_1 + 0x144) != 0) {
              uVar5 = DAT_800a5dd4;
              puVar7 = PTR_LAB_800a5dd8;
            }
          }
          else {
            uVar5 = DAT_800a5dac;
            puVar7 = PTR_LAB_800a5db0;
            if (*(short *)(param_1 + 0x68) < *(short *)(param_4 + 0x68)) {
              uVar5 = DAT_800a5db4;
              puVar7 = PTR_LAB_800a5db8;
            }
          }
          FUN_8001eaa8(param_1,uVar5,puVar7);
          bVar9 = true;
        }
      }
    }
  }
  else if ((param_2 == 0x100a) && (0 < *(int *)(param_1 + 0x110))) {
    if ((*(short *)(param_1 + 0xa2) == -1) &&
       ((*(undefined **)(param_1 + 0xa4) == &LAB_800691c0 ||
        (*(undefined **)(param_1 + 0xa4) == &LAB_8006946c)))) {
      *(char *)(param_1 + 0x164) = *(char *)(param_1 + 0x164) + '\x01';
    }
    else {
      *(undefined *)(param_1 + 0x164) = 0;
    }
    FUN_8001eaa8(param_1,DAT_800a5e24,PTR_LAB_800a5e28);
    if (*(short *)(param_1 + 0x144) != 0) {
      iVar4 = (int)*(short *)(param_4 + 0x26);
      uVar6 = (uint)*(ushort *)(param_4 + 0x68);
      if (iVar4 != 0) {
        if (iVar4 < 1) {
          pcVar8 = *(code **)(param_4 + 0x28);
        }
        else {
          iVar3 = iVar4 * 8 + *(int *)(param_4 + *(short *)(param_4 + 0x28));
          unaff_s6 = (short)*(undefined4 *)(iVar3 + -8);
          pcVar8 = *(code **)(iVar3 + -4);
        }
        iVar3 = (int)*(short *)(param_4 + 0x24);
        if (0 < iVar4 << 0x10) {
          iVar3 = unaff_s6 + iVar3;
        }
        uVar6 = (*pcVar8)(param_4 + iVar3,(int)(short)*(ushort *)(param_4 + 0x68));
      }
      iVar4 = *(int *)(param_1 + 0x58);
      if (iVar4 == 0) {
        trap(0x1c00);
      }
      if ((iVar4 == -1) && (uVar6 << 0x10 == -0x80000000)) {
        trap(0x1800);
      }
      *(short *)(param_1 + 0x146) = (short)((int)(uVar6 << 0x10) / iVar4);
      iVar4 = (int)*(short *)(param_4 + 0x2e);
      uVar6 = (uint)*(ushort *)(param_4 + 0x6a);
      if (iVar4 != 0) {
        if (iVar4 < 1) {
          pcVar8 = *(code **)(param_4 + 0x30);
        }
        else {
          iVar3 = iVar4 * 8 + *(int *)(param_4 + *(short *)(param_4 + 0x30));
          local_30 = *(undefined4 *)(iVar3 + -8);
          pcVar8 = *(code **)(iVar3 + -4);
          local_2c = pcVar8;
        }
        iVar3 = (int)*(short *)(param_4 + 0x2c);
        if (0 < iVar4 << 0x10) {
          iVar3 = (short)local_30 + iVar3;
        }
        uVar6 = (*pcVar8)(param_4 + iVar3,(int)(short)*(ushort *)(param_4 + 0x6a));
      }
      iVar4 = *(int *)(param_1 + 0x5c);
      if (iVar4 == 0) {
        trap(0x1c00);
      }
      if ((iVar4 == -1) && (uVar6 << 0x10 == -0x80000000)) {
        trap(0x1800);
      }
      *(undefined *)(param_1 + 0x151) = *(undefined *)(param_1 + 0x15e);
      *(undefined *)(param_1 + 0x152) = *(undefined *)(param_1 + 0x15f);
      *(undefined *)(param_1 + 0x153) = *(undefined *)(param_1 + 0x1b3);
      *(undefined *)(param_1 + 0x150) = *(undefined *)(param_1 + 0x15d);
      puVar7 = PTR_DAT_800a59d8;
      *(undefined2 *)(param_1 + 0x1ac) = *(undefined2 *)(param_1 + 0x1a8);
      *(undefined2 *)(param_1 + 0x1aa) = *(undefined2 *)(param_1 + 0x1a6);
      *(short *)(param_1 + 0x148) = (short)((int)(uVar6 << 0x10) / iVar4);
      *(undefined *)(param_1 + 0x154) = puVar7[0x18];
    }
    *(undefined *)(BUF_PTR + 0x14b) = PTR_DAT_800a59d8[0x18];
    *(undefined *)(BUF_PTR + 0x198) = *(undefined *)(param_1 + 0x1b3);
    iVar4 = BUF_PTR;
    uVar1 = *(undefined *)(param_1 + 0x15e);
    uVar2 = *(undefined *)(param_1 + 0x15f);
    bVar9 = true;
    *(undefined *)(BUF_PTR + 0x199) = *(undefined *)(param_1 + 0x15d);
    *(undefined *)(iVar4 + 0x19a) = uVar1;
    *(undefined *)(iVar4 + 0x19b) = uVar2;
  }
  return bVar9;
}



bool FUN_8005ca20(int param_1,short param_2,int param_3,int param_4)

{
  undefined4 uVar1;
  undefined *puVar2;
  bool bVar3;
  
  bVar3 = false;
  switch(param_2) {
  case 0x100c:
    FUN_8006cc74(param_1);
    break;
  case 0x100d:
    FUN_8006ce40(param_1);
    break;
  case 0x100f:
    *(undefined2 *)(param_1 + 0x68) = *(undefined2 *)(param_4 + 0x68);
    *(short *)(param_1 + 0x6a) = *(short *)(param_4 + 0x6a) + 0x20;
    uVar1 = DAT_800a5e1c;
    puVar2 = PTR_LAB_800a5e20;
    goto LAB_8005caf0;
  case 0x1010:
    if ((*(char *)(param_1 + 0x178) != '\0') ||
       (uVar1 = DAT_800a5e14, puVar2 = PTR_LAB_800a5e18, *(char *)(param_1 + 0x1b2) != '\0')) break;
LAB_8005caf0:
    FUN_8001eaa8(param_1,uVar1,puVar2);
    break;
  case 0x1017:
    bVar3 = false;
    if (*(char *)(param_1 + 0x178) == '\0') {
      bVar3 = *(char *)(param_1 + 0x1b2) == '\0';
    }
  }
  if (((param_2 == 0x1000) && (param_3 != 2)) && (*(char *)(param_1 + 0x128) == '\0')) {
    *(undefined *)(BUF_PTR + 0x62) = 0;
    if (*(int *)(param_1 + 0x140) != 0) {
      FUN_80022070(BUF_PTR);
      *(undefined4 *)(param_1 + 0x140) = 0;
    }
    bVar3 = false;
    if (*(char *)(param_1 + 0x128) == '\0') {
      if ((PTR_DAT_800a59d8[0x17] & 1) == 0) {
        uVar1 = DAT_800a5ddc;
        puVar2 = PTR_LAB_800a5de0;
        if (*(short *)(param_1 + 0x144) != 0) {
          uVar1 = DAT_800a5dd4;
          puVar2 = PTR_LAB_800a5dd8;
        }
      }
      else {
        uVar1 = DAT_800a5dac;
        puVar2 = PTR_LAB_800a5db0;
        if (*(short *)(param_1 + 0x68) < *(short *)(param_4 + 0x68)) {
          uVar1 = DAT_800a5db4;
          puVar2 = PTR_LAB_800a5db8;
        }
      }
      FUN_8001eaa8(param_1,uVar1,puVar2);
      bVar3 = true;
    }
  }
  return bVar3;
}



undefined4 FUN_8005cee4(int param_1,short param_2,int param_3)

{
  undefined4 uVar1;
  int iVar2;
  int iVar3;
  short sVar4;
  int iVar5;
  short unaff_s4;
  code *pcVar6;
  
  uVar1 = FUN_8005c3c0(param_1,param_2);
  if (param_2 == 2) {
    FUN_8001e924(param_1);
  }
  if ((param_2 == 1) && (param_3 == 0x1a800898)) {
    *(undefined *)(param_1 + 0x11c) = 5;
    *(undefined4 *)(param_1 + 0x118) = 0xffffee00;
    *(undefined *)(param_1 + 0x11e) = 0;
    *(undefined *)(param_1 + 0x11f) = 0;
    *(undefined4 *)(param_1 + 0x120) = 0;
    iVar2 = *(int *)(param_1 + 0x110) + -0x60000;
    *(int *)(param_1 + 0x110) = iVar2;
    if (iVar2 < -0x90000) {
      *(undefined4 *)(param_1 + 0x110) = 0xfff70000;
    }
    *(undefined4 *)(param_1 + 0x1c) = 0xffff0000;
    *(undefined **)(param_1 + 0x20) = &LAB_80065084;
    iVar2 = *(int *)(param_1 + 300);
    if (iVar2 != 0) {
      sVar4 = (short)*(undefined4 *)(param_1 + 0x110);
      if (*(int *)(param_1 + 0x58) == 0x8000) {
        sVar4 = sVar4 >> 1;
      }
      iVar5 = (int)*(short *)(iVar2 + 10);
      if (iVar5 != 0) {
        if (iVar5 < 1) {
          pcVar6 = *(code **)(iVar2 + 0xc);
        }
        else {
          iVar3 = iVar5 * 8 + *(int *)(iVar2 + *(short *)(iVar2 + 0xc));
          unaff_s4 = (short)*(undefined4 *)(iVar3 + -8);
          pcVar6 = *(code **)(iVar3 + -4);
        }
        iVar3 = (int)*(short *)(iVar2 + 8);
        if (0 < iVar5 << 0x10) {
          iVar3 = unaff_s4 + iVar3;
        }
        (*pcVar6)(iVar2 + iVar3,0x1005,(int)sVar4,param_1);
      }
      *(undefined4 *)(param_1 + 300) = 0;
    }
  }
  return uVar1;
}



void FUN_8005f25c(int param_1)

{
  short sVar1;
  u_short uVar2;
  undefined4 uVar3;
  int iVar4;
  int iVar5;
  undefined4 local_20;
  
  sVar1 = *(short *)(&DAT_8009c33c + (uint)*(byte *)(param_1 + 0x179) * 4);
  if (*(char *)(param_1 + 0x74) != '\0') {
    sVar1 = -*(short *)(&DAT_8009c33c + (uint)*(byte *)(param_1 + 0x179) * 4);
  }
  local_20 = CONCAT22(*(short *)(param_1 + 0x6a) +
                      *(short *)(&DAT_8009c33e + (uint)*(byte *)(param_1 + 0x179) * 4),
                      sVar1 + *(short *)(param_1 + 0x68));
  uVar3 = FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  iVar4 = FUN_80030d08(uVar3,0x2841e65,local_20,*(undefined *)(param_1 + 0x74),
                       *(undefined4 *)(param_1 + 0x58),0x3d4,0);
  iVar5 = *(int *)(iVar4 + 0x34);
  uVar2 = GetTPage((uint)*(byte *)(iVar5 + 0x32),1,(int)*(short *)(iVar5 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar5 + 0x12) & 0xffffff00);
  uVar3 = BUF_PTR;
  *(u_short *)(iVar5 + 0x24) = uVar2;
  FUN_800213a4(uVar3,iVar4);
  *(char *)(param_1 + 0x179) = *(char *)(param_1 + 0x179) + '\x01';
  return;
}



undefined4 FUN_8005f654(int param_1)

{
  char cVar1;
  ushort uVar2;
  bool bVar3;
  undefined4 uVar4;
  undefined *puVar5;
  
  uVar2 = *(ushort *)(*(int *)(param_1 + 0x100) + 2);
  if ((uVar2 & 4) == 0) {
    if ((uVar2 & 1) == 0) {
      if ((uVar2 & 8) == 0) {
        bVar3 = false;
        if ((uVar2 & 2) == 0) goto LAB_8005f764;
        cVar1 = PTR_DAT_800a59d8[0x1c];
        uVar4 = DAT_800a5e4c;
        puVar5 = PTR_LAB_800a5e50;
      }
      else {
        cVar1 = PTR_DAT_800a59d8[0x16];
        uVar4 = DAT_800a5e44;
        puVar5 = PTR_LAB_800a5e48;
      }
      goto joined_r0x8005f708;
    }
    if (*(int *)(param_1 + 300) == 0) {
      cVar1 = PTR_DAT_800a59d8[0x15];
      uVar4 = DAT_800a5e3c;
      puVar5 = PTR_LAB_800a5e40;
      goto joined_r0x8005f708;
    }
  }
  else {
    cVar1 = PTR_DAT_800a59d8[0x14];
    uVar4 = DAT_800a5e34;
    puVar5 = PTR_LAB_800a5e38;
joined_r0x8005f708:
    if (cVar1 != '\0') {
      FUN_8001eaa8(param_1,uVar4,puVar5);
      return 1;
    }
  }
  bVar3 = true;
LAB_8005f764:
  if (bVar3) {
    FUN_8001c4a0(param_1,0x64221e61);
  }
  return 0;
}



void FUN_8006af30(undefined4 *param_1)

{
  int iVar1;
  short sVar2;
  int iVar3;
  int iVar4;
  short in_t2;
  code *pcVar5;
  
  *(undefined *)(param_1 + 0x4a) = 0x78;
  iVar4 = BUF_PTR;
  param_1[0x43] = 0;
  *(undefined *)(iVar4 + 0x60) = 1;
  iVar4 = param_1[0x4b];
  param_1[0x49] = 0x28000;
  param_1[0x45] = 0;
  param_1[0x46] = 0;
  *(undefined *)(param_1 + 0x4f) = 0;
  if (iVar4 != 0) {
    sVar2 = (short)param_1[0x44];
    if (param_1[0x16] == 0x8000) {
      sVar2 = sVar2 >> 1;
    }
    iVar3 = (int)*(short *)(iVar4 + 10);
    if (iVar3 != 0) {
      if (iVar3 < 1) {
        pcVar5 = *(code **)(iVar4 + 0xc);
      }
      else {
        iVar1 = iVar3 * 8 + *(int *)(iVar4 + *(short *)(iVar4 + 0xc));
        in_t2 = (short)*(undefined4 *)(iVar1 + -8);
        pcVar5 = *(code **)(iVar1 + -4);
      }
      iVar1 = (int)*(short *)(iVar4 + 8);
      if (0 < iVar3 << 0x10) {
        iVar1 = in_t2 + iVar1;
      }
      (*pcVar5)(iVar4 + iVar1,0x1005,(int)sVar2,param_1);
    }
    param_1[0x4b] = 0;
  }
  if ((PTR_DAT_800a59d8[0x17] & 1) == 0) {
    *(undefined *)(param_1 + 0x5e) = 1;
    *param_1 = 0xffff0000;
    param_1[1] = &LAB_8005bb6c;
    param_1[2] = 0xffff0000;
    param_1[3] = &LAB_8005c060;
    param_1[0x41] = 0;
    param_1[0x42] = 0;
    param_1[7] = 0xffff0000;
    param_1[8] = &LAB_80065084;
    FUN_8001d07c(param_1,0x393c80c2,1);
    FUN_8001ec14(param_1,DAT_800a5f80,PTR_LAB_800a5f84);
    param_1[0x26] = 0xffff0000;
    param_1[0x27] = &LAB_80069e64;
  }
  else {
    PTR_DAT_800a59d8[0x17] = PTR_DAT_800a59d8[0x17] & 0xfe;
    *param_1 = 0xffff0000;
    param_1[1] = &LAB_8005bb6c;
    param_1[2] = 0xffff0000;
    param_1[3] = &LAB_8005ce88;
    param_1[0x41] = 0xffff0000;
    param_1[0x42] = &LAB_800602a0;
    param_1[7] = 0xffff0000;
    param_1[8] = &LAB_80065084;
    FUN_8001d07c(param_1,0x393c80c2,1);
    param_1[0x26] = 0xffff0000;
    param_1[0x27] = &LAB_800695c0;
    FUN_8001ec14(param_1,DAT_800a5f70,PTR_LAB_800a5f74);
  }
  return;
}



void FUN_8006cc74(int param_1,undefined4 param_2,short param_3)

{
  undefined *puVar1;
  short sVar2;
  short sVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  code *pcVar8;
  short unaff_s2;
  
  iVar7 = (int)*(short *)(param_1 + 0x26);
  sVar2 = *(short *)(param_1 + 0x68);
  if (iVar7 != 0) {
    if (iVar7 < 1) {
      pcVar8 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar4 = iVar7 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      param_3 = (short)*(undefined4 *)(iVar4 + -8);
      pcVar8 = *(code **)(iVar4 + -4);
    }
    iVar4 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar7 << 0x10) {
      iVar4 = param_3 + iVar4;
    }
    sVar2 = (*pcVar8)(param_1 + iVar4,(int)sVar2);
  }
  iVar7 = (int)*(short *)(param_1 + 0x2e);
  sVar3 = *(short *)(param_1 + 0x6a);
  *(short *)(param_1 + 0x68) = sVar2;
  if (iVar7 != 0) {
    if (iVar7 < 1) {
      pcVar8 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar4 = iVar7 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      unaff_s2 = (short)*(undefined4 *)(iVar4 + -8);
      pcVar8 = *(code **)(iVar4 + -4);
    }
    iVar4 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar7 << 0x10) {
      iVar4 = unaff_s2 + iVar4;
    }
    sVar3 = (*pcVar8)(param_1 + iVar4,(int)sVar3);
  }
  *(undefined4 *)(param_1 + 0x58) = 0x8000;
  iVar7 = *(int *)(param_1 + 0x58);
  iVar4 = (int)*(short *)(param_1 + 0x68) << 0x10;
  if (iVar7 == 0) {
    trap(0x1c00);
  }
  if ((iVar7 == -1) && (iVar4 == -0x80000000)) {
    trap(0x1800);
  }
  *(short *)(param_1 + 0x6a) = sVar3;
  *(undefined4 *)(param_1 + 0x5c) = 0x8000;
  puVar1 = PTR_DAT_800a59d8;
  iVar6 = *(int *)(param_1 + 0x5c);
  iVar5 = (int)*(short *)(param_1 + 0x6a) << 0x10;
  if (iVar6 == 0) {
    trap(0x1c00);
  }
  if ((iVar6 == -1) && (iVar5 == -0x80000000)) {
    trap(0x1800);
  }
  *(short *)(param_1 + 0x68) = (short)(iVar4 / iVar7);
  *(short *)(param_1 + 0x6a) = (short)(iVar5 / iVar6);
  puVar1[0x18] = 1;
  return;
}



void FUN_8006ce40(int param_1,undefined4 param_2,short param_3)

{
  undefined *puVar1;
  short sVar2;
  short sVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  code *pcVar8;
  short unaff_s2;
  
  iVar7 = (int)*(short *)(param_1 + 0x26);
  sVar2 = *(short *)(param_1 + 0x68);
  if (iVar7 != 0) {
    if (iVar7 < 1) {
      pcVar8 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar4 = iVar7 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      param_3 = (short)*(undefined4 *)(iVar4 + -8);
      pcVar8 = *(code **)(iVar4 + -4);
    }
    iVar4 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar7 << 0x10) {
      iVar4 = param_3 + iVar4;
    }
    sVar2 = (*pcVar8)(param_1 + iVar4,(int)sVar2);
  }
  iVar7 = (int)*(short *)(param_1 + 0x2e);
  sVar3 = *(short *)(param_1 + 0x6a);
  *(short *)(param_1 + 0x68) = sVar2;
  if (iVar7 != 0) {
    if (iVar7 < 1) {
      pcVar8 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar4 = iVar7 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      unaff_s2 = (short)*(undefined4 *)(iVar4 + -8);
      pcVar8 = *(code **)(iVar4 + -4);
    }
    iVar4 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar7 << 0x10) {
      iVar4 = unaff_s2 + iVar4;
    }
    sVar3 = (*pcVar8)(param_1 + iVar4,(int)sVar3);
  }
  *(undefined4 *)(param_1 + 0x58) = 0x10000;
  iVar7 = *(int *)(param_1 + 0x58);
  iVar4 = (int)*(short *)(param_1 + 0x68) << 0x10;
  if (iVar7 == 0) {
    trap(0x1c00);
  }
  if ((iVar7 == -1) && (iVar4 == -0x80000000)) {
    trap(0x1800);
  }
  *(short *)(param_1 + 0x6a) = sVar3;
  *(undefined4 *)(param_1 + 0x5c) = 0x10000;
  puVar1 = PTR_DAT_800a59d8;
  iVar6 = *(int *)(param_1 + 0x5c);
  iVar5 = (int)*(short *)(param_1 + 0x6a) << 0x10;
  if (iVar6 == 0) {
    trap(0x1c00);
  }
  if ((iVar6 == -1) && (iVar5 == -0x80000000)) {
    trap(0x1800);
  }
  *(short *)(param_1 + 0x68) = (short)(iVar4 / iVar7);
  *(short *)(param_1 + 0x6a) = (short)(iVar5 / iVar6);
  puVar1[0x18] = 0;
  return;
}



undefined4 * FUN_8006daa8(undefined4 *param_1,undefined4 param_2)

{
  FUN_8001c864(param_1,&DAT_8009c2b0,0x424,0,0);
  param_1[6] = &DAT_800117e4;
  param_1[0x40] = param_2;
  *(undefined2 *)(param_1 + 4) = 0x3e9;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8006db7c;
  param_1[9] = 0xffff0000;
  param_1[10] = &LAB_8001a268;
  param_1[0xb] = 0xffff0000;
  param_1[0xc] = &LAB_8001a298;
  return param_1;
}



int FUN_8006dd58(int param_1,short param_2,short param_3,undefined param_4,int param_5)

{
  FUN_8001c71c(param_1,0x1e1000b3,999,(int)param_2,(int)param_3,0);
  *(undefined **)(param_1 + 0x18) = &DAT_800117c4;
  *(undefined2 *)(param_1 + 0x10) = 0x3e9;
  *(undefined *)(param_1 + 0x74) = param_4;
  if (param_5 != 0x10000) {
    *(int *)(param_1 + 0x50) = param_5;
    *(int *)(param_1 + 0x54) = param_5;
    *(int *)(param_1 + 0x58) = param_5;
    *(int *)(param_1 + 0x5c) = param_5;
    *(undefined4 *)(param_1 + 0x24) = 0xffff0000;
    *(undefined **)(param_1 + 0x28) = &LAB_8001a268;
    *(undefined4 *)(param_1 + 0x2c) = 0xffff0000;
    *(undefined **)(param_1 + 0x30) = &LAB_8001a298;
  }
  FUN_8001d0ec(param_1,0x182d840c);
  FUN_8001d23c(param_1,0);
  return param_1;
}



void FUN_8006de58(undefined4 *param_1,undefined4 param_2)

{
  undefined *puVar1;
  short sVar2;
  ushort uVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  int iVar9;
  uint uVar10;
  int iVar11;
  undefined local_1e [2];
  undefined local_1c [4];
  undefined *local_18;
  
  FUN_80019744(param_1,0x3e9);
  param_1[6] = &DAT_800117a4;
  param_1[7] = param_2;
  local_1c = (undefined  [4])0xffff0000;
  local_18 = &LAB_8006dfc8;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8006dfc8;
  uVar8 = FUN_800143ec(PTR_DAT_800a59b0,0x1e8,1,0);
  iVar9 = FUN_80032868(uVar8,0);
  param_1[9] = iVar9;
  *(undefined *)(iVar9 + 0x1e7) = 1;
  iVar11 = param_1[7];
  uVar3 = *(ushort *)(param_1[7] + 0x68);
  *(ushort *)(param_1 + 8) = uVar3;
  uVar4 = iVar11 + 0x3bU & 3;
  uVar5 = iVar11 + 0x38U & 3;
  uVar10 = (*(int *)((iVar11 + 0x3bU) - uVar4) << (3 - uVar4) * 8 |
           (uint)uVar3 & 0xffffffffU >> (uVar4 + 1) * 8) & -1 << (4 - uVar5) * 8 |
           *(uint *)((iVar11 + 0x38U) - uVar5) >> uVar5 * 8;
  uVar4 = iVar11 + 0x3fU & 3;
  iVar9 = *(int *)((iVar11 + 0x3fU) - uVar4);
  uVar5 = iVar11 + 0x3cU & 3;
  uVar6 = *(uint *)((iVar11 + 0x3cU) - uVar5);
  puVar1 = local_1e + 1;
  uVar7 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar7) =
       *(uint *)(puVar1 + -uVar7) & -1 << (uVar7 + 1) * 8 | uVar10 >> (3 - uVar7) * 8;
  puVar1 = local_1c + 3;
  uVar7 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar7) =
       *(uint *)(puVar1 + -uVar7) & -1 << (uVar7 + 1) * 8 |
       ((iVar9 << (3 - uVar4) * 8 | uVar8 & 0xffffffffU >> (uVar4 + 1) * 8) & -1 << (4 - uVar5) * 8
       | uVar6 >> uVar5 * 8) >> (3 - uVar7) * 8;
  local_1e = SUB42(uVar10 >> 0x10,0);
  sVar2 = *(short *)(param_1[7] + 0x6a);
  *(undefined *)(param_1 + 0xb) = 0;
  *(short *)((int)param_1 + 0x22) = sVar2 + (short)local_1e;
  return;
}



undefined4 * FUN_8006e198(undefined4 *param_1,undefined4 param_2)

{
  undefined *puVar1;
  uint uVar2;
  undefined *puVar3;
  undefined4 uVar4;
  uint uVar5;
  int iVar6;
  uint uVar7;
  uint uVar8;
  undefined auStack_20 [4];
  undefined local_1c [4];
  undefined *local_18;
  
  FUN_8001c864(param_1,&DAT_8009c420,999,0,0);
  param_1[6] = &DAT_80011784;
  *(undefined *)((int)param_1 + 0x10d) = 1;
  *(undefined *)((int)param_1 + 0x10e) = 1;
  param_1[0x40] = param_2;
  *(undefined2 *)(param_1 + 4) = 0x3e9;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8006e73c;
  param_1[9] = 0xffff0000;
  param_1[10] = &LAB_8001a268;
  local_1c = (undefined  [4])0xffff0000;
  local_18 = &LAB_8001a298;
  param_1[0xb] = 0xffff0000;
  param_1[0xc] = &LAB_8001a298;
  uVar4 = 0x8000;
  if (PTR_DAT_800a59d8[0x18] == '\0') {
    uVar4 = *(undefined4 *)(BUF_PTR + 0x11c);
  }
  param_1[0x16] = uVar4;
  param_1[0x41] = 0;
  param_1[0x42] = 0;
  *(undefined2 *)(param_1 + 0x1b) = 0;
  *(undefined2 *)((int)param_1 + 0x6e) = 0;
  *(undefined *)(param_1 + 0x43) = 0;
  param_1[0x17] = param_1[0x16];
  param_1[0x14] = param_1[0x16];
  param_1[0x15] = param_1[0x16];
  uVar7 = 0xffffffec;
  if (*(char *)(param_1[0x40] + 0x74) != '\0') {
    uVar7 = 0x14;
  }
  iVar6 = param_1[0x40];
  uVar5 = (int)*(short *)(param_1[0x40] + 0x68) + uVar7;
  *(short *)(param_1 + 0x1a) = (short)uVar5;
  puVar3 = PTR_LAB_800a5fc4;
  uVar4 = DAT_800a5fc0;
  uVar8 = iVar6 + 0x3bU & 3;
  uVar2 = iVar6 + 0x38U & 3;
  uVar5 = (*(int *)((iVar6 + 0x3bU) - uVar8) << (3 - uVar8) * 8 |
          uVar5 & 0xffffffffU >> (uVar8 + 1) * 8) & -1 << (4 - uVar2) * 8 |
          *(uint *)((iVar6 + 0x38U) - uVar2) >> uVar2 * 8;
  uVar8 = iVar6 + 0x3fU & 3;
  uVar2 = iVar6 + 0x3cU & 3;
  uVar8 = (*(int *)((iVar6 + 0x3fU) - uVar8) << (3 - uVar8) * 8 |
          uVar7 & 0xffffffffU >> (uVar8 + 1) * 8) & -1 << (4 - uVar2) * 8 |
          *(uint *)((iVar6 + 0x3cU) - uVar2) >> uVar2 * 8;
  puVar1 = auStack_20 + 3;
  uVar7 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar7) =
       *(uint *)(puVar1 + -uVar7) & -1 << (uVar7 + 1) * 8 | uVar5 >> (3 - uVar7) * 8;
  puVar1 = local_1c + 3;
  uVar7 = (uint)puVar1 & 3;
  *(uint *)(puVar1 + -uVar7) =
       *(uint *)(puVar1 + -uVar7) & -1 << (uVar7 + 1) * 8 | uVar8 >> (3 - uVar7) * 8;
  auStack_20._2_2_ = (undefined2)(uVar5 >> 0x10);
  *(short *)((int)param_1 + 0x6a) = *(short *)(param_1[0x40] + 0x6a) + auStack_20._2_2_ + -10;
  auStack_20 = (undefined  [4])uVar5;
  local_1c = (undefined  [4])uVar8;
  FUN_8001eaa8(param_1,uVar4,puVar3);
  return param_1;
}



void FUN_8006e89c(int param_1)

{
  *(undefined *)(param_1 + 0x10d) = 0;
  return;
}



void FUN_8006e8a4(int param_1,undefined param_2)

{
  *(undefined *)(param_1 + 0x10f) = param_2;
  *(undefined *)(param_1 + 0x10d) = 1;
  return;
}



void FUN_8006ed78(undefined4 *param_1,undefined4 param_2,short param_3,short param_4)

{
  undefined4 uVar1;
  undefined *puVar2;
  
  FUN_8001c864(param_1,&DAT_8009ca90,1000,(int)param_3,(int)param_4);
  param_1[6] = &DAT_80011cf4;
  param_1[0x45] = 0xffffffff;
  *(undefined2 *)(param_1 + 4) = 1000;
  param_1[0x40] = param_2;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_8006ef88;
  param_1[2] = 0xffff0000;
  param_1[3] = &LAB_8006f150;
  puVar2 = PTR_LAB_800a5fe4;
  uVar1 = DAT_800a5fe0;
  param_1[0x41] = 0x20000;
  *(undefined2 *)(param_1 + 0x43) = 0x400;
  param_1[0x42] = 0;
  *(undefined2 *)(param_1 + 0x1b) = 0;
  *(undefined2 *)((int)param_1 + 0x6e) = 0;
  *(undefined *)((int)param_1 + 0x10e) = 0;
  *(undefined *)((int)param_1 + 0x10f) = 0;
  *(undefined *)(param_1 + 0x44) = 0;
  *(undefined *)((int)param_1 + 0x111) = 0;
  *(undefined *)((int)param_1 + 0x112) = 0x14;
  FUN_8001eaa8(param_1,uVar1,puVar2);
  *(undefined *)((int)param_1 + 0x113) = 0;
  *(undefined *)((int)param_1 + 0x119) = 0;
  return;
}



void FUN_8006f210(int param_1)

{
  ushort uVar1;
  ushort uVar2;
  bool bVar3;
  bool bVar4;
  char cVar5;
  short sVar6;
  short sVar7;
  int iVar8;
  undefined4 uVar9;
  int iVar10;
  uint uVar11;
  uint uVar12;
  byte local_18 [8];
  
  uVar9 = 0x20000;
  if ((0x20000 < *(int *)(param_1 + 0x104)) ||
     (uVar9 = 0xfffe0000, *(int *)(param_1 + 0x104) < -0x20000)) {
    *(undefined4 *)(param_1 + 0x104) = uVar9;
  }
  uVar9 = 0x20000;
  if ((0x20000 < *(int *)(param_1 + 0x108)) ||
     (uVar9 = 0xfffe0000, *(int *)(param_1 + 0x108) < -0x20000)) {
    *(undefined4 *)(param_1 + 0x108) = uVar9;
  }
  iVar8 = *(int *)(param_1 + 0x104);
  if (iVar8 < 0) {
    *(int *)(param_1 + 0x104) = iVar8 + 0xc00;
    if (0 < iVar8 + 0xc00) {
      *(undefined4 *)(param_1 + 0x104) = 0;
    }
  }
  else if ((0 < iVar8) && (*(int *)(param_1 + 0x104) = iVar8 + -0xc00, iVar8 + -0xc00 < 0)) {
    *(undefined4 *)(param_1 + 0x104) = 0;
  }
  iVar8 = *(int *)(param_1 + 0x108);
  if (iVar8 < 0) {
    *(int *)(param_1 + 0x108) = iVar8 + 0xc00;
    if (0 < iVar8 + 0xc00) {
      *(undefined4 *)(param_1 + 0x108) = 0;
    }
  }
  else if ((0 < iVar8) && (*(int *)(param_1 + 0x108) = iVar8 + -0xc00, iVar8 + -0xc00 < 0)) {
    *(undefined4 *)(param_1 + 0x108) = 0;
  }
  local_18[0] = FUN_8001fea4(param_1,(int)*(short *)(param_1 + 0x68),(int)*(short *)(param_1 + 0x6a)
                            );
  uVar1 = *(ushort *)(param_1 + 0x68);
  uVar2 = *(ushort *)(param_1 + 0x6a);
  uVar12 = uVar1 & 0xf;
  uVar11 = uVar2 & 0xf;
  bVar3 = false;
  if (local_18[0] == 0) goto LAB_8006faf8;
  bVar4 = true;
  sVar6 = (short)uVar12;
  sVar7 = (short)uVar11;
  bVar3 = bVar4;
  if (local_18[0] == 0xba) {
    if (0xe < uVar11 + uVar12) {
      sVar6 = uVar1 - sVar6;
      goto LAB_8006f49c;
    }
    sVar7 = uVar2 - (sVar7 + 1);
    goto LAB_8006f4b4;
  }
  if (local_18[0] < 0xbb) {
    if (local_18[0] == 0x65) {
      if (uVar12 + uVar11 < 0x10) {
        if ((int)((uVar12 + 0xf) - uVar11) < 0x10) {
          sVar6 = uVar1 - (sVar6 + 1);
          goto LAB_8006f4a0;
        }
        sVar7 = uVar2 - (sVar7 + 1);
        goto LAB_8006f4b4;
      }
      sVar7 = uVar2 - sVar7;
      if (0xf < (int)((uVar12 + 0xf) - uVar11)) {
        sVar6 = uVar1 - sVar6;
        goto LAB_8006f49c;
      }
LAB_8006f4b0:
      sVar7 = sVar7 + 0x10;
    }
    else {
      if (local_18[0] < 0x66) {
        if (local_18[0] == 0x52) {
          FUN_8001eaa8(param_1,DAT_800a5fe8,PTR_LAB_800a5fec);
          bVar3 = true;
          goto LAB_8006faf8;
        }
LAB_8006f4d8:
        cVar5 = FUN_80070098(param_1,local_18);
        if (cVar5 != '\0') {
          if ((local_18[0] == 0xb5) &&
             ((byte)((*(byte *)(param_1 + 0x68) & 0xf) + (*(byte *)(param_1 + 0x6a) & 0xf)) < 0x10))
          {
            iVar8 = *(int *)(param_1 + 0x108);
            if (*(int *)(param_1 + 0x104) < iVar8) {
              if (iVar8 < 0) {
                *(int *)(param_1 + 0x108) = -(iVar8 >> 1);
                if (*(int *)(param_1 + 0x104) < 0) {
                  *(int *)(param_1 + 0x104) = -(*(int *)(param_1 + 0x104) >> 1);
                }
              }
              while ((bVar3 = true, local_18[0] == 0xb5 &&
                     (bVar3 = bVar4,
                     (*(byte *)(param_1 + 0x68) & 0xf) + (*(ushort *)(param_1 + 0x6a) & 0xf) < 0x10)
                     )) {
                iVar8 = *(ushort *)(param_1 + 0x6a) + 1;
                *(short *)(param_1 + 0x6a) = (short)iVar8;
                local_18[0] = FUN_8001fea4(param_1,(int)*(short *)(param_1 + 0x68),
                                           iVar8 * 0x10000 >> 0x10);
              }
            }
            else {
              if (*(int *)(param_1 + 0x104) < 0) {
                *(int *)(param_1 + 0x104) = -(*(int *)(param_1 + 0x104) >> 1);
                if (*(int *)(param_1 + 0x108) < 0) {
                  *(int *)(param_1 + 0x108) = -(*(int *)(param_1 + 0x108) >> 1);
                }
              }
              while ((bVar3 = true, local_18[0] == 0xb5 &&
                     (bVar3 = bVar4,
                     (*(ushort *)(param_1 + 0x68) & 0xf) + (*(byte *)(param_1 + 0x6a) & 0xf) < 0x10)
                     )) {
                iVar8 = *(ushort *)(param_1 + 0x68) + 1;
                *(short *)(param_1 + 0x68) = (short)iVar8;
                local_18[0] = FUN_8001fea4(param_1,iVar8 * 0x10000 >> 0x10,
                                           (int)*(short *)(param_1 + 0x6a));
              }
            }
          }
          else if ((local_18[0] == 0xb7) &&
                  (0xe < (int)(((*(byte *)(param_1 + 0x68) & 0xf) + 0xf) -
                              (*(byte *)(param_1 + 0x6a) & 0xf)))) {
            iVar8 = *(int *)(param_1 + 0x108);
            if (-*(int *)(param_1 + 0x104) < iVar8) {
              if (iVar8 < 0) {
                *(int *)(param_1 + 0x108) = -(iVar8 >> 1);
                if (0 < *(int *)(param_1 + 0x104)) {
                  *(int *)(param_1 + 0x104) = -(*(int *)(param_1 + 0x104) >> 1);
                }
              }
              while ((bVar3 = true, local_18[0] == 0xb7 &&
                     (bVar3 = bVar4,
                     0xe < (int)(((*(byte *)(param_1 + 0x68) & 0xf) + 0xf) -
                                (*(ushort *)(param_1 + 0x6a) & 0xf))))) {
                iVar8 = *(ushort *)(param_1 + 0x6a) + 1;
                *(short *)(param_1 + 0x6a) = (short)iVar8;
                local_18[0] = FUN_8001fea4(param_1,(int)*(short *)(param_1 + 0x68),
                                           iVar8 * 0x10000 >> 0x10);
              }
            }
            else {
              if (0 < *(int *)(param_1 + 0x104)) {
                *(int *)(param_1 + 0x104) = -(*(int *)(param_1 + 0x104) >> 1);
                if (*(int *)(param_1 + 0x108) < 0) {
                  *(int *)(param_1 + 0x108) = -(*(int *)(param_1 + 0x108) >> 1);
                }
              }
              while ((bVar3 = true, local_18[0] == 0xb7 &&
                     (bVar3 = bVar4,
                     0xe < (int)(((*(ushort *)(param_1 + 0x68) & 0xf) + 0xf) -
                                (*(byte *)(param_1 + 0x6a) & 0xf))))) {
                iVar8 = *(ushort *)(param_1 + 0x68) - 1;
                *(short *)(param_1 + 0x68) = (short)iVar8;
                local_18[0] = FUN_8001fea4(param_1,iVar8 * 0x10000 >> 0x10,
                                           (int)*(short *)(param_1 + 0x6a));
              }
            }
          }
          else if ((local_18[0] == 0xdd) &&
                  ((int)(((*(byte *)(param_1 + 0x68) & 0xf) + 0xf) -
                        (*(byte *)(param_1 + 0x6a) & 0xf)) < 0x10)) {
            iVar8 = *(int *)(param_1 + 0x108);
            if (*(int *)(param_1 + 0x104) < -iVar8) {
              if (0 < iVar8) {
                *(int *)(param_1 + 0x108) = -(iVar8 >> 1);
                if (*(int *)(param_1 + 0x104) < 0) {
                  *(int *)(param_1 + 0x104) = -(*(int *)(param_1 + 0x104) >> 1);
                }
              }
              while ((bVar3 = true, local_18[0] == 0xdd &&
                     (bVar3 = bVar4,
                     (int)(((*(byte *)(param_1 + 0x68) & 0xf) + 0xf) -
                          (*(ushort *)(param_1 + 0x6a) & 0xf)) < 0x10))) {
                iVar8 = *(ushort *)(param_1 + 0x6a) - 1;
                *(short *)(param_1 + 0x6a) = (short)iVar8;
                local_18[0] = FUN_8001fea4(param_1,(int)*(short *)(param_1 + 0x68),
                                           iVar8 * 0x10000 >> 0x10);
              }
            }
            else {
              if (*(int *)(param_1 + 0x104) < 0) {
                *(int *)(param_1 + 0x104) = -(*(int *)(param_1 + 0x104) >> 1);
                if (0 < *(int *)(param_1 + 0x108)) {
                  *(int *)(param_1 + 0x108) = -(*(int *)(param_1 + 0x108) >> 1);
                }
              }
              while ((bVar3 = true, local_18[0] == 0xdd &&
                     (bVar3 = bVar4,
                     (int)(((*(ushort *)(param_1 + 0x68) & 0xf) + 0xf) -
                          (*(byte *)(param_1 + 0x6a) & 0xf)) < 0x10))) {
                iVar8 = *(ushort *)(param_1 + 0x68) + 1;
                *(short *)(param_1 + 0x68) = (short)iVar8;
                local_18[0] = FUN_8001fea4(param_1,iVar8 * 0x10000 >> 0x10,
                                           (int)*(short *)(param_1 + 0x6a));
              }
            }
          }
          else if ((local_18[0] == 0xdf) &&
                  (0xe < (byte)((*(byte *)(param_1 + 0x68) & 0xf) +
                               (*(byte *)(param_1 + 0x6a) & 0xf)))) {
            iVar8 = *(int *)(param_1 + 0x108);
            if (-*(int *)(param_1 + 0x104) < -iVar8) {
              if (0 < iVar8) {
                *(int *)(param_1 + 0x108) = -(iVar8 >> 1);
                if (0 < *(int *)(param_1 + 0x104)) {
                  *(int *)(param_1 + 0x104) = -(*(int *)(param_1 + 0x104) >> 1);
                }
              }
              while ((bVar3 = true, local_18[0] == 0xdf &&
                     (bVar3 = bVar4,
                     0xe < (*(byte *)(param_1 + 0x68) & 0xf) + (*(ushort *)(param_1 + 0x6a) & 0xf)))
                    ) {
                iVar8 = *(ushort *)(param_1 + 0x6a) - 1;
                *(short *)(param_1 + 0x6a) = (short)iVar8;
                local_18[0] = FUN_8001fea4(param_1,(int)*(short *)(param_1 + 0x68),
                                           iVar8 * 0x10000 >> 0x10);
              }
            }
            else {
              if (0 < *(int *)(param_1 + 0x104)) {
                *(int *)(param_1 + 0x104) = -(*(int *)(param_1 + 0x104) >> 1);
                if (0 < *(int *)(param_1 + 0x108)) {
                  *(int *)(param_1 + 0x108) = -(*(int *)(param_1 + 0x108) >> 1);
                }
              }
              while ((bVar3 = true, local_18[0] == 0xdf &&
                     (bVar3 = bVar4,
                     0xe < (*(ushort *)(param_1 + 0x68) & 0xf) + (*(byte *)(param_1 + 0x6a) & 0xf)))
                    ) {
                iVar8 = *(ushort *)(param_1 + 0x68) - 1;
                *(short *)(param_1 + 0x68) = (short)iVar8;
                local_18[0] = FUN_8001fea4(param_1,iVar8 * 0x10000 >> 0x10,
                                           (int)*(short *)(param_1 + 0x6a));
              }
            }
          }
          else if (local_18[0] == 0xb6) {
            if (*(int *)(param_1 + 0x108) < 0) {
              *(int *)(param_1 + 0x108) = -(*(int *)(param_1 + 0x108) >> 1);
            }
            *(ushort *)(param_1 + 0x6a) =
                 (*(ushort *)(param_1 + 0x6a) - (*(ushort *)(param_1 + 0x6a) & 0xf)) + 0x10;
          }
          else if (local_18[0] == 0xde) {
            if (0 < *(int *)(param_1 + 0x108)) {
              *(int *)(param_1 + 0x108) = -(*(int *)(param_1 + 0x108) >> 1);
            }
            *(ushort *)(param_1 + 0x6a) =
                 *(ushort *)(param_1 + 0x6a) - ((*(ushort *)(param_1 + 0x6a) & 0xf) + 1);
          }
          else if (local_18[0] == 0xc9) {
            if (*(int *)(param_1 + 0x104) < 0) {
              *(int *)(param_1 + 0x104) = -(*(int *)(param_1 + 0x104) >> 1);
            }
            *(ushort *)(param_1 + 0x68) =
                 (*(ushort *)(param_1 + 0x68) - (*(ushort *)(param_1 + 0x68) & 0xf)) + 0x10;
          }
          else {
            bVar3 = true;
            if (local_18[0] == 0xcb) {
              if (0 < *(int *)(param_1 + 0x104)) {
                *(int *)(param_1 + 0x104) = -(*(int *)(param_1 + 0x104) >> 1);
              }
              *(ushort *)(param_1 + 0x68) =
                   *(ushort *)(param_1 + 0x68) - ((*(ushort *)(param_1 + 0x68) & 0xf) + 1);
              bVar3 = bVar4;
            }
          }
        }
        goto LAB_8006faf8;
      }
      if (local_18[0] == 0xb8) {
        if ((int)((uVar12 + 0xf) - uVar11) < 0x10) {
          sVar6 = uVar1 - (sVar6 + 1);
          goto LAB_8006f4a0;
        }
        sVar7 = uVar2 - (sVar7 + 1);
      }
      else {
        if (local_18[0] != 0xb9) goto LAB_8006f4d8;
        sVar7 = uVar2 - (sVar7 + 1);
      }
    }
LAB_8006f4b4:
    *(short *)(param_1 + 0x6a) = sVar7;
    *(undefined4 *)(param_1 + 0x108) = 0;
  }
  else {
    if (local_18[0] == 0xe0) {
      if (0xf < uVar11 + uVar12) goto LAB_8006f4ac;
      sVar6 = uVar1 - (sVar6 + 1);
    }
    else {
      if (0xe0 < local_18[0]) {
        if (local_18[0] != 0xe1) {
          if (local_18[0] == 0xe2) {
            sVar6 = uVar1 - sVar6;
            if ((int)((uVar12 + 0xf) - uVar11) < 0xf) {
              sVar7 = uVar2 - sVar7;
              goto LAB_8006f4b0;
            }
            goto LAB_8006f49c;
          }
          goto LAB_8006f4d8;
        }
LAB_8006f4ac:
        sVar7 = uVar2 - sVar7;
        goto LAB_8006f4b0;
      }
      if (local_18[0] == 0xcc) {
        sVar6 = uVar1 - (sVar6 + 1);
      }
      else {
        sVar6 = uVar1 - sVar6;
        if (local_18[0] != 0xce) goto LAB_8006f4d8;
LAB_8006f49c:
        sVar6 = sVar6 + 0x10;
      }
    }
LAB_8006f4a0:
    *(short *)(param_1 + 0x68) = sVar6;
    *(undefined4 *)(param_1 + 0x104) = 0;
  }
LAB_8006faf8:
  if (bVar3) {
    if (*(char *)(param_1 + 0x113) == '\0') {
      FUN_8001c4a0(param_1,0x6ae1a244);
    }
    *(undefined *)(param_1 + 0x113) = 1;
  }
  else {
    *(undefined *)(param_1 + 0x113) = 0;
  }
  iVar8 = *(short *)(param_1 + 0x6a) * 0x10000 + (uint)*(ushort *)(param_1 + 0x6e) +
          *(int *)(param_1 + 0x108);
  *(short *)(param_1 + 0x6e) = (short)iVar8;
  iVar10 = *(short *)(param_1 + 0x68) * 0x10000 + (uint)*(ushort *)(param_1 + 0x6c) +
           *(int *)(param_1 + 0x104);
  *(short *)(param_1 + 0x68) = (short)((uint)iVar10 >> 0x10);
  *(short *)(param_1 + 0x6a) = (short)((uint)iVar8 >> 0x10);
  *(short *)(param_1 + 0x6c) = (short)iVar10;
  return;
}



void FUN_8006fb90(int param_1)

{
  char cVar1;
  int iVar2;
  short sVar3;
  
  if ((**(ushort **)(param_1 + 0x100) & 0x2000) == 0) {
    if ((**(ushort **)(param_1 + 0x100) & 0x8000) == 0) {
      iVar2 = (int)*(char *)(param_1 + 0x10f);
      if (iVar2 < 1) {
        if ((iVar2 < 0) &&
           (*(char *)(param_1 + 0x10f) = (char)(iVar2 + 8), 0 < (iVar2 + 8) * 0x1000000)) {
          *(undefined *)(param_1 + 0x10f) = 0;
        }
      }
      else {
        *(char *)(param_1 + 0x10f) = (char)(iVar2 + -8);
        if ((iVar2 + -8) * 0x1000000 < 0) {
          *(undefined *)(param_1 + 0x10f) = 0;
        }
      }
    }
    else {
      *(undefined *)(param_1 + 0x111) = 1;
      cVar1 = *(char *)(param_1 + 0x10f) + -0x10;
      *(char *)(param_1 + 0x10f) = cVar1;
      if (cVar1 < -0x40) {
        *(undefined *)(param_1 + 0x10f) = 0xc0;
      }
    }
  }
  else {
    *(undefined *)(param_1 + 0x111) = 1;
    cVar1 = *(char *)(param_1 + 0x10f) + '\x10';
    *(char *)(param_1 + 0x10f) = cVar1;
    if ('@' < cVar1) {
      *(undefined *)(param_1 + 0x10f) = 0x40;
    }
  }
  sVar3 = *(short *)(param_1 + 0x10c) + (short)*(char *)(param_1 + 0x10f);
  *(short *)(param_1 + 0x10c) = sVar3;
  if ((DAT_800a59c8 & **(ushort **)(param_1 + 0x100)) != 0) {
    iVar2 = csin(0x400 - sVar3);
    *(int *)(param_1 + 0x108) = *(int *)(param_1 + 0x108) - ((iVar2 << 0xd) >> 0xc);
    iVar2 = ccos(0x400 - *(short *)(param_1 + 0x10c));
    *(undefined *)(param_1 + 0x110) = 1;
    *(int *)(param_1 + 0x104) = *(int *)(param_1 + 0x104) + ((iVar2 << 0xd) >> 0xc);
  }
  return;
}



void FUN_8006fd08(int param_1)

{
  undefined2 uVar1;
  uint uVar2;
  
  uVar2 = *(short *)(param_1 + 0x10c) + 0x80 >> 8 & 0xf;
  *(short *)(param_1 + 0x72) = (short)(char)*(short *)(param_1 + 0x10c);
  if ((*(char *)(param_1 + 0x110) != '\0') && (*(short *)(param_1 + 0xec) == 4)) {
    *(undefined2 *)(param_1 + 0xec) = 2;
  }
  if (uVar2 != *(byte *)(param_1 + 0x10e)) {
    *(char *)(param_1 + 0x10e) = (char)uVar2;
    uVar1 = *(undefined2 *)(param_1 + 0xec);
    *(undefined4 *)(param_1 + 0xcc) = *(undefined4 *)(&DAT_8009cad8 + uVar2 * 4);
    FUN_8007bbfc(param_1 + 0x78);
    FUN_8001d744(param_1);
    *(undefined2 *)(param_1 + 0xec) = uVar1;
    *(undefined *)(param_1 + 0x76) = 1;
  }
  return;
}



undefined4 FUN_80070098(undefined4 param_1,char *param_2)

{
  char cVar1;
  undefined4 uVar2;
  
  cVar1 = *param_2;
  uVar2 = 1;
  if ((2 < (byte)(cVar1 + 0x4bU)) &&
     (((cVar1 == -0x37 || (cVar1 == -0x35)) || (uVar2 = 0, (byte)(cVar1 + 0x23U) < 3)))) {
    uVar2 = 1;
  }
  return uVar2;
}



void FUN_800700e8(int param_1,undefined4 param_2,short param_3)

{
  char cVar1;
  short sVar2;
  short sVar3;
  int iVar4;
  int iVar5;
  code *pcVar6;
  short unaff_s2;
  uint local_38;
  undefined local_34 [4];
  undefined local_30;
  undefined local_2f;
  undefined local_2e [22];
  
  iVar5 = (int)*(short *)(param_1 + 0x26);
  sVar2 = *(short *)(param_1 + 0x68);
  if (iVar5 != 0) {
    if (iVar5 < 1) {
      pcVar6 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar4 = iVar5 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      param_3 = (short)*(undefined4 *)(iVar4 + -8);
      pcVar6 = *(code **)(iVar4 + -4);
    }
    iVar4 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar5 << 0x10) {
      iVar4 = param_3 + iVar4;
    }
    sVar2 = (*pcVar6)(param_1 + iVar4,(int)sVar2);
  }
  iVar5 = (int)*(short *)(param_1 + 0x2e);
  sVar3 = *(short *)(param_1 + 0x6a);
  if (iVar5 != 0) {
    if (iVar5 < 1) {
      pcVar6 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar4 = iVar5 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      unaff_s2 = (short)*(undefined4 *)(iVar4 + -8);
      pcVar6 = *(code **)(iVar4 + -4);
    }
    iVar4 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar5 << 0x10) {
      iVar4 = unaff_s2 + iVar4;
    }
    sVar3 = (*pcVar6)(param_1 + iVar4,(int)sVar3);
  }
  cVar1 = FUN_800245b8(BUF_PTR,(int)sVar2,(int)sVar3,&local_38,local_34);
  if (cVar1 != '\0') {
    if (local_38 == 0x65) {
      FUN_80025660(BUF_PTR,0);
    }
    else {
      if (local_38 < 0x66) {
        if (local_38 == 0x51) {
          FUN_80025660(BUF_PTR,1);
          return;
        }
        if (local_38 < 0x52) {
          if (local_38 == 0) {
            FUN_8001eaa8(param_1,DAT_800a5ff0,PTR_LAB_800a5ff4);
            *(undefined *)(param_1 + 0x119) = local_34[0];
            return;
          }
        }
        else if (local_38 == 0x52) {
          FUN_800256b4(BUF_PTR,1,&local_30);
          return;
        }
      }
      else {
        if (local_38 == 0x79) {
          FUN_80025660(BUF_PTR,2);
          return;
        }
        if (local_38 < 0x7a) {
          if (local_38 == 0x66) {
            FUN_800256b4(BUF_PTR,0,&local_30);
            return;
          }
        }
        else if (local_38 == 0x7a) {
          FUN_800256b4(BUF_PTR,2,&local_30);
          return;
        }
      }
      cVar1 = FUN_8007eec8(BUF_PTR,local_38 & 0xff,&local_30,&local_2f,local_2e);
      if (cVar1 != '\0') {
        iVar5 = *(int *)(param_1 + 0x34);
        *(undefined *)(iVar5 + 0x34) = local_30;
        *(undefined *)(iVar5 + 0x35) = local_2f;
        *(undefined *)(iVar5 + 0x36) = local_2e[0];
      }
    }
  }
  return;
}



void FUN_800703d4(int param_1,uint param_2,int param_3)

{
  int iVar1;
  undefined4 uVar2;
  int a;
  int iVar3;
  
  a = 0xc00 - (param_2 & 0xffff);
  iVar1 = csin(a);
  iVar3 = iVar1 * param_3 >> 0xc;
  iVar1 = ccos(a);
  iVar1 = iVar1 * param_3 >> 0xc;
  uVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x114,1,0);
  uVar2 = FUN_80034bb4(uVar2,*(undefined4 *)(param_1 + 0x60),
                       (int)(((uint)*(ushort *)(param_1 + 0x68) + iVar1) * 0x10000) >> 0x10,
                       (int)(((uint)*(ushort *)(param_1 + 0x6a) - iVar3) * 0x10000) >> 0x10,
                       (iVar1 << 0x10) >> 6,iVar3 * -0x10000 >> 6);
  FUN_800213a4(BUF_PTR,uVar2);
  return;
}



undefined4 * FUN_80070d28(undefined4 *param_1,undefined4 param_2,short param_3,short param_4)

{
  undefined uVar1;
  undefined uVar2;
  undefined *puVar3;
  undefined4 *puVar4;
  undefined4 uVar5;
  int iVar6;
  int iVar7;
  undefined4 local_28;
  
  FUN_8001c864(param_1,&DAT_8009cb18,1000,(int)param_3,(int)param_4);
  param_1[6] = &DAT_80011d34;
  *(undefined2 *)(param_1 + 4) = 1000;
  param_1[0x40] = param_2;
  *(undefined *)(param_1 + 0x46) = 0;
  *(undefined *)((int)param_1 + 0x119) = 0;
  *(undefined *)((int)param_1 + 0x11a) = 0;
  *(undefined2 *)((int)param_1 + 0x11e) = 0;
  *(undefined *)((int)param_1 + 0x11b) = 0;
  *(undefined *)(param_1 + 0x47) = 0;
  *(undefined2 *)(param_1 + 0x48) = 0;
  *(undefined *)((int)param_1 + 0x122) = 0x40;
  *(undefined *)((int)param_1 + 0x123) = 0x40;
  *(undefined *)(param_1 + 0x49) = 0x40;
  *(undefined *)((int)param_1 + 0x11d) = 0;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_800713b4;
  param_1[2] = 0xffff0000;
  param_1[3] = FUN_80071520;
  puVar4 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x104,1,0);
  FUN_8001c71c(puVar4,0xca1b20cb,2000,(int)*(short *)(param_1 + 0x1a),
               (int)((*(ushort *)((int)param_1 + 0x6a) + 0x80) * 0x10000) >> 0x10,0);
  puVar4[6] = &DAT_80011d74;
  FUN_8001d1bc(puVar4,(int)*(short *)((int)puVar4 + 0xda));
  FUN_8001d23c(puVar4,0);
  *puVar4 = 0xffff0000;
  puVar4[1] = &LAB_800705dc;
  *(undefined *)(puVar4 + 0x40) = 0xaa;
  FUN_80020f64(BUF_PTR,puVar4);
  local_28 = CONCAT22(*(short *)((int)param_1 + 0x6a) + 0x80,*(undefined2 *)(param_1 + 0x1a));
  FUN_800722ac(param_1);
  uVar5 = FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  iVar6 = FUN_80030d08(uVar5,0x4835000,local_28,0,0x10000,0x3d4,0);
  *(undefined2 *)(iVar6 + 0x100) = 0x6f;
  FUN_8001d23c(iVar6,1);
  iVar7 = *(int *)(iVar6 + 0x34);
  uVar1 = *(undefined *)((int)param_1 + 0x123);
  uVar2 = *(undefined *)(param_1 + 0x49);
  *(undefined *)(iVar7 + 0x34) = *(undefined *)((int)param_1 + 0x122);
  *(undefined *)(iVar7 + 0x35) = uVar1;
  *(undefined *)(iVar7 + 0x36) = uVar2;
  FUN_800213a4(BUF_PTR,iVar6);
  puVar3 = PTR_LAB_800a6004;
  uVar5 = DAT_800a6000;
  param_1[0x41] = 0;
  param_1[0x43] = 0xffffffff;
  FUN_8001eaa8(param_1,uVar5,puVar3);
  return param_1;
}



int FUN_80071008(int param_1,undefined param_2,short param_3,uint param_4)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  short in_t0;
  code *pcVar4;
  short unaff_s2;
  
  iVar3 = (int)*(short *)(param_1 + 0x2e);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar1 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      in_t0 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar4 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar3 << 0x10) {
      iVar1 = in_t0 + iVar1;
    }
    param_4 = (*pcVar4)(param_1 + iVar1,(int)(short)param_4);
  }
  iVar3 = (int)*(short *)(param_1 + 0x26);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar1 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      unaff_s2 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar4 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar3 << 0x10) {
      iVar1 = unaff_s2 + iVar1;
    }
    param_3 = (*pcVar4)(param_1 + iVar1,(int)param_3);
  }
  uVar2 = FUN_80081c68(BUF_PTR,param_2,(int)param_3);
  iVar3 = *(int *)(param_1 + 0x5c);
  iVar1 = ((param_4 | 0xf) - (uVar2 & 0xff)) * 0x10000;
  uVar2 = iVar1 / iVar3;
  if (iVar3 == 0) {
    trap(0x1c00);
  }
  if ((iVar3 == -1) && (iVar1 == -0x80000000)) {
    trap(0x1800);
  }
  iVar3 = uVar2 << 0x10;
  if ((*(int *)(param_1 + 0x58) == 0xc000) && (iVar3 = uVar2 << 0x10, (uVar2 & 3) - 1 < 2)) {
    iVar3 = (uVar2 + 1) * 0x10000;
  }
  return iVar3 >> 0x10;
}



bool FUN_800711e8(int param_1,undefined param_2,short param_3,uint param_4,ushort param_5)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  short in_t0;
  code *pcVar4;
  short unaff_s2;
  
  iVar3 = (int)*(short *)(param_1 + 0x2e);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar1 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      in_t0 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar4 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar3 << 0x10) {
      iVar1 = in_t0 + iVar1;
    }
    param_4 = (*pcVar4)(param_1 + iVar1,(int)(short)param_4);
  }
  iVar3 = (int)*(short *)(param_1 + 0x26);
  if (iVar3 != 0) {
    if (iVar3 < 1) {
      pcVar4 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar1 = iVar3 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      unaff_s2 = (short)*(undefined4 *)(iVar1 + -8);
      pcVar4 = *(code **)(iVar1 + -4);
    }
    iVar1 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar3 << 0x10) {
      iVar1 = unaff_s2 + iVar1;
    }
    param_3 = (*pcVar4)(param_1 + iVar1,(int)param_3);
  }
  uVar2 = FUN_80081c68(BUF_PTR,param_2,(int)param_3);
  iVar3 = *(int *)(param_1 + 0x5c);
  iVar1 = ((param_4 | 0xf) - (uVar2 & 0xff)) * 0x10000;
  if (iVar3 == 0) {
    trap(0x1c00);
  }
  if ((iVar3 == -1) && (iVar1 == -0x80000000)) {
    trap(0x1800);
  }
  return ((uint)param_5 - iVar1 / iVar3 & 0xffff) < 10;
}



undefined4 FUN_80071520(int param_1,short param_2,undefined4 param_3,int param_4)

{
  undefined2 uVar1;
  short sVar2;
  int iVar3;
  int iVar4;
  undefined4 uVar5;
  undefined *puVar6;
  short in_t0;
  code *pcVar7;
  short unaff_s2;
  
  uVar5 = DAT_800a6018;
  puVar6 = PTR_LAB_800a601c;
  if (param_2 != 0x1000) {
    if (param_2 != 0x100f) {
      return 0;
    }
    iVar4 = (int)*(short *)(param_4 + 0x26);
    if (iVar4 == 0) {
      *(short *)(param_1 + 0x68) = *(short *)(param_4 + 0x68);
    }
    else {
      if (iVar4 < 1) {
        pcVar7 = *(code **)(param_4 + 0x28);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(param_4 + *(short *)(param_4 + 0x28));
        in_t0 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar7 = *(code **)(iVar3 + -4);
      }
      iVar3 = (int)*(short *)(param_4 + 0x24);
      if (0 < iVar4 << 0x10) {
        iVar3 = in_t0 + iVar3;
      }
      uVar1 = (*pcVar7)(param_4 + iVar3,(int)*(short *)(param_4 + 0x68));
      *(undefined2 *)(param_1 + 0x68) = uVar1;
    }
    iVar4 = (int)*(short *)(param_4 + 0x2e);
    sVar2 = *(short *)(param_4 + 0x6a);
    if (iVar4 != 0) {
      if (iVar4 < 1) {
        pcVar7 = *(code **)(param_4 + 0x30);
      }
      else {
        iVar3 = iVar4 * 8 + *(int *)(param_4 + *(short *)(param_4 + 0x30));
        unaff_s2 = (short)*(undefined4 *)(iVar3 + -8);
        pcVar7 = *(code **)(iVar3 + -4);
      }
      iVar3 = (int)*(short *)(param_4 + 0x2c);
      if (0 < iVar4 << 0x10) {
        iVar3 = unaff_s2 + iVar3;
      }
      sVar2 = (*pcVar7)(param_4 + iVar3,(int)sVar2);
    }
    puVar6 = PTR_LAB_800a6014;
    uVar5 = DAT_800a6010;
    *(short *)(param_1 + 0x6a) = sVar2 + 0x20;
  }
  FUN_8001eaa8(param_1,uVar5,puVar6);
  return 0;
}



void FUN_80071760(int param_1)

{
  char cVar1;
  char cVar2;
  char cVar3;
  char cVar4;
  char cVar5;
  byte bVar6;
  undefined2 uVar7;
  int iVar8;
  undefined4 uVar9;
  undefined *puVar10;
  short sVar11;
  
  iVar8 = *(short *)(param_1 + 0x68) * 0x10000 + (uint)*(ushort *)(param_1 + 0x6c) +
          *(int *)(param_1 + 0x104);
  *(short *)(param_1 + 0x68) = (short)((uint)iVar8 >> 0x10);
  *(short *)(param_1 + 0x6c) = (short)iVar8;
  cVar1 = FUN_8001fea4(param_1,(int)((*(ushort *)(param_1 + 0x68) + 2) * 0x10000) >> 0x10,
                       (int)((*(ushort *)(param_1 + 0x6a) - 0xf) * 0x10000) >> 0x10);
  cVar2 = FUN_8001fea4(param_1,(int)((*(ushort *)(param_1 + 0x68) + 2) * 0x10000) >> 0x10,
                       (int)((*(ushort *)(param_1 + 0x6a) - 0x10) * 0x10000) >> 0x10);
  cVar3 = FUN_8001fea4(param_1,(int)((*(ushort *)(param_1 + 0x68) + 2) * 0x10000) >> 0x10,
                       (int)((*(ushort *)(param_1 + 0x6a) - 0x20) * 0x10000) >> 0x10);
  cVar4 = FUN_8001fea4(param_1,(int)((*(ushort *)(param_1 + 0x68) + 2) * 0x10000) >> 0x10,
                       (int)((*(ushort *)(param_1 + 0x6a) - 0x30) * 0x10000) >> 0x10);
  cVar5 = FUN_8001fea4(param_1,(int)((*(ushort *)(param_1 + 0x68) + 2) * 0x10000) >> 0x10,
                       (int)((*(ushort *)(param_1 + 0x6a) - 0x40) * 0x10000) >> 0x10);
  uVar9 = DAT_800a6018;
  puVar10 = PTR_LAB_800a601c;
  if ((((cVar1 == -0x4b) || (cVar2 == -0x4b)) || (cVar3 == -0x4b)) ||
     ((cVar4 == -0x4b || (cVar5 == -0x4b)))) {
LAB_800719c0:
    FUN_8001eaa8(param_1,uVar9,puVar10);
  }
  else {
    bVar6 = FUN_8001fea4(param_1,(int)*(short *)(param_1 + 0x68),
                         (int)((*(ushort *)(param_1 + 0x6a) - 7) * 0x10000) >> 0x10);
    if (bVar6 == 0 || 0x3b < bVar6) {
      bVar6 = FUN_8001fea4(param_1,(int)*(short *)(param_1 + 0x68),
                           (int)((*(ushort *)(param_1 + 0x6a) + 2) * 0x10000) >> 0x10);
      uVar9 = DAT_800a6018;
      puVar10 = PTR_LAB_800a601c;
      if (bVar6 == 0xb5) goto LAB_800719c0;
      if (bVar6 == 0 || 0x3b < bVar6) {
        if (bVar6 != 0) {
          return;
        }
        bVar6 = FUN_8001fea4(param_1,(int)*(short *)(param_1 + 0x68),
                             (int)((*(ushort *)(param_1 + 0x6a) + 0x10) * 0x10000) >> 0x10);
        uVar9 = DAT_800a6020;
        puVar10 = PTR_LAB_800a6024;
        if (bVar6 == 0 || 0x3b < bVar6) goto LAB_800719c0;
        iVar8 = (int)*(short *)(param_1 + 0x68);
        sVar11 = *(short *)(param_1 + 0x6a) + 0x10;
      }
      else {
        iVar8 = (int)*(short *)(param_1 + 0x68);
        sVar11 = *(short *)(param_1 + 0x6a) + 2;
      }
    }
    else {
      iVar8 = (int)*(short *)(param_1 + 0x68);
      sVar11 = *(short *)(param_1 + 0x6a) + -7;
    }
    uVar7 = FUN_80071008(param_1,bVar6,iVar8,(int)sVar11);
    *(undefined2 *)(param_1 + 0x6a) = uVar7;
  }
  return;
}



void FUN_80072084(int param_1)

{
  bool bVar1;
  int iVar2;
  
  *(undefined4 *)(param_1 + 0x114) = 0;
  bVar1 = false;
  if ((DAT_800a59c8 & *(ushort *)(*(int *)(param_1 + 0x100) + 2)) != 0) {
    if (*(char *)(param_1 + 0x11a) == '\0') {
      FUN_8001eaa8(param_1,DAT_800a6030,PTR_LAB_800a6034);
    }
    else {
      *(undefined *)(param_1 + 0x11b) = 10;
    }
  }
  if ((((**(ushort **)(param_1 + 0x100) & 0x2000) != 0) && (*(short *)(param_1 + 0x110) < 0x100)) &&
     (iVar2 = *(int *)(param_1 + 0x104) + 0x4000, *(int *)(param_1 + 0x104) < 0x80000)) {
    *(int *)(param_1 + 0x104) = iVar2;
    bVar1 = true;
    if (0x80000 < iVar2) {
      *(undefined4 *)(param_1 + 0x104) = 0x80000;
    }
  }
  if ((((**(ushort **)(param_1 + 0x100) & 0x8000) != 0) && (0x40 < *(short *)(param_1 + 0x110))) &&
     (0x20000 < *(int *)(param_1 + 0x104))) {
    if (bVar1) goto LAB_80072210;
    iVar2 = *(int *)(param_1 + 0x104) + -0x8000;
    *(int *)(param_1 + 0x104) = iVar2;
    if (iVar2 < 0x20000) {
      *(undefined4 *)(param_1 + 0x104) = 0x20000;
    }
    bVar1 = true;
  }
  if (!bVar1) {
    iVar2 = *(int *)(param_1 + 0x104);
    if (iVar2 < 0x50000) {
      *(int *)(param_1 + 0x104) = iVar2 + 0x4000;
      if (0x50000 < iVar2 + 0x4000) {
        *(undefined4 *)(param_1 + 0x104) = 0x50000;
      }
    }
    else if ((0x50000 < iVar2) &&
            (*(int *)(param_1 + 0x104) = iVar2 + -0x8000, iVar2 + -0x8000 < 0x50000)) {
      *(undefined4 *)(param_1 + 0x104) = 0x50000;
    }
  }
LAB_80072210:
  if (*(char *)(param_1 + 0x119) == '\0') {
    if (*(char *)(param_1 + 0x118) != '\0') {
      *(char *)(param_1 + 0x118) = *(char *)(param_1 + 0x118) + -1;
      if ((DAT_800a59c8 & **(ushort **)(param_1 + 0x100)) == 0) {
        if (*(int *)(param_1 + 0x108) < -0x48000) {
          *(undefined4 *)(param_1 + 0x108) = 0xfffb8000;
        }
      }
      else {
        *(undefined4 *)(param_1 + 0x114) = 0xffffee00;
      }
    }
  }
  else {
    *(char *)(param_1 + 0x119) = *(char *)(param_1 + 0x119) + -1;
    *(undefined4 *)(param_1 + 0x114) = 0xffffee00;
    *(char *)(param_1 + 0x118) = *(char *)(param_1 + 0x118) + -1;
  }
  return;
}



void FUN_800722ac(int param_1,undefined4 param_2,short param_3)

{
  undefined uVar1;
  char cVar2;
  undefined uVar3;
  short sVar4;
  short sVar5;
  int iVar6;
  int iVar7;
  code *pcVar8;
  short unaff_s2;
  uint local_40;
  undefined local_3c [36];
  
  iVar7 = (int)*(short *)(param_1 + 0x26);
  sVar4 = *(short *)(param_1 + 0x68);
  if (iVar7 != 0) {
    if (iVar7 < 1) {
      pcVar8 = *(code **)(param_1 + 0x28);
    }
    else {
      iVar6 = iVar7 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x28));
      param_3 = (short)*(undefined4 *)(iVar6 + -8);
      pcVar8 = *(code **)(iVar6 + -4);
    }
    iVar6 = (int)*(short *)(param_1 + 0x24);
    if (0 < iVar7 << 0x10) {
      iVar6 = param_3 + iVar6;
    }
    sVar4 = (*pcVar8)(param_1 + iVar6,(int)sVar4);
  }
  iVar7 = (int)*(short *)(param_1 + 0x2e);
  sVar5 = *(short *)(param_1 + 0x6a);
  if (iVar7 != 0) {
    if (iVar7 < 1) {
      pcVar8 = *(code **)(param_1 + 0x30);
    }
    else {
      iVar6 = iVar7 * 8 + *(int *)(param_1 + *(short *)(param_1 + 0x30));
      unaff_s2 = (short)*(undefined4 *)(iVar6 + -8);
      pcVar8 = *(code **)(iVar6 + -4);
    }
    iVar6 = (int)*(short *)(param_1 + 0x2c);
    if (0 < iVar7 << 0x10) {
      iVar6 = unaff_s2 + iVar6;
    }
    sVar5 = (*pcVar8)(param_1 + iVar6,(int)sVar5);
  }
  cVar2 = FUN_800245b8(BUF_PTR,(int)sVar4,(int)sVar5,&local_40,local_3c);
  if (cVar2 != '\0') {
    if (local_40 == 0x65) {
      FUN_80025660(BUF_PTR,0);
    }
    else {
      if (local_40 < 0x66) {
        if (local_40 == 0x51) {
          FUN_80025660(BUF_PTR,1);
          return;
        }
        if (local_40 < 0x52) {
          if (local_40 == 0) {
            if (*(char *)(param_1 + 0x11d) == '\0') {
              return;
            }
            if ((*(short *)(param_1 + 0xa2) == -1) &&
               (*(undefined **)(param_1 + 0xa4) == &LAB_80072688)) {
              *(undefined4 *)(param_1 + 0x1c) = 0xffff0000;
              *(undefined **)(param_1 + 0x20) = &LAB_800719f0;
            }
            *(undefined *)(param_1 + 0x11d) = 0;
            *(undefined2 *)(param_1 + 0x11e) = 0x5a;
            *(undefined *)(param_1 + 0x11c) = local_3c[0];
            return;
          }
          if (local_40 == 0x2d) {
            if (*(char *)(param_1 + 0x11d) == '\0') {
              return;
            }
            if ((*(short *)(param_1 + 0xa2) == -1) &&
               (*(undefined **)(param_1 + 0xa4) == &LAB_80072688)) {
              *(undefined4 *)(param_1 + 0x1c) = 0xffff0000;
              *(undefined **)(param_1 + 0x20) = &LAB_800719f0;
            }
            uVar3 = 99;
            if (2 < (byte)PTR_DAT_800a59d8[0x1a]) {
              uVar3 = local_3c[0];
            }
            *(undefined *)(param_1 + 0x11c) = uVar3;
            *(undefined *)(param_1 + 0x11d) = 0;
            *(undefined2 *)(param_1 + 0x11e) = 0x5a;
            return;
          }
        }
        else if (local_40 == 0x52) {
          FUN_800256b4(BUF_PTR,1,param_1 + 0x122);
          return;
        }
      }
      else {
        if (local_40 == 0x79) {
          FUN_80025660(BUF_PTR,2);
          return;
        }
        if (local_40 < 0x7a) {
          if (local_40 == 0x66) {
            FUN_800256b4(BUF_PTR,0,param_1 + 0x122);
            return;
          }
        }
        else if (local_40 == 0x7a) {
          FUN_800256b4(BUF_PTR,2,param_1 + 0x122);
          return;
        }
      }
      cVar2 = FUN_8007eec8(BUF_PTR,local_40 & 0xff,param_1 + 0x122,param_1 + 0x123,param_1 + 0x124);
      if (cVar2 != '\0') {
        iVar7 = *(int *)(param_1 + 0x34);
        uVar3 = *(undefined *)(param_1 + 0x123);
        uVar1 = *(undefined *)(param_1 + 0x124);
        *(undefined *)(iVar7 + 0x34) = *(undefined *)(param_1 + 0x122);
        *(undefined *)(iVar7 + 0x35) = uVar3;
        *(undefined *)(iVar7 + 0x36) = uVar1;
      }
    }
  }
  return;
}



int FUN_800732f8(int param_1,short param_2,short param_3)

{
  u_short uVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  
  FUN_8001c71c(param_1,0x1b301085,1000,(int)param_2,(int)param_3,0);
  *(undefined **)(param_1 + 0x18) = &DAT_80011dd4;
  *(undefined4 *)(param_1 + 0x24) = 0xffff0000;
  *(undefined **)(param_1 + 0x28) = &LAB_8001a268;
  *(undefined4 *)(param_1 + 0x2c) = 0xffff0000;
  *(undefined **)(param_1 + 0x30) = &LAB_8001a298;
  *(undefined4 *)(param_1 + 0x58) = 0xc000;
  iVar2 = *(int *)(param_1 + 0x58);
  iVar5 = (int)*(short *)(param_1 + 0x68) << 0x10;
  if (iVar2 == 0) {
    trap(0x1c00);
  }
  if ((iVar2 == -1) && (iVar5 == -0x80000000)) {
    trap(0x1800);
  }
  *(undefined4 *)(param_1 + 0x5c) = 0xc000;
  iVar3 = *(int *)(param_1 + 0x5c);
  iVar4 = (int)*(short *)(param_1 + 0x6a) << 0x10;
  if (iVar3 == 0) {
    trap(0x1c00);
  }
  if ((iVar3 == -1) && (iVar4 == -0x80000000)) {
    trap(0x1800);
  }
  *(undefined4 *)(param_1 + 0x50) = 0xc000;
  *(undefined4 *)(param_1 + 0x54) = 0xc000;
  *(undefined2 *)(param_1 + 0x10) = 0x442;
  *(short *)(param_1 + 0x68) = (short)(iVar5 / iVar2);
  *(short *)(param_1 + 0x6a) = (short)(iVar4 / iVar3);
  *(undefined4 *)(param_1 + 8) = 0xffff0000;
  *(undefined **)(param_1 + 0xc) = &LAB_800734bc;
  FUN_8001d23c(param_1,0);
  *(undefined4 *)(param_1 + 0x1c) = 0xffff0000;
  *(code **)(param_1 + 0x20) = FUN_8001cc68;
  iVar2 = *(int *)(param_1 + 0x34);
  uVar1 = GetTPage((uint)*(byte *)(iVar2 + 0x32),1,(int)*(short *)(iVar2 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar2 + 0x12) & 0xffffff00);
  *(u_short *)(iVar2 + 0x24) = uVar1;
  return param_1;
}



undefined4 * FUN_800738f4(undefined4 *param_1,undefined4 param_2,short param_3,short param_4)

{
  FUN_8001c864(param_1,&DAT_8009cb38,1000,(int)param_3,(int)param_4);
  param_1[6] = &DAT_80011db4;
  param_1[0x43] = 0xffffffff;
  *(undefined2 *)(param_1 + 4) = 1000;
  param_1[0x40] = param_2;
  param_1[0x41] = 0;
  *(undefined *)(param_1 + 0x42) = 0;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80073a48;
  param_1[7] = 0xffff0000;
  param_1[8] = &LAB_80073b48;
  FUN_8001eaa8(param_1,DAT_800a6058,PTR_LAB_800a605c);
  return param_1;
}



void FUN_80073ca8(int param_1)

{
  int iVar1;
  int iVar2;
  
  FUN_8001fea4(param_1,(int)*(short *)(param_1 + 0x68),(int)*(short *)(param_1 + 0x6a));
  if ((**(ushort **)(param_1 + 0x100) & 0x1000) == 0) {
    iVar2 = 0xc000;
    if ((**(ushort **)(param_1 + 0x100) & 0x4000) == 0) goto LAB_80073d0c;
    iVar1 = *(int *)(param_1 + 0x104);
  }
  else {
    iVar1 = *(int *)(param_1 + 0x104);
    iVar2 = -0xc000;
  }
  *(int *)(param_1 + 0x104) = iVar1 + iVar2;
LAB_80073d0c:
  if ((*(ushort *)(*(int *)(param_1 + 0x100) + 2) & 0xf0) != 0) {
    FUN_8001eaa8(param_1,DAT_800a6068,PTR_LAB_800a606c);
  }
  return;
}



undefined4 * FUN_800740c0(undefined4 *param_1,undefined4 param_2,short param_3,short param_4)

{
  undefined *puVar1;
  undefined4 uVar2;
  int iVar3;
  undefined4 uVar4;
  
  FUN_8001c864(param_1,&DAT_8009cb48,1000,(int)param_3,(int)param_4);
  puVar1 = PTR_DAT_800a59b0;
  param_1[6] = &DAT_80011e14;
  uVar2 = FUN_800143ec(puVar1,0x100,1,0);
  iVar3 = FUN_8001c71c(uVar2,0x3da80d13,0x3e9,(int)param_3,(int)param_4,0);
  param_1[0x41] = iVar3;
  *(undefined *)(*(int *)(iVar3 + 0x34) + 10) = 0;
  FUN_800213a4(BUF_PTR,param_1[0x41]);
  *(undefined2 *)(param_1 + 4) = 1000;
  param_1[0x40] = param_2;
  param_1[0x42] = 0;
  *(undefined *)(param_1 + 0x43) = 0;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80074288;
  param_1[7] = 0xffff0000;
  param_1[8] = &LAB_80074a00;
  uVar4 = FUN_8001c4a0(param_1,0xcc6c8070);
  puVar1 = PTR_LAB_800a607c;
  uVar2 = DAT_800a6078;
  param_1[0x44] = uVar4;
  FUN_8001eaa8(param_1,uVar2,puVar1);
  return param_1;
}



void FUN_80074b14(int param_1)

{
  int iVar1;
  int iVar2;
  
  FUN_8001fea4(param_1,(int)*(short *)(param_1 + 0x68),(int)*(short *)(param_1 + 0x6a));
  if ((**(ushort **)(param_1 + 0x100) & 0x8000) == 0) {
    iVar2 = 0x20000;
    if ((**(ushort **)(param_1 + 0x100) & 0x2000) == 0) goto LAB_80074b74;
    iVar1 = *(int *)(param_1 + 0x108);
  }
  else {
    iVar1 = *(int *)(param_1 + 0x108);
    iVar2 = -0x20000;
  }
  *(int *)(param_1 + 0x108) = iVar1 + iVar2;
LAB_80074b74:
  if ((*(ushort *)(*(int *)(param_1 + 0x100) + 2) & 0xf0) != 0) {
    FUN_8001eaa8(param_1,DAT_800a6090,PTR_LAB_800a6094);
  }
  return;
}



void FUN_8007548c(int param_1)

{
  undefined4 uVar1;
  int iVar2;
  
  iVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
  FUN_8001c864(iVar2,&DAT_8009cc44,2000,
               (int)((*(ushort *)(param_1 + 0x68) + 0x6a) * 0x10000) >> 0x10,
               (int)((*(ushort *)(param_1 + 0x6a) + 0xe) * 0x10000) >> 0x10);
  *(undefined **)(iVar2 + 0x18) = &DAT_8001208c;
  *(undefined4 *)(iVar2 + 0x24) = 0xffff0000;
  *(undefined **)(iVar2 + 0x28) = &LAB_8001a2c8;
  *(undefined4 *)(iVar2 + 0x2c) = 0xffff0000;
  *(undefined **)(iVar2 + 0x30) = &LAB_8001a2e4;
  uVar1 = BUF_PTR;
  *(int *)(param_1 + 0x100) = iVar2;
  FUN_800213a4(uVar1);
  *(undefined *)(param_1 + 0x104) = 0;
  *(undefined4 *)(param_1 + 0x24) = 0xffff0000;
  *(undefined **)(param_1 + 0x28) = &LAB_8001a2c8;
  *(undefined4 *)(param_1 + 0x2c) = 0xffff0000;
  *(undefined **)(param_1 + 0x30) = &LAB_8001a2e4;
  return;
}



int FUN_80075fb4(int param_1,short param_2,short param_3,undefined4 param_4,undefined4 param_5)

{
  undefined *puVar1;
  undefined4 uVar2;
  int iVar3;
  undefined4 uVar4;
  uint uVar5;
  uint uVar6;
  
  FUN_8001c71c(param_1,0x10094096,1000,(int)param_2,(int)param_3,0);
  *(undefined **)(param_1 + 0x18) = &DAT_80012034;
  FUN_8007548c(param_1);
  puVar1 = PTR_DAT_800a59b0;
  *(undefined **)(param_1 + 0x18) = &DAT_80011ed4;
  *(undefined4 *)(param_1 + 0x140) = param_4;
  *(undefined4 *)(param_1 + 0x13c) = param_5;
  uVar2 = FUN_800143ec(puVar1,0x100,1,0);
  uVar5 = (uint)**(byte **)(param_1 + 0x13c) % 0xc;
  iVar3 = FUN_8001c71c(uVar2,0x3099991b,2000,(int)(short)(&DAT_8009cba8)[uVar5 * 2],
                       (int)(short)(&DAT_8009cbaa)[uVar5 * 2],0);
  *(int *)(param_1 + 0x138) = iVar3;
  *(undefined *)(*(int *)(iVar3 + 0x34) + 10) = 0;
  uVar6 = 0;
  FUN_800213a4(BUF_PTR,*(undefined4 *)(param_1 + 0x138));
  uVar5 = 0;
  while (uVar5 < 0xc) {
    uVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
    uVar4 = FUN_8001c71c(uVar2,0xec95689b,2000,(int)(short)(&DAT_8009cba8)[uVar5 * 2],
                         (int)(short)(&DAT_8009cbaa)[uVar5 * 2],0);
    uVar2 = BUF_PTR;
    iVar3 = uVar5 * 4 + param_1;
    *(undefined4 *)(iVar3 + 0x108) = uVar4;
    FUN_800213a4(uVar2);
    if (uVar5 < **(byte **)(param_1 + 0x13c)) {
      FUN_8001d0bc(*(undefined4 *)(iVar3 + 0x108),*(undefined *)(*(int *)(param_1 + 0x140) + uVar5))
      ;
    }
    else {
      *(undefined *)(*(int *)(*(int *)(iVar3 + 0x108) + 0x34) + 10) = 0;
    }
    uVar5 = uVar6 & 0xff;
    uVar6 = uVar6 + 1;
    FUN_8001d214(*(undefined4 *)(uVar5 * 4 + param_1 + 0x108),0);
    uVar5 = uVar6 & 0xff;
  }
  return param_1;
}



undefined4 *
FUN_800768e8(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined param_4)

{
  byte bVar1;
  int iVar2;
  
  FUN_8001c71c(param_1,0xb8700ca1,1000,0,0,1);
  param_1[6] = &DAT_80011e94;
  DAT_800a60a1 = 0;
  *(undefined2 *)((int)param_1 + 0x13a) = 0;
  *(undefined *)(param_1[0xd] + 10) = 0;
  *(undefined *)(param_1 + 0x4b) = 0;
  *(undefined *)((int)param_1 + 0x12d) = 0;
  *(undefined2 *)(param_1 + 4) = 1000;
  param_1[0x40] = param_2;
  param_1[0x4d] = param_3;
  *(undefined *)(param_1 + 0x4e) = param_4;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80077900;
  FUN_800778ac(param_1);
  bVar1 = old_debug__return_input(BUF_PTR + 0x84);
  if (4 < bVar1) {
    bVar1 = 1;
  }
  if (bVar1 == 2) {
    FUN_80077028(param_1);
    goto LAB_80076a2c;
  }
  if (2 < bVar1) {
    if (bVar1 == 3) {
      FUN_80077184(param_1);
      goto LAB_80076a2c;
    }
    if (bVar1 == 4) {
      FUN_800773bc(param_1);
      goto LAB_80076a2c;
    }
  }
  FUN_80076b60(param_1);
LAB_80076a2c:
  if (*(char *)(param_1 + 0x4b) != '\0') {
    iVar2 = *(int *)(param_1[*(byte *)((int)param_1 + 0x12d) + 0x41] + 0x18);
    (**(code **)(iVar2 + 0x24))
              (param_1[*(byte *)((int)param_1 + 0x12d) + 0x41] + (int)*(short *)(iVar2 + 0x20));
  }
  return param_1;
}



void FUN_80076b60(int param_1)

{
  undefined *puVar1;
  undefined *puVar2;
  undefined uVar3;
  bool bVar4;
  undefined *puVar5;
  undefined4 uVar6;
  int iVar7;
  int *piVar8;
  uint uVar9;
  uint uVar10;
  undefined local_48 [4];
  undefined4 local_44;
  undefined local_40 [8];
  undefined auStack_38 [12];
  undefined *puStack_2c;
  
  uVar6 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
  uVar6 = FUN_8001c71c(uVar6,0x68c01218,2000,0xa0,0xa8,0);
  FUN_800213a4(BUF_PTR,uVar6);
  uVar6 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
  uVar6 = FUN_8001c71c(uVar6,0x3080840d,2000,0xa0,0xa8,0);
  FUN_800213a4(BUF_PTR,uVar6);
  uVar6 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
  uVar6 = FUN_8001c71c(uVar6,0x3080820d,2000,0xa0,0xa8,0);
  FUN_800213a4(BUF_PTR,uVar6);
  uVar6 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
  uVar6 = FUN_8001c71c(uVar6,0x30808e0d,2000,0xa0,0xa8,0);
  FUN_800213a4(BUF_PTR,uVar6);
  uVar6 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
  uVar6 = FUN_8001c71c(uVar6,0x38a0c119,2000,0xa0,0xa8,0);
  FUN_800213a4(BUF_PTR,uVar6);
  iVar7 = FUN_800143ec(PTR_DAT_800a59b0,0x104,1,0);
  FUN_8001c864(iVar7,&DAT_8009cc38,2000,0xa0,0xa8);
  *(undefined **)(iVar7 + 0x18) = &DAT_800120ac;
  *(undefined4 *)(iVar7 + 0x24) = 0xffff0000;
  *(undefined **)(iVar7 + 0x28) = &LAB_8001a2c8;
  local_44 = 0xffff0000;
  local_40._0_4_ = &LAB_8001a2e4;
  *(undefined4 *)(iVar7 + 0x2c) = 0xffff0000;
  *(undefined **)(iVar7 + 0x30) = &LAB_8001a2e4;
  FUN_8001eaa8(iVar7,DAT_800a60ac,PTR_LAB_800a60b0);
  FUN_800213a4(BUF_PTR,iVar7);
  for (uVar10 = 0; uVar9 = uVar10 & 0xff, uVar9 < 4; uVar10 = uVar10 + 1) {
    iVar7 = FUN_800143ec(PTR_DAT_800a59b0,0x10c,1,0);
    uVar3 = (&DAT_8009cb6c)[uVar9 * 6];
    FUN_8001c71c(iVar7,0x10094096,1000,(int)(short)(&DAT_8009cb68)[uVar9 * 3],
                 (int)(short)(&DAT_8009cb6a)[uVar9 * 3],0);
    *(undefined **)(iVar7 + 0x18) = &DAT_80012034;
    FUN_8007548c(iVar7);
    *(undefined **)(iVar7 + 0x18) = &DAT_80011fdc;
    *(undefined *)(iVar7 + 0x109) = 0;
    *(undefined *)(iVar7 + 0x108) = uVar3;
    *(int *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104) = iVar7;
    FUN_800213a4(BUF_PTR,*(undefined4 *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104));
    *(char *)(param_1 + 300) = *(char *)(param_1 + 300) + '\x01';
  }
  piVar8 = &DAT_8009cc64;
  FUN_8007bbfc(param_1 + 0x78,DAT_8009cc64);
  while( true ) {
    if (*piVar8 == 0) {
      return;
    }
    FUN_8007bbac(auStack_38);
    local_48 = (undefined  [4])puStack_2c;
    puVar1 = local_48 + 3;
    uVar10 = (uint)puVar1 & 3;
    *(uint *)(puVar1 + -uVar10) =
         *(uint *)(puVar1 + -uVar10) & -1 << (uVar10 + 1) * 8 | (uint)puStack_2c >> (3 - uVar10) * 8
    ;
    puVar5 = puStack_2c;
    puVar1 = (undefined *)local_48;
    bVar4 = false;
    if (local_48._0_2_ != 0) {
      puVar2 = local_40 + 3;
      uVar10 = (uint)puVar2 & 3;
      *(uint *)(puVar2 + -uVar10) =
           *(uint *)(puVar2 + -uVar10) & -1 << (uVar10 + 1) * 8 |
           (uint)puStack_2c >> (3 - uVar10) * 8;
      local_40._0_4_ = puVar5;
      local_40._2_2_ = (undefined2)((uint)puVar5 >> 0x10);
      bVar4 = local_40._2_2_ != 0;
      local_40._0_4_ = puVar5;
    }
    local_48 = (undefined  [4])puVar1;
    if (bVar4) break;
    piVar8 = piVar8 + 1;
  }
  if (*piVar8 == 0) {
    return;
  }
  if (*piVar8 == 0x40b18011) {
    iVar7 = FUN_800143ec(PTR_DAT_800a59b0,0x104,1,0);
    FUN_8001c864(iVar7,&DAT_8009cc54,0x44c,0x9f,0xa8);
    *(undefined **)(iVar7 + 0x18) = &DAT_80011eb4;
    local_44 = 0xffff0000;
    local_40._0_4_ = &LAB_800767fc;
    *(undefined4 *)(iVar7 + 8) = 0xffff0000;
    *(undefined **)(iVar7 + 0xc) = &LAB_800767fc;
    *(undefined *)(iVar7 + 0x100) = 0;
  }
  else {
    local_48 = (undefined  [4])0xa8009f;
    uVar6 = FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
    iVar7 = FUN_80030d08(uVar6,*piVar8,local_48,0,0x10000,0x3d4,0);
  }
  FUN_800213a4(BUF_PTR,iVar7);
  return;
}



void FUN_80077028(int param_1)

{
  undefined4 uVar1;
  int iVar2;
  
  uVar1 = FUN_800143ec(PTR_DAT_800a59b0,0x144,1,0);
  uVar1 = FUN_80075fb4(uVar1,0x24,0x69,&DAT_8009cb5c,&DAT_800a609d);
  *(undefined4 *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104) = uVar1;
  FUN_800213a4(BUF_PTR,*(undefined4 *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104));
  *(char *)(param_1 + 300) = *(char *)(param_1 + 300) + '\x01';
  iVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x10c,1,0);
  FUN_8001c71c(iVar2,0x10094096,1000,0x20,0x85,0);
  *(undefined **)(iVar2 + 0x18) = &DAT_80012034;
  FUN_8007548c(iVar2);
  *(undefined **)(iVar2 + 0x18) = &DAT_80011fdc;
  *(undefined *)(iVar2 + 0x109) = 1;
  *(undefined *)(iVar2 + 0x108) = 1;
  *(int *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104) = iVar2;
  FUN_800213a4(BUF_PTR,*(undefined4 *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104));
  *(undefined *)(param_1 + 0x12d) = 1;
  *(char *)(param_1 + 300) = *(char *)(param_1 + 300) + '\x01';
  return;
}



void FUN_80077184(int param_1)

{
  undefined *puVar1;
  u_short uVar2;
  int iVar3;
  undefined4 uVar4;
  int iVar5;
  
  iVar3 = FUN_800143ec(PTR_DAT_800a59b0,0x110,1,0);
  FUN_8001c71c(iVar3,0x10094096,1000,0x5f,0x9b,0);
  *(undefined **)(iVar3 + 0x18) = &DAT_80012034;
  FUN_8007548c(iVar3);
  puVar1 = PTR_DAT_800a59b0;
  *(undefined **)(iVar3 + 0x18) = &DAT_80011f2c;
  *(undefined1 **)(iVar3 + 0x108) = &DAT_800a609e;
  uVar4 = FUN_800143ec(puVar1,0x100,1,0);
  iVar5 = FUN_8001c71c(uVar4,0x81100030,2000,0xe8,0xac,0);
  *(int *)(iVar3 + 0x10c) = iVar5;
  iVar5 = *(int *)(iVar5 + 0x34);
  uVar2 = GetTPage((uint)*(byte *)(iVar5 + 0x32),2,(int)*(short *)(iVar5 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar5 + 0x12) & 0xffffff00);
  uVar4 = BUF_PTR;
  *(u_short *)(iVar5 + 0x24) = uVar2;
  *(undefined2 *)(*(int *)(iVar3 + 0x10c) + 0x10) = 0x4b0;
  FUN_800213a4(uVar4,*(undefined4 *)(iVar3 + 0x10c));
  FUN_8001d214(*(undefined4 *)(iVar3 + 0x10c),0);
  FUN_8001d0bc(*(undefined4 *)(iVar3 + 0x10c),**(undefined **)(iVar3 + 0x108));
  *(int *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104) = iVar3;
  FUN_800213a4(BUF_PTR,*(undefined4 *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104));
  *(char *)(param_1 + 300) = *(char *)(param_1 + 300) + '\x01';
  iVar3 = FUN_800143ec(PTR_DAT_800a59b0,0x10c,1,0);
  FUN_8001c71c(iVar3,0x10094096,1000,0x59,0xb7,0);
  *(undefined **)(iVar3 + 0x18) = &DAT_80012034;
  FUN_8007548c(iVar3);
  *(undefined **)(iVar3 + 0x18) = &DAT_80011fdc;
  *(undefined *)(iVar3 + 0x109) = 1;
  *(undefined *)(iVar3 + 0x108) = 1;
  *(int *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104) = iVar3;
  FUN_800213a4(BUF_PTR,*(undefined4 *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104));
  *(undefined *)(param_1 + 0x12d) = 1;
  *(char *)(param_1 + 300) = *(char *)(param_1 + 300) + '\x01';
  return;
}



void FUN_800773bc(int param_1)

{
  undefined *puVar1;
  int iVar2;
  undefined4 uVar3;
  short *psVar4;
  int iVar5;
  
  *(undefined *)(param_1 + 0x12e) = DAT_800a60db;
  *(undefined *)(param_1 + 0x12f) = DAT_800a60dc;
  *(char *)(param_1 + 0x130) = DAT_800a60da + -1;
  iVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x11c,1,0);
  FUN_8001c71c(iVar2,0x10094096,1000,0x29,0x41,0);
  *(undefined **)(iVar2 + 0x18) = &DAT_80012034;
  FUN_8007548c(iVar2);
  *(undefined *)(iVar2 + 0x10c) = 2;
  puVar1 = PTR_DAT_800a59b0;
  *(undefined **)(iVar2 + 0x108) = &DAT_800a60a4;
  *(undefined **)(iVar2 + 0x18) = &DAT_80011f84;
  *(int *)(iVar2 + 0x110) = param_1 + 0x130;
  *(int *)(iVar2 + 0x118) = param_1;
  uVar3 = FUN_800143ec(puVar1,0x100,1,0);
  psVar4 = (short *)((uint)**(byte **)(iVar2 + 0x110) * 4 + *(int *)(iVar2 + 0x108));
  iVar5 = FUN_8001c71c(uVar3,0xe289c059,2000,(int)*psVar4,(int)psVar4[1],0);
  uVar3 = BUF_PTR;
  *(int *)(iVar2 + 0x114) = iVar5;
  *(undefined2 *)(iVar5 + 0x10) = 0x4b0;
  FUN_800213a4(uVar3,*(undefined4 *)(iVar2 + 0x114));
  *(int *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104) = iVar2;
  FUN_800213a4(BUF_PTR,*(undefined4 *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104));
  *(char *)(param_1 + 300) = *(char *)(param_1 + 300) + '\x01';
  iVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x11c,1,0);
  FUN_8001c71c(iVar2,0x10094096,1000,0x2b,0x5e,0);
  *(undefined **)(iVar2 + 0x18) = &DAT_80012034;
  FUN_8007548c(iVar2);
  *(undefined *)(iVar2 + 0x10c) = 5;
  puVar1 = PTR_DAT_800a59b0;
  *(undefined **)(iVar2 + 0x108) = &DAT_8009cb80;
  *(undefined **)(iVar2 + 0x18) = &DAT_80011f84;
  *(int *)(iVar2 + 0x110) = param_1 + 0x12f;
  *(int *)(iVar2 + 0x118) = param_1;
  uVar3 = FUN_800143ec(puVar1,0x100,1,0);
  psVar4 = (short *)((uint)**(byte **)(iVar2 + 0x110) * 4 + *(int *)(iVar2 + 0x108));
  iVar5 = FUN_8001c71c(uVar3,0xe289c059,2000,(int)*psVar4,(int)psVar4[1],0);
  uVar3 = BUF_PTR;
  *(int *)(iVar2 + 0x114) = iVar5;
  *(undefined2 *)(iVar5 + 0x10) = 0x4b0;
  FUN_800213a4(uVar3,*(undefined4 *)(iVar2 + 0x114));
  *(int *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104) = iVar2;
  FUN_800213a4(BUF_PTR,*(undefined4 *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104));
  *(char *)(param_1 + 300) = *(char *)(param_1 + 300) + '\x01';
  iVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x11c,1,0);
  FUN_8001c71c(iVar2,0x10094096,1000,0x29,0x7f,0);
  *(undefined **)(iVar2 + 0x18) = &DAT_80012034;
  FUN_8007548c(iVar2);
  *(undefined *)(iVar2 + 0x10c) = 5;
  puVar1 = PTR_DAT_800a59b0;
  *(undefined **)(iVar2 + 0x108) = &DAT_8009cb94;
  *(undefined **)(iVar2 + 0x18) = &DAT_80011f84;
  *(int *)(iVar2 + 0x110) = param_1 + 0x12e;
  *(int *)(iVar2 + 0x118) = param_1;
  uVar3 = FUN_800143ec(puVar1,0x100,1,0);
  psVar4 = (short *)((uint)**(byte **)(iVar2 + 0x110) * 4 + *(int *)(iVar2 + 0x108));
  iVar5 = FUN_8001c71c(uVar3,0xe289c059,2000,(int)*psVar4,(int)psVar4[1],0);
  uVar3 = BUF_PTR;
  *(int *)(iVar2 + 0x114) = iVar5;
  *(undefined2 *)(iVar5 + 0x10) = 0x4b0;
  FUN_800213a4(uVar3,*(undefined4 *)(iVar2 + 0x114));
  *(int *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104) = iVar2;
  FUN_800213a4(BUF_PTR,*(undefined4 *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104));
  *(char *)(param_1 + 300) = *(char *)(param_1 + 300) + '\x01';
  iVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x10c,1,0);
  FUN_8001c71c(iVar2,0x10094096,1000,0x29,0xa2,0);
  *(undefined **)(iVar2 + 0x18) = &DAT_80012034;
  FUN_8007548c(iVar2);
  *(undefined **)(iVar2 + 0x18) = &DAT_80011fdc;
  *(undefined *)(iVar2 + 0x109) = 1;
  *(undefined *)(iVar2 + 0x108) = 1;
  *(int *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104) = iVar2;
  FUN_800213a4(BUF_PTR,*(undefined4 *)((uint)*(byte *)(param_1 + 300) * 4 + param_1 + 0x104));
  *(undefined *)(param_1 + 0x12d) = 3;
  *(char *)(param_1 + 300) = *(char *)(param_1 + 300) + '\x01';
  return;
}



void FUN_800778ac(void)

{
  int iVar1;
  
  iVar1 = (uint)DAT_800a609e * 3;
  DAT_800a59cc = (ushort)(byte)(&DAT_8009cc08)[iVar1];
  DAT_800a59c8 = (ushort)(byte)(&DAT_8009cc09)[iVar1];
  DAT_800a59ca = (ushort)(byte)(&DAT_8009cc0a)[iVar1];
  return;
}



void FUN_80077ab0(int param_1)

{
  ushort uVar1;
  ushort uVar2;
  byte bVar3;
  int iVar4;
  code *pcVar5;
  int iVar6;
  uint *puVar7;
  undefined4 uVar8;
  
  if (*(byte *)(param_1 + 300) == 0) {
    return;
  }
  uVar1 = *(ushort *)(*(int *)(param_1 + 0x100) + 2);
  if ((uVar1 & 0x4000) == 0) {
    if ((uVar1 & 0x1000) != 0) {
      if (*(byte *)(param_1 + 0x12d) == 0) {
        iVar4 = *(int *)(*(int *)(param_1 + 0x104) + 0x18);
        (**(code **)(iVar4 + 0x2c))(*(int *)(param_1 + 0x104) + (int)*(short *)(iVar4 + 0x28));
        bVar3 = *(char *)(param_1 + 300) - 1;
      }
      else {
        iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
        iVar4 = *(int *)(iVar6 + 0x18);
        (**(code **)(iVar4 + 0x2c))(iVar6 + *(short *)(iVar4 + 0x28));
        bVar3 = *(char *)(param_1 + 0x12d) - 1;
      }
      goto LAB_80077be4;
    }
  }
  else {
    iVar4 = (uint)*(byte *)(param_1 + 0x12d) * 4;
    if ((uint)*(byte *)(param_1 + 0x12d) == *(byte *)(param_1 + 300) - 1) {
      iVar6 = *(int *)(iVar4 + param_1 + 0x104);
      iVar4 = *(int *)(iVar6 + 0x18);
      (**(code **)(iVar4 + 0x2c))(iVar6 + *(short *)(iVar4 + 0x28));
      iVar4 = *(int *)(param_1 + 0x104);
      *(undefined *)(param_1 + 0x12d) = 0;
    }
    else {
      iVar6 = *(int *)(iVar4 + param_1 + 0x104);
      iVar4 = *(int *)(iVar6 + 0x18);
      (**(code **)(iVar4 + 0x2c))(iVar6 + *(short *)(iVar4 + 0x28));
      bVar3 = *(char *)(param_1 + 0x12d) + 1;
LAB_80077be4:
      *(byte *)(param_1 + 0x12d) = bVar3;
      iVar4 = *(int *)((uint)bVar3 * 4 + param_1 + 0x104);
    }
    (**(code **)(*(int *)(iVar4 + 0x18) + 0x24))(iVar4 + *(short *)(*(int *)(iVar4 + 0x18) + 0x20));
    FUN_8007c348(0x646c2cc0,0xa0,0);
  }
  uVar1 = (*(ushort **)(param_1 + 0x100))[1];
  if ((uVar1 & 0x8000) == 0) {
    uVar2 = **(ushort **)(param_1 + 0x100);
    if ((uVar2 & 0x8000) == 0) {
      if (((uVar1 & 0x2000) != 0) ||
         (((uVar2 & 0x2000) != 0 &&
          (bVar3 = *(char *)(param_1 + 0x131) + 1, *(byte *)(param_1 + 0x131) = bVar3, 10 < bVar3)))
         ) {
        iVar4 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
        iVar6 = (int)*(short *)(*(int *)(iVar4 + 0x18) + 0x40);
        pcVar5 = *(code **)(*(int *)(iVar4 + 0x18) + 0x44);
        goto code_r0x80077d38;
      }
    }
    else {
      bVar3 = *(char *)(param_1 + 0x131) + 1;
      *(byte *)(param_1 + 0x131) = bVar3;
      if (10 < bVar3) {
        iVar4 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
        iVar6 = (int)*(short *)(*(int *)(iVar4 + 0x18) + 0x48);
        pcVar5 = *(code **)(*(int *)(iVar4 + 0x18) + 0x4c);
        goto code_r0x80077d38;
      }
    }
  }
  else {
    iVar4 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
    iVar6 = (int)*(short *)(*(int *)(iVar4 + 0x18) + 0x48);
    pcVar5 = *(code **)(*(int *)(iVar4 + 0x18) + 0x4c);
code_r0x80077d38:
    (*pcVar5)(iVar4 + iVar6);
    *(undefined *)(param_1 + 0x131) = 0;
  }
  puVar7 = *(uint **)(param_1 + 0x100);
  if ((*puVar7 & 0x8400000) == 0) {
    if ((*(ushort *)((int)puVar7 + 2) & 0x10) != 0) {
      iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
      iVar4 = *(int *)(iVar6 + 0x18);
      (**(code **)(iVar4 + 0x3c))(iVar6 + *(short *)(iVar4 + 0x38));
      goto LAB_80077de4;
    }
  }
  else {
    iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
    iVar4 = *(int *)(iVar6 + 0x18);
    (**(code **)(iVar4 + 0x34))
              (iVar6 + *(short *)(iVar4 + 0x30),*(ushort *)((int)puVar7 + 2) >> 0xb & 1);
LAB_80077de4:
    uVar8 = 2;
    if ((*(ushort *)(*(int *)(param_1 + 0x100) + 2) & 0x10) != 0) {
      iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
      iVar4 = *(int *)(iVar6 + 0x18);
      goto code_r0x80077f80;
    }
  }
  uVar1 = *(ushort *)(*(int *)(param_1 + 0x100) + 2);
  uVar8 = 1;
  if ((uVar1 & 0x80) == 0) {
    uVar8 = 3;
    if ((uVar1 & 0x20) == 0) {
      uVar8 = 0;
      if ((uVar1 & 0x40) == 0) {
        uVar8 = 4;
        if ((uVar1 & 4) == 0) {
          uVar8 = 5;
          if ((uVar1 & 1) == 0) {
            uVar8 = 6;
            if ((uVar1 & 8) == 0) {
              uVar8 = 7;
              if ((uVar1 & 2) == 0) {
                return;
              }
              iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
              iVar4 = *(int *)(iVar6 + 0x18);
            }
            else {
              iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
              iVar4 = *(int *)(iVar6 + 0x18);
            }
          }
          else {
            iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
            iVar4 = *(int *)(iVar6 + 0x18);
          }
        }
        else {
          iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
          iVar4 = *(int *)(iVar6 + 0x18);
        }
      }
      else {
        iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
        iVar4 = *(int *)(iVar6 + 0x18);
      }
    }
    else {
      iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
      iVar4 = *(int *)(iVar6 + 0x18);
    }
  }
  else {
    iVar6 = *(int *)((uint)*(byte *)(param_1 + 0x12d) * 4 + param_1 + 0x104);
    iVar4 = *(int *)(iVar6 + 0x18);
  }
code_r0x80077f80:
  (**(code **)(iVar4 + 0x54))(iVar6 + *(short *)(iVar4 + 0x50),uVar8);
  return;
}



undefined4 * FUN_800781c0(undefined4 *param_1,undefined4 param_2,undefined param_3)

{
  byte bVar1;
  undefined *puVar2;
  undefined *puVar3;
  u_short uVar4;
  short sVar5;
  undefined4 *puVar6;
  undefined4 uVar7;
  int iVar8;
  uint uVar9;
  undefined4 *puVar10;
  uint uVar11;
  undefined local_1e0 [4];
  undefined4 local_1dc;
  undefined *local_1d8;
  undefined4 local_1cc;
  undefined *local_1c8;
  
  FUN_8001c71c(param_1,0xec95689b,1000,0xa0,0x78,0);
  param_1[6] = &DAT_80011e54;
  *(undefined2 *)(param_1 + 0x55) = 300;
  param_1[0x54] = 0xffffffff;
  *(undefined *)(param_1 + 0x53) = param_3;
  *(undefined *)(param_1[0xd] + 10) = 0;
  *(undefined *)((int)param_1 + 0x149) = 0;
  *(undefined *)((int)param_1 + 0x14a) = 0;
  puVar3 = PTR_DAT_800a59d8;
  puVar2 = PTR_DAT_800a59b0;
  *(undefined2 *)(param_1 + 4) = 1000;
  param_1[0x40] = param_2;
  *(ushort *)((int)param_1 + 0x136) = (ushort)(byte)puVar3[5];
  *(ushort *)(param_1 + 0x4e) = (ushort)(byte)puVar3[5];
  *(ushort *)((int)param_1 + 0x13a) = (ushort)(byte)puVar3[4];
  puVar6 = (undefined4 *)FUN_800143ec(puVar2,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x96,0x3c,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = (int)param_1 + 0x136;
  *(undefined2 *)(puVar6 + 0x41) = 0;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x8c,0x3c,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = (int)param_1 + 0x136;
  *(undefined2 *)(puVar6 + 0x41) = 10;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x2a,0x3c,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 1;
  uVar7 = BUF_PTR;
  puVar6[0x40] = param_1 + 0x4e;
  *(undefined2 *)(puVar6 + 0x41) = 0;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x22,0x3c,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = param_1 + 0x4e;
  *(undefined2 *)(puVar6 + 0x41) = 10;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x4b,0x3c,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 1;
  uVar7 = BUF_PTR;
  puVar6[0x40] = (int)param_1 + 0x13a;
  *(undefined2 *)(puVar6 + 0x41) = 0;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x43,0x3c,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = (int)param_1 + 0x13a;
  *(undefined2 *)(puVar6 + 0x41) = 10;
  FUN_800213a4(uVar7);
  puVar3 = PTR_DAT_800a59d8;
  puVar2 = PTR_DAT_800a59b0;
  *(ushort *)((int)param_1 + 0x142) = (ushort)(byte)PTR_DAT_800a59d8[0x10];
  bVar1 = puVar3[0x10];
  *(undefined2 *)((int)param_1 + 0x13e) = 0x11;
  *(ushort *)(param_1 + 0x4f) = (ushort)bVar1;
  puVar6 = (undefined4 *)FUN_800143ec(puVar2,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x96,0x50,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = (int)param_1 + 0x142;
  *(undefined2 *)(puVar6 + 0x41) = 0;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x8c,0x50,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = (int)param_1 + 0x142;
  *(undefined2 *)(puVar6 + 0x41) = 10;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x2a,0x50,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 1;
  uVar7 = BUF_PTR;
  puVar6[0x40] = param_1 + 0x4f;
  *(undefined2 *)(puVar6 + 0x41) = 0;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x22,0x50,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = param_1 + 0x4f;
  *(undefined2 *)(puVar6 + 0x41) = 10;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x4b,0x50,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = (int)param_1 + 0x13e;
  *(undefined2 *)(puVar6 + 0x41) = 0;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x43,0x50,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = (int)param_1 + 0x13e;
  *(undefined2 *)(puVar6 + 0x41) = 10;
  FUN_800213a4(uVar7);
  puVar2 = PTR_DAT_800a59b0;
  *(ushort *)(param_1 + 0x50) = (ushort)(byte)PTR_DAT_800a59d8[0x11];
  puVar6 = (undefined4 *)FUN_800143ec(puVar2,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x96,100,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = param_1 + 0x50;
  *(undefined2 *)(puVar6 + 0x41) = 0;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x8c,100,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = param_1 + 0x50;
  *(undefined2 *)(puVar6 + 0x41) = 10;
  FUN_800213a4(uVar7);
  puVar2 = PTR_DAT_800a59d8;
  *(undefined2 *)(param_1 + 0x51) = *(undefined2 *)(PTR_DAT_800a59d8 + 2);
  sVar5 = *(short *)((int)param_1 + 0x142) +
          *(short *)(param_1 + 0x50) + *(short *)(puVar2 + 2) + *(short *)((int)param_1 + 0x136);
  *(short *)((int)param_1 + 0x146) = sVar5;
  if (*(char *)(param_1 + 0x53) == '\0') {
    *(short *)(puVar2 + 2) = sVar5;
  }
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x96,0x78,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar10 = param_1 + 0x51;
  puVar6[0x40] = puVar10;
  *(undefined2 *)(puVar6 + 0x41) = 0;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x8c,0x78,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = puVar10;
  *(undefined2 *)(puVar6 + 0x41) = 10;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x82,0x78,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = puVar10;
  *(undefined2 *)(puVar6 + 0x41) = 100;
  FUN_800213a4(uVar7);
  puVar6 = (undefined4 *)FUN_800143ec(PTR_DAT_800a59b0,0x108,1,0);
  FUN_8001c71c(puVar6,0xe4ac9451,2000,0x78,0x78,0);
  puVar6[6] = &DAT_80011e74;
  puVar6[9] = 0xffff0000;
  puVar6[10] = &LAB_8001a2c8;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_8001a2e4;
  puVar6[0xb] = 0xffff0000;
  puVar6[0xc] = &LAB_8001a2e4;
  iVar8 = puVar6[0xd];
  uVar4 = GetTPage((uint)*(byte *)(iVar8 + 0x32),2,(int)*(short *)(iVar8 + 0x10) & 0xffffffc0,
                   (int)*(short *)(iVar8 + 0x12) & 0xffffff00);
  *(u_short *)(iVar8 + 0x24) = uVar4;
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_800780dc;
  *puVar6 = 0xffff0000;
  puVar6[1] = &LAB_800780dc;
  *(undefined *)((int)puVar6 + 0x106) = 0;
  uVar7 = BUF_PTR;
  puVar6[0x40] = puVar10;
  *(undefined2 *)(puVar6 + 0x41) = 1000;
  FUN_800213a4(uVar7);
  if (*(char *)(param_1 + 0x53) == '\0') {
    uVar11 = 0;
    FUN_80025c78(PTR_DAT_800a59d8,local_1e0,(int)param_1 + 0x135);
    *(undefined *)(param_1 + 0x4d) = 0;
    uVar9 = 0;
    while (uVar9 < 0xc) {
      uVar7 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
      iVar8 = FUN_8001c71c(uVar7,0xec95689b,2000,(int)(short)(&DAT_8009cbd8)[uVar9 * 2],
                           (int)(short)(&DAT_8009cbda)[uVar9 * 2],0);
      param_1[uVar9 + 0x41] = iVar8;
      *(undefined4 *)(iVar8 + 0x24) = 0xffff0000;
      *(undefined **)(iVar8 + 0x28) = &LAB_8001a2c8;
      iVar8 = param_1[uVar9 + 0x41];
      local_1cc = 0xffff0000;
      local_1c8 = &LAB_8001a2e4;
      *(undefined4 *)(iVar8 + 0x2c) = 0xffff0000;
      *(undefined **)(iVar8 + 0x30) = &LAB_8001a2e4;
      FUN_800213a4(BUF_PTR,param_1[uVar9 + 0x41]);
      if (uVar9 < *(byte *)((int)param_1 + 0x135)) {
        FUN_8001d0bc(param_1[uVar9 + 0x41],local_1e0[uVar9]);
      }
      *(undefined *)(*(int *)(param_1[uVar9 + 0x41] + 0x34) + 10) = 0;
      uVar11 = uVar11 + 1;
      FUN_8001d214(param_1[uVar9 + 0x41],0);
      uVar9 = uVar11 & 0xff;
    }
    if (*(char *)(param_1 + 0x53) != '\0') goto LAB_800794c8;
  }
  else {
LAB_800794c8:
    if (0x2f < (byte)PTR_DAT_800a59d8[0x1b]) {
      uVar7 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
      uVar7 = FUN_8001c71c(uVar7,0xaa0da270,1000,0,0,0);
      FUN_800213a4(BUF_PTR,uVar7);
    }
    if (*(char *)(param_1 + 0x53) != '\0') {
      local_1dc = 0xffff0000;
      local_1d8 = &LAB_800799c8;
      *param_1 = 0xffff0000;
      param_1[1] = &LAB_800799c8;
      uVar7 = FUN_8007c348(0x121941c4,0xa0,0);
      param_1[0x54] = uVar7;
      goto LAB_800795a4;
    }
  }
  local_1dc = 0xffff0000;
  local_1d8 = &LAB_80079870;
  *param_1 = 0xffff0000;
  param_1[1] = &LAB_80079870;
LAB_800795a4:
  if (*(char *)(param_1 + 0x53) == '\0') {
    FUN_8002625c(PTR_DAT_800a59d8);
  }
  return param_1;
}



void FUN_800795fc(int param_1)

{
  ushort uVar1;
  bool bVar2;
  bool bVar3;
  
  bVar2 = false;
  bVar3 = false;
  if (*(short *)(param_1 + 0x154) != 0) {
    *(short *)(param_1 + 0x154) = *(short *)(param_1 + 0x154) + -1;
  }
  uVar1 = *(ushort *)(*(int *)(param_1 + 0x100) + 2);
  if ((uVar1 & 0x800) == 0) {
    if ((((uVar1 & 0x10) == 0) || (*(char *)(param_1 + 0x14c) == '\0')) ||
       ((byte)PTR_DAT_800a59d8[0x1b] < 0x30)) goto LAB_800796c0;
    if (*(char *)(param_1 + 0x149) != '\0') {
      bVar2 = false;
      bVar3 = true;
      goto LAB_800796c0;
    }
  }
  else if (*(char *)(param_1 + 0x149) != '\0') {
    bVar2 = true;
    goto LAB_800796c0;
  }
  FUN_80079768(param_1);
LAB_800796c0:
  if (*(short *)(param_1 + 0x154) == 0) {
    if (bVar2) {
      *(undefined *)(BUF_PTR + 0x148) = 99;
      if (*(char *)(param_1 + 0x14c) != '\0') {
        initialise_struct(PTR_DAT_800a59d8);
      }
    }
    else if (bVar3) {
      FUN_8007a480(BUF_PTR + 0x84,&DAT_800a6098);
      *(undefined *)(BUF_PTR + 0x148) = 99;
    }
  }
  FUN_8001cb84(param_1);
  return;
}



void FUN_80079768(undefined4 *param_1)

{
  uint uVar1;
  
  *(undefined *)((int)param_1 + 0x149) = 1;
  if (*(char *)(param_1 + 0x53) == '\0') {
    *param_1 = 0xffff0000;
    param_1[1] = &LAB_80079be4;
    FUN_8007c348(0x2990901,0xa0,0);
    for (uVar1 = 0; (uVar1 & 0xff) < (uint)*(byte *)((int)param_1 + 0x135); uVar1 = uVar1 + 1) {
      *(undefined *)(*(int *)(param_1[(uVar1 & 0xff) + 0x41] + 0x34) + 10) = 1;
    }
  }
  else {
    *param_1 = 0xffff0000;
    param_1[1] = FUN_800795fc;
  }
  *(undefined2 *)((int)param_1 + 0x136) = 0;
  *(undefined2 *)((int)param_1 + 0x142) = 0;
  *(undefined2 *)(param_1 + 0x50) = 0;
  *(undefined2 *)(param_1 + 0x51) = *(undefined2 *)((int)param_1 + 0x146);
  FUN_8007c778(param_1[0x54]);
  param_1[0x54] = 0xffffffff;
  FUN_8007c348(0x40023e30,0xa0,0);
  return;
}



undefined4 FUN_8007a110(undefined4 param_1)

{
  return param_1;
}



void FUN_8007a154(undefined4 param_1,uint param_2)

{
  if ((param_2 & 1) != 0) {
    __builtin_delete();
  }
  return;
}



void initialise_blb_struct(astruct_8 *blb_loading_struct,int buffer,void *load_asset_function)

{
  blb_loading_struct->game_blb_ptr = buffer;
  blb_loading_struct->load_asset_function = load_asset_function;
  blb_loading_struct->level_ = 0xff;
  reset_structs();
  return;
}



void reset_structs(astruct_3 *param_1)

{
  reset_struct(param_1);
  reset_other_struct((astruct_4 *)param_1);
  return;
}



void reset_struct(astruct_3 *param_1)

{
  param_1->field104_0x68 = 0;
  param_1->field105_0x6c = 0;
  param_1->field106_0x70 = 0;
  param_1->field107_0x74 = 0;
  param_1->field108_0x78 = 0;
  param_1->field109_0x7c = 0;
  return;
}



void reset_other_struct(astruct_4 *param_1)

{
  param_1->field0_0x0 = 0;
  param_1->field1_0x4 = 0;
  param_1->field2_0x8 = 0;
  param_1->field8_0x20 = 0;
  param_1->field9_0x24 = 0;
  param_1->field3_0xc = 0;
  param_1->field4_0x10 = 0;
  param_1->field11_0x2c = 0;
  param_1->field5_0x14 = 0;
  param_1->field6_0x18 = 0;
  param_1->field7_0x1c = 0;
  param_1->field10_0x28 = 0;
  param_1->field14_0x38 = 0;
  param_1->field15_0x3c = 0;
  param_1->field13_0x34 = 0;
  param_1->field12_0x30 = 0;
  param_1->field16_0x40 = 0;
  param_1->field17_0x44 = 0;
  param_1->field18_0x48 = 0;
  param_1->field19_0x4c = 0;
  param_1->field20_0x50 = 0;
  param_1->field21_0x54 = 0;
  param_1->field22_0x58 = 0;
  return;
}



// param_1 + 0x60 is the value to add to the address at param_1 + 0x5c

undefined FUN_8007a254(astruct_9 *blb_parse_struct)

{
  undefined uVar1;
  byte blb_level_;
  int byte;
  
  byte = blb_parse_struct->blb_base_ptr + (uint)blb_parse_struct->blb_level_;
  if ((*(char *)(byte + 0xf36) == '\x02') &&
     (byte = strcmp((char *)((uint)*(byte *)(byte + 0xf92) * 0xc + blb_parse_struct->blb_base_ptr +
                            0xf1c),&DAT_800a60b4), byte == 0)) {
    return 0;
  }
                    // gets set to 0x100 (0xff + 1)
  blb_level_ = blb_parse_struct->blb_level_ + 1;
  blb_parse_struct->blb_level_ = blb_level_;
  if ((uint)blb_level_ < (uint)*(byte *)(blb_parse_struct->blb_base_ptr + 0xf30)) {
    uVar1 = *(undefined *)(blb_parse_struct->blb_base_ptr + (uint)blb_level_ + 0xf36);
  }
  else {
    uVar1 = 0;
  }
                    // initial game load will skip to here as iVar3 is \x0
  return uVar1;
}



void FUN_8007a2fc(int param_1,char param_2,char param_3)

{
  uint uVar1;
  int iVar2;
  byte bVar3;
  
  iVar2 = *(int *)(param_1 + 0x5c);
  bVar3 = 1;
  if (1 < *(byte *)(iVar2 + 0xf30)) {
    uVar1 = 1;
    do {
      if (*(char *)(iVar2 + uVar1 + 0xf36) == param_2) {
        if (param_3 == '\0') {
          *(byte *)(param_1 + 0x60) = bVar3 - 1;
          return;
        }
        param_3 = param_3 + -1;
      }
      iVar2 = *(int *)(param_1 + 0x5c);
      bVar3 = bVar3 + 1;
      uVar1 = (uint)bVar3;
    } while (bVar3 < *(byte *)(iVar2 + 0xf30));
  }
  return;
}



void FUN_8007a36c(int param_1,char param_2,char param_3,char param_4)

{
  char cVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = *(int *)(param_1 + 0x5c);
  iVar3 = 0;
  if (*(char *)(iVar4 + 0xf30) == '\0') {
    return;
  }
  iVar2 = 0;
  while ((iVar2 = iVar4 + (iVar2 >> 0x10), *(char *)(iVar2 + 0xf36) != '\x03' ||
         (*(char *)(iVar4 + (uint)*(byte *)(iVar2 + 0xf92) * 0x70 + 0xc) != param_2))) {
    iVar3 = iVar3 + 1;
    iVar4 = *(int *)(param_1 + 0x5c);
    iVar2 = iVar3 * 0x10000;
    if ((int)(uint)*(byte *)(iVar4 + 0xf30) <= iVar3 * 0x10000 >> 0x10) {
      return;
    }
  }
  *(char *)(param_1 + 0x60) = (char)iVar3 + -1;
  iVar3 = iVar3 + -1;
  if ((param_4 != '\0') && (-1 < iVar3 * 0x10000)) {
    do {
      cVar1 = *(char *)(*(int *)(param_1 + 0x5c) + (int)(short)iVar3 + 0xf36);
      if (cVar1 == '\x01') {
        *(char *)(param_1 + 0x60) = (char)iVar3 + -1;
        return;
      }
      iVar3 = iVar3 + -1;
    } while ((cVar1 != '\x03') && (-1 < iVar3 * 0x10000));
  }
  if (param_3 != '\0') {
    *(char *)(param_1 + 0x60) = *(char *)(param_1 + 0x60) + -1;
  }
  return;
}



void FUN_8007a480(int param_1,char *param_2)

{
  uint uVar1;
  int iVar2;
  byte bVar3;
  
  iVar2 = *(int *)(param_1 + 0x5c);
  bVar3 = 0;
  if (*(char *)(iVar2 + 0xf30) != '\0') {
    uVar1 = 0;
    do {
      if (*(char *)(iVar2 + uVar1 + 0xf36) == '\x01') {
        iVar2 = strcmp((char *)((uint)*(byte *)(iVar2 + uVar1 + 0xf92) * 0x1c + iVar2 + 0xb64),
                       param_2);
        if (iVar2 == 0) {
          *(byte *)(param_1 + 0x60) = bVar3 - 1;
          return;
        }
      }
      iVar2 = *(int *)(param_1 + 0x5c);
      bVar3 = bVar3 + 1;
      uVar1 = (uint)bVar3;
    } while (bVar3 < *(byte *)(iVar2 + 0xf30));
  }
  return;
}



void FUN_8007a538(int param_1)

{
  *(char *)(param_1 + 0x60) = *(char *)(*(int *)(param_1 + 0x5c) + 0xf30) + -2;
  return;
}



undefined FUN_8007a554(int param_1)

{
  undefined uVar1;
  
  if ((int)(uint)*(byte *)(param_1 + 0x60) < (int)(*(byte *)(*(int *)(param_1 + 0x5c) + 0xf30) - 1))
  {
    uVar1 = *(undefined *)(*(int *)(param_1 + 0x5c) + (uint)*(byte *)(param_1 + 0x60) + 0xf37);
  }
  else {
    uVar1 = 0;
  }
  return uVar1;
}



undefined4 FUN_8007a58c(int param_1)

{
  byte bVar1;
  undefined4 uVar2;
  int iVar3;
  
  iVar3 = *(int *)(param_1 + 0x5c) + (uint)*(byte *)(param_1 + 0x60);
  bVar1 = *(byte *)(iVar3 + 0xf36);
  uVar2 = 0;
  if (2 < bVar1) {
    if (bVar1 == 3) {
      uVar2 = *(undefined4 *)(*(int *)(param_1 + 0x5c) + (uint)*(byte *)(iVar3 + 0xf92) * 0x70 + 4);
    }
    else {
      uVar2 = 0x7d000;
    }
  }
  return uVar2;
}



undefined4 parse_blb_header(astruct_5 *something,int ptr_to_level_data)

{
  char cVar1;
  undefined2 *puVar2;
  undefined4 uVar3;
  uint uVar4;
  uint uVar5;
  undefined2 uVar6;
  undefined2 uVar7;
  int ptr;
  ushort *puVar8;
  int blb_header;
  uint some_count;
  byte blb_id_;
  
  blb_header = something->blb_header_ptr;
  something->field29_0x68 = (ushort *)0x0;
  something->field30_0x6c = (uint *)0x0;
  something->field31_0x70 = 0;
  something->field32_0x74 = 0;
  something->field33_0x78 = 0;
  something->field34_0x7c = 0;
  something->field0_0x0 = 0;
  something->field1_0x4 = 0;
  something->field2_0x8 = 0;
  something->field8_0x20 = 0;
  something->field9_0x24 = 0;
  something->field3_0xc = 0;
  something->field4_0x10 = 0;
  something->field11_0x2c = 0;
  something->field5_0x14 = 0;
  something->field6_0x18 = 0;
  something->field7_0x1c = 0;
  something->field10_0x28 = 0;
  something->field14_0x38 = 0;
  something->field15_0x3c = 0;
  something->field13_0x34 = 0;
  something->field12_0x30 = 0;
  something->field16_0x40 = 0;
  something->field17_0x44 = 0;
  something->field18_0x48 = 0;
  something->field19_0x4c = 0;
  something->field20_0x50 = 0;
  something->field21_0x54 = 0;
  something->field22_0x58 = 0;
  ptr = blb_header + (uint)something->set_to_a_on_start;
  blb_id_ = *(byte *)(ptr + 0xf36);
  if (blb_id_ < 3) {
    uVar3 = 0;
  }
  else {
    uVar6 = 0;
                    // load byte located here into v1 (on boot this is 0x3)
    some_count = (uint)*(byte *)(ptr + 0xf92);
    uVar7 = 0;
    if (blb_id_ == 3) {
      puVar2 = (undefined2 *)(blb_header + some_count * 0x70);
                    // this is the first byte of the blb header
      uVar6 = *puVar2;
                    // and this is the 2nd?
      uVar7 = puVar2[1];
    }
    else if (blb_id_ == 6) {
      blb_header = blb_header + some_count * 4;
      uVar6 = *(undefined2 *)(blb_header + 0xecc);
      uVar7 = *(undefined2 *)(blb_header + 0xece);
    }
    cVar1 = (*(code *)something->field28_0x64)(uVar6,uVar7,ptr_to_level_data);
    uVar3 = 0;
    if (cVar1 != '\0') {
      something->field29_0x68 = (ushort *)ptr_to_level_data;
      if (*(char *)(something->blb_header_ptr + (uint)something->set_to_a_on_start + 0xf36) ==
          '\x03') {
        something->field30_0x6c =
             (uint *)(ptr_to_level_data +
                     *(int *)(something->blb_header_ptr + some_count * 0x70 + 8));
      }
      else {
        something->field30_0x6c = (uint *)0x0;
      }
      puVar8 = something->field29_0x68;
      some_count = 0;
      while (uVar4 = some_count & 0xffff, uVar4 < *puVar8) {
        blb_header = (int)something->field29_0x68 + *(int *)(puVar8 + uVar4 * 6 + 6);
        uVar5 = *(uint *)(puVar8 + uVar4 * 6 + 2);
        uVar3 = *(undefined4 *)(puVar8 + uVar4 * 6 + 4);
        if (uVar5 == 0x259) {
          something->field32_0x74 = blb_header;
          something->field33_0x78 = uVar3;
LAB_8007a7e4:
          some_count = some_count + 1;
        }
        else if (uVar5 < 0x25a) {
          if (uVar5 == 600) {
            something->field31_0x70 = blb_header;
            goto LAB_8007a7e4;
          }
          some_count = some_count + 1;
        }
        else {
          if (uVar5 == 0x25a) {
            something->field34_0x7c = blb_header;
            goto LAB_8007a7e4;
          }
          some_count = some_count + 1;
        }
      }
      if (*(char *)(something->blb_header_ptr + (uint)something->set_to_a_on_start + 0xf36) !=
          '\x03') {
        more_parsing_of_blb((astruct_14 *)something,1,'\x01');
      }
      uVar3 = 1;
    }
  }
  return uVar3;
}



undefined ptr_end_of_blb_header(astruct_10 *buffer)

{
  return *(undefined *)(buffer->blb_header_ptr + 0xf31);
}



undefined FUN_8007a984(int param_1,uint param_2)

{
  return *(undefined *)(*(int *)(param_1 + 0x5c) + (param_2 & 0xff) * 0x70 + 0xc);
}



int level_name(int buffer,uint size)

{
  return *(int *)(buffer + 0x5c) + (size & 0xff) * 0x70 + 0x5b;
}



undefined FUN_8007a9e8(int param_1,uint param_2)

{
  return *(undefined *)(*(int *)(param_1 + 0x5c) + (param_2 & 0xff) * 0x70 + 0xd);
}



undefined FUN_8007aa0c(int param_1)

{
  undefined uVar1;
  int iVar2;
  
  iVar2 = *(int *)(param_1 + 0x5c) + (uint)*(byte *)(param_1 + 0x60);
  uVar1 = 0;
  if (*(char *)(iVar2 + 0xf36) == '\x03') {
    uVar1 = *(undefined *)(*(int *)(param_1 + 0x5c) + (uint)*(byte *)(iVar2 + 0xf92) * 0x70 + 0xc);
  }
  return uVar1;
}



int FUN_8007aa50(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x5c) + (uint)*(byte *)(param_1 + 0x60);
  if (*(char *)(iVar1 + 0xf36) == '\x03') {
    iVar1 = *(int *)(param_1 + 0x5c) + (uint)*(byte *)(iVar1 + 0xf92) * 0x70 + 0x56;
  }
  else {
    iVar1 = 0;
  }
  return iVar1;
}



undefined FUN_8007ab04(int param_1)

{
  undefined uVar1;
  int iVar2;
  
  iVar2 = *(int *)(param_1 + 0x5c) + (uint)*(byte *)(param_1 + 0x60);
  uVar1 = 0;
  if (*(byte *)(iVar2 + 0xf36) - 4 < 2) {
    uVar1 = *(undefined *)(*(int *)(param_1 + 0x5c) + (uint)*(byte *)(iVar2 + 0xf92) * 0x10 + 0xcd1)
    ;
  }
  return uVar1;
}



undefined FUN_8007ab48(int param_1)

{
  undefined uVar1;
  int iVar2;
  
  iVar2 = *(int *)(param_1 + 0x5c) + (uint)*(byte *)(param_1 + 0x60);
  uVar1 = 0;
  if (*(byte *)(iVar2 + 0xf36) - 4 < 2) {
    uVar1 = *(undefined *)(*(int *)(param_1 + 0x5c) + (uint)*(byte *)(iVar2 + 0xf92) * 0x10 + 0xcd2)
    ;
  }
  return uVar1;
}



byte get_blb_offset(int pointer)

{
  byte bVar1;
  byte bVar2;
  int level_;
  int pointer_to_blb_header;
  
  pointer_to_blb_header = *(int *)(pointer + 0x5c);
  level_ = pointer_to_blb_header + (uint)*(byte *)(pointer + 0x60);
  bVar1 = *(byte *)(level_ + 0xf36);
  if (bVar1 == 2) {
    bVar2 = (byte)*(undefined2 *)
                   (pointer_to_blb_header + (uint)*(byte *)(level_ + 0xf92) * 0xc + 0xf18);
  }
  else {
    bVar2 = 0;
    if (1 < bVar1) {
      if (bVar1 < 6) {
        bVar2 = 0;
        if (3 < bVar1) {
          bVar2 = (byte)*(undefined2 *)
                         (pointer_to_blb_header + (uint)*(byte *)(level_ + 0xf92) * 0x10 + 0xccc);
        }
      }
      else {
        bVar2 = 0;
      }
    }
  }
  return bVar2;
}



undefined2 get_blb_sector_count(int blb_buffer_800ae450)

{
  byte bVar1;
  undefined2 uVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = *(int *)(blb_buffer_800ae450 + 0x5c);
  iVar3 = iVar4 + (uint)*(byte *)(blb_buffer_800ae450 + 0x60);
  bVar1 = *(byte *)(iVar3 + 0xf36);
  if (bVar1 == 2) {
    uVar2 = *(undefined2 *)(iVar4 + (uint)*(byte *)(iVar3 + 0xf92) * 0xc + 0xf1a);
  }
  else {
    uVar2 = 0;
    if (1 < bVar1) {
      if (bVar1 < 6) {
        uVar2 = 0;
        if (3 < bVar1) {
          uVar2 = *(undefined2 *)(iVar4 + (uint)*(byte *)(iVar3 + 0xf92) * 0x10 + 0xcce);
        }
      }
      else {
        uVar2 = 0;
      }
    }
  }
  return uVar2;
}



// something fun to look at
// 

undefined get_movie_count(int blb)

{
  return *(undefined *)(*(int *)(blb + 0x5c) + 0xf32);
}



// look at me !
// 

int movie_file_name(int param_1,uint param_2)

{
  return (param_2 & 0xff) * 0x1c + *(int *)(param_1 + 0x5c) + 0xb64;
}



// this will return the address of the `DREA` `PIRA` `SCI` type  headers in the game blb.

int find_blb_asset_addr(int blb_buffer_struct)

{
  int asset_addr;
  
                    // given the pointer of 0x8009dd20, we load the address at 0x8009dd20 + 0x5c
                    // (which is 0x800ae450). Then we load the byte at 0x8009dd20 + 0x60 and add it
                    // to the address. So we end up with 0x800ae452.
  asset_addr = *(int *)(blb_buffer_struct + 0x5c) + (uint)*(byte *)(blb_buffer_struct + 0x60);
                    // we then compare the byte located at 0x800ae452 + 0xf36 with 0x01. If it
                    // equals 1, we change our return value.
  if (*(char *)(asset_addr + 0xf36) == '\x01') {
                    // on boot, the byte at base_addr + 0xf92 is 0x0, so 0x0 * 0x1c + the gameblb
                    // adddress ( struct + 0x5c) + 0xb64 ends up being 0x800aefb4
    asset_addr = (uint)*(byte *)(asset_addr + 0xf92) * 0x1c + *(int *)(blb_buffer_struct + 0x5c) +
                 0xb64;
  }
  else {
    asset_addr = 0;
  }
  return asset_addr;
}



int load_another_blb_asset_ptr(int pointer)

{
  int asset_ptr;
  
  asset_ptr = *(int *)(pointer + 0x5c) + (uint)*(byte *)(pointer + 0x60);
  if (*(char *)(asset_ptr + 0xf36) == '\x01') {
    asset_ptr = (uint)*(byte *)(asset_ptr + 0xf92) * 0x1c + *(int *)(pointer + 0x5c) + 0xb6c;
  }
  else {
    asset_ptr = 0;
  }
                    // returns the ptr to \MVDWI.STR on boot
  return asset_ptr;
}



undefined2 load_Another_asset_ptr(int pointer)

{
  undefined2 asset_ptr;
  int iVar1;
  
  iVar1 = *(int *)(pointer + 0x5c) + (uint)*(byte *)(pointer + 0x60);
  asset_ptr = 0;
  if (*(char *)(iVar1 + 0xf36) == '\x01') {
    asset_ptr = *(undefined2 *)
                 (*(int *)(pointer + 0x5c) + (uint)*(byte *)(iVar1 + 0xf92) * 0x1c + 0xb60);
  }
  return asset_ptr;
}



undefined2 FUN_8007ae18(int param_1)

{
  undefined2 uVar1;
  int iVar2;
  
  iVar2 = *(int *)(param_1 + 0x5c) + (uint)*(byte *)(param_1 + 0x60);
  uVar1 = 0;
  if (*(char *)(iVar2 + 0xf36) == '\x01') {
    uVar1 = *(undefined2 *)
             (*(int *)(param_1 + 0x5c) + (uint)*(byte *)(iVar2 + 0xf92) * 0x1c + 0xb62);
  }
  return uVar1;
}



// this looks very interesting

int FUN_8007ae5c(astruct_13 *blb_struct)

{
  int iVar1;
  
  switch(*(undefined *)(blb_struct->blb_header_ptr + (uint)blb_struct->bytes_to_add_to_ptr + 0xf36))
  {
  case 1:
                    // points to dream works (O.DREA.DW)
    iVar1 = (uint)*(byte *)(blb_struct->blb_header_ptr + (uint)blb_struct->bytes_to_add_to_ptr +
                           0xf92) * 0x1c + blb_struct->blb_header_ptr + 0xb64;
    break;
  case 2:
    iVar1 = (uint)*(byte *)(blb_struct->blb_header_ptr + (uint)blb_struct->bytes_to_add_to_ptr +
                           0xf92) * 0xc + blb_struct->blb_header_ptr + 0xf1c;
    break;
  case 3:
    iVar1 = blb_struct->blb_header_ptr +
            (uint)*(byte *)(blb_struct->blb_header_ptr + (uint)blb_struct->bytes_to_add_to_ptr +
                           0xf92) * 0x70 + 0x56;
    break;
  case 4:
  case 5:
    iVar1 = (uint)*(byte *)(blb_struct->blb_header_ptr + (uint)blb_struct->bytes_to_add_to_ptr +
                           0xf92) * 0x10 + blb_struct->blb_header_ptr + 0xcd3;
    break;
  default:
    iVar1 = 0;
  }
  return iVar1;
}



int FUN_8007afb8(int *param_1)

{
  char cVar1;
  int iVar2;
  
  iVar2 = param_1[0x17] + (uint)*(byte *)(param_1 + 0x18);
  cVar1 = *(char *)(iVar2 + 0xf36);
  if (cVar1 == '\x06') {
    iVar2 = 0x7d000;
  }
  else if ((cVar1 == '\x03') && (*param_1 != 0)) {
    iVar2 = (uint)*(ushort *)
                   (param_1[0x17] + (uint)*(byte *)(iVar2 + 0xf92) * 0x70 + *param_1 * 2 + 0xe) << 5
    ;
  }
  else {
    iVar2 = 0;
  }
  return iVar2;
}



void more_parsing_of_blb(astruct_14 *param_1,int param_2,char param_3)

{
  byte bVar1;
  undefined2 uVar2;
  undefined2 uVar3;
  char cVar4;
  int iVar5;
  uint uVar6;
  uint uVar7;
  int iVar8;
  uint uVar9;
  uint *puVar10;
  uint *puVar11;
  
  bVar1 = *(byte *)(param_1->field23_0x5c + (uint)param_1->field24_0x60 + 0xf36);
  if ((2 < bVar1) && ((bVar1 == 3 || (param_3 != '\0')))) {
    iVar8 = param_1->field23_0x5c;
    param_1->field0_0x0 = 0;
    param_1->field1_0x4 = 0;
    param_1->field2_0x8 = 0;
    param_1->field8_0x20 = 0;
    param_1->field9_0x24 = 0;
    param_1->field3_0xc = 0;
    param_1->field4_0x10 = 0;
    param_1->field11_0x2c = 0;
    param_1->field5_0x14 = 0;
    param_1->field6_0x18 = 0;
    param_1->field7_0x1c = 0;
    param_1->field10_0x28 = 0;
    param_1->field14_0x38 = 0;
    param_1->field15_0x3c = 0;
    param_1->field13_0x34 = 0;
    param_1->field12_0x30 = 0;
    param_1->field16_0x40 = 0;
    param_1->field17_0x44 = 0;
    param_1->field18_0x48 = 0;
    param_1->field19_0x4c = 0;
    param_1->field20_0x50 = 0;
    param_1->field21_0x54 = 0;
    param_1->field22_0x58 = 0;
    iVar5 = iVar8 + (uint)param_1->field24_0x60;
    if (*(char *)(iVar5 + 0xf36) == '\x03') {
      uVar6 = (uint)*(byte *)(iVar5 + 0xf92);
      if (param_3 == '\0') {
        iVar5 = iVar8 + uVar6 * 0x70 + param_2 * 2;
        uVar2 = *(undefined2 *)(iVar5 + 0x38);
        uVar3 = *(undefined2 *)(iVar5 + 0x46);
      }
      else {
        iVar5 = iVar8 + uVar6 * 0x70 + param_2 * 2;
        uVar2 = *(undefined2 *)(iVar5 + 0x1c);
        uVar3 = *(undefined2 *)(iVar5 + 0x2a);
      }
      cVar4 = (*(code *)param_1->field28_0x64)(uVar2,uVar3,param_1->field30_0x6c);
      if (cVar4 == '\0') {
        if (param_2 == 1) {
          return;
        }
        more_parsing_of_blb(param_1,1,param_3);
        return;
      }
      puVar11 = param_1->field30_0x6c;
      param_1->field0_0x0 = param_2;
    }
    else {
      puVar11 = param_1->field29_0x68;
      param_1->field0_0x0 = 1;
    }
    puVar10 = puVar11;
    for (uVar6 = 0; uVar6 < *puVar11; uVar6 = uVar6 + 1) {
      uVar7 = puVar10[1];
      uVar9 = puVar10[2];
      iVar5 = (int)puVar11 + puVar10[3];
      if (uVar7 == 0x191) {
        param_1->field9_0x24 = iVar5;
      }
      else if (uVar7 < 0x192) {
        if (uVar7 == 300) {
          param_1->field5_0x14 = iVar5;
        }
        else if (uVar7 < 0x12d) {
          if (uVar7 == 0x65) {
            param_1->field2_0x8 = iVar5;
          }
          else if (uVar7 < 0x66) {
            if (uVar7 == 100) {
              param_1->field1_0x4 = iVar5;
            }
          }
          else if (uVar7 == 200) {
            param_1->field3_0xc = iVar5;
          }
          else if (uVar7 == 0xc9) {
            param_1->field4_0x10 = iVar5;
          }
        }
        else if (uVar7 == 0x12e) {
          param_1->field7_0x1c = iVar5;
        }
        else if (uVar7 < 0x12e) {
          param_1->field6_0x18 = iVar5;
        }
        else if (uVar7 == 0x12f) {
          param_1->field10_0x28 = iVar5;
        }
        else if (uVar7 == 400) {
          param_1->field8_0x20 = iVar5;
        }
      }
      else if (uVar7 == 0x1f8) {
        param_1->field13_0x34 = iVar5;
      }
      else if (uVar7 < 0x1f9) {
        if (uVar7 == 0x1f5) {
          param_1->field14_0x38 = iVar5;
        }
        else if (uVar7 < 0x1f6) {
          if (uVar7 == 500) {
            param_1->field11_0x2c = iVar5;
          }
        }
        else if (uVar7 == 0x1f6) {
          param_1->field15_0x3c = iVar5;
        }
        else if (uVar7 == 0x1f7) {
          param_1->field12_0x30 = iVar5;
        }
      }
      else if (uVar7 == 0x259) {
        param_1->field18_0x48 = iVar5;
        param_1->field19_0x4c = uVar9;
      }
      else if (uVar7 < 0x25a) {
        if (uVar7 == 600) {
          param_1->field16_0x40 = iVar5;
          param_1->field17_0x44 = uVar9;
        }
      }
      else if (uVar7 == 0x25a) {
        param_1->field20_0x50 = iVar5;
      }
      else if (uVar7 == 700) {
        param_1->field21_0x54 = iVar5;
        param_1->field22_0x58 = uVar9;
      }
      puVar10 = puVar10 + 3;
    }
  }
  return;
}



undefined old_debug__return_input(undefined *param_1)

{
  return *param_1;
}



undefined4 FUN_8007b3bc(int param_1,uint param_2)

{
  undefined4 uVar1;
  
  if ((*(int *)(param_1 + 8) == 0) || (1 < (param_2 & 0xffff))) {
    uVar1 = 0;
  }
  else {
    uVar1 = *(undefined4 *)((param_2 & 0xffff) * 4 + *(int *)(param_1 + 8));
  }
  return uVar1;
}



void FUN_8007b3f4(uint param_1,int param_2)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint *puVar4;
  uint uVar5;
  
  uVar1 = *(int *)(param_2 + 4) + 0xb;
  uVar2 = uVar1 & 3;
  uVar5 = *(int *)(param_2 + 4) + 8;
  uVar3 = uVar5 & 3;
  uVar5 = (*(int *)(uVar1 - uVar2) << (3 - uVar2) * 8 | param_1 & 0xffffffffU >> (uVar2 + 1) * 8) &
          -1 << (4 - uVar3) * 8 | *(uint *)(uVar5 - uVar3) >> uVar3 * 8;
  uVar1 = param_1 + 3 & 3;
  puVar4 = (uint *)((param_1 + 3) - uVar1);
  *puVar4 = *puVar4 & -1 << (uVar1 + 1) * 8 | uVar5 >> (3 - uVar1) * 8;
  uVar1 = param_1 & 3;
  *(uint *)(param_1 - uVar1) =
       *(uint *)(param_1 - uVar1) & 0xffffffffU >> (4 - uVar1) * 8 | uVar5 << uVar1 * 8;
  return;
}



void FUN_8007b418(uint param_1,int param_2)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint *puVar4;
  uint uVar5;
  
  uVar1 = *(int *)(param_2 + 4) + 0xf;
  uVar2 = uVar1 & 3;
  uVar5 = *(int *)(param_2 + 4) + 0xc;
  uVar3 = uVar5 & 3;
  uVar5 = (*(int *)(uVar1 - uVar2) << (3 - uVar2) * 8 | param_1 & 0xffffffffU >> (uVar2 + 1) * 8) &
          -1 << (4 - uVar3) * 8 | *(uint *)(uVar5 - uVar3) >> uVar3 * 8;
  uVar1 = param_1 + 3 & 3;
  puVar4 = (uint *)((param_1 + 3) - uVar1);
  *puVar4 = *puVar4 & -1 << (uVar1 + 1) * 8 | uVar5 >> (3 - uVar1) * 8;
  uVar1 = param_1 & 3;
  *(uint *)(param_1 - uVar1) =
       *(uint *)(param_1 - uVar1) & 0xffffffffU >> (4 - uVar1) * 8 | uVar5 << uVar1 * 8;
  return;
}



undefined2 FUN_8007b43c(int param_1)

{
  return *(undefined2 *)(*(int *)(param_1 + 4) + 0x18);
}



undefined2 FUN_8007b450(int param_1)

{
  return *(undefined2 *)(*(int *)(param_1 + 4) + 0x20);
}



undefined2 FUN_8007b464(int param_1)

{
  return *(undefined2 *)(*(int *)(param_1 + 4) + 0x1a);
}



undefined4 FUN_8007b478(int param_1)

{
  return *(undefined4 *)(param_1 + 4);
}



int FUN_8007b484(int param_1)

{
  return *(int *)(param_1 + 4) + 4;
}



undefined get_tile_count_(astruct_16 *param_1)

{
  undefined uVar1;
  
  if (param_1->tile_count == (undefined *)0x0) {
    uVar1 = 0;
  }
  else {
    uVar1 = *param_1->tile_count;
  }
  return uVar1;
}



int FUN_8007b4b8(int param_1,uint param_2)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x20);
  if (iVar1 == 0) {
    iVar1 = 0;
  }
  else {
    iVar1 = iVar1 + *(int *)(iVar1 + (param_2 & 0xff) * 0xc + 0xc);
  }
  return iVar1;
}



undefined4 FUN_8007b4f0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x24);
}



int FUN_8007b4fc(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 4);
  return (uint)*(ushort *)(iVar1 + 0x10) + (uint)*(ushort *)(iVar1 + 0x12) +
         (uint)*(ushort *)(iVar1 + 0x14);
}



undefined4 FUN_8007b548(int param_1,int param_2,uchar *param_3,uint param_4)

{
  undefined4 uVar1;
  uint uVar2;
  uint uVar3;
  uchar *puVar4;
  ushort uVar5;
  int iVar6;
  
  if (param_2 == 0) {
    uVar1 = 0;
  }
  else {
    uVar3 = param_2 - 1;
    uVar2 = (uint)*(ushort *)(*(int *)(param_1 + 4) + 0x10);
    iVar6 = 0x10;
    if (uVar3 < uVar2) {
      puVar4 = (uchar *)(*(int *)(param_1 + 0x14) + uVar3 * 0x100);
    }
    else {
      puVar4 = (uchar *)(*(int *)(param_1 + 0x14) + uVar2 * 0x80 + uVar3 * 0x80);
      iVar6 = 8;
    }
    uVar5 = 0;
    do {
      memcpy(param_3,puVar4,iVar6);
      param_3 = param_3 + (param_4 & 0xffff);
      uVar5 = uVar5 + 1;
      puVar4 = puVar4 + iVar6;
    } while (uVar5 < 0x10);
    uVar1 = 1;
  }
  return uVar1;
}



undefined4 FUN_8007b618(int param_1,int param_2)

{
  uint uVar1;
  
  uVar1 = (uint)*(ushort *)(*(int *)(param_1 + 4) + 0x10) +
          (uint)*(ushort *)(*(int *)(param_1 + 4) + 0x12) & 0xffff;
  if (uVar1 <= param_2 - 1U) {
    if (*(int *)(param_1 + 0x28) != 0) {
      return *(undefined4 *)(((param_2 - 1U) - uVar1) * 4 + *(int *)(param_1 + 0x28));
    }
  }
  return 0;
}



undefined4 FUN_8007b670(int param_1)

{
  return *(undefined4 *)(param_1 + 0x18);
}



undefined4 FUN_8007b67c(int param_1)

{
  return *(undefined4 *)(param_1 + 0x1c);
}



undefined2 FUN_8007b688(int param_1)

{
  return **(undefined2 **)(param_1 + 0xc);
}



int FUN_8007b69c(int param_1,uint param_2)

{
  return *(int *)(param_1 + 0xc) +
         *(int *)(*(int *)(param_1 + 0xc) + (param_2 & 0xffff) * 0xc + 0xc);
}



int FUN_8007b6c0(int param_1,uint param_2)

{
  return *(int *)(param_1 + 0x10) + (param_2 & 0xffff) * 0x5c;
}



bool FUN_8007b70c(int param_1)

{
  return *(int *)(param_1 + 0x2c) != 0;
}



void FUN_8007b718(uint param_1,int param_2)

{
  uint uVar1;
  uint *puVar2;
  uint uVar3;
  uint uVar4;
  
  uVar3 = *(uint *)(param_2 + 0x2c);
  uVar1 = uVar3 + 3 & 3;
  uVar4 = uVar3 & 3;
  uVar4 = (*(int *)((uVar3 + 3) - uVar1) << (3 - uVar1) * 8 |
          param_1 & 0xffffffffU >> (uVar1 + 1) * 8) & -1 << (4 - uVar4) * 8 |
          *(uint *)(uVar3 - uVar4) >> uVar4 * 8;
  uVar1 = param_1 + 3 & 3;
  puVar2 = (uint *)((param_1 + 3) - uVar1);
  *puVar2 = *puVar2 & -1 << (uVar1 + 1) * 8 | uVar4 >> (3 - uVar1) * 8;
  uVar1 = param_1 & 3;
  *(uint *)(param_1 - uVar1) =
       *(uint *)(param_1 - uVar1) & 0xffffffffU >> (4 - uVar1) * 8 | uVar4 << uVar1 * 8;
  return;
}



void FUN_8007b738(uint param_1,int param_2)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint *puVar4;
  uint uVar5;
  
  uVar1 = *(int *)(param_2 + 0x2c) + 7;
  uVar2 = uVar1 & 3;
  uVar5 = *(int *)(param_2 + 0x2c) + 4;
  uVar3 = uVar5 & 3;
  uVar5 = (*(int *)(uVar1 - uVar2) << (3 - uVar2) * 8 | param_1 & 0xffffffffU >> (uVar2 + 1) * 8) &
          -1 << (4 - uVar3) * 8 | *(uint *)(uVar5 - uVar3) >> uVar3 * 8;
  uVar1 = param_1 + 3 & 3;
  puVar4 = (uint *)((param_1 + 3) - uVar1);
  *puVar4 = *puVar4 & -1 << (uVar1 + 1) * 8 | uVar5 >> (3 - uVar1) * 8;
  uVar1 = param_1 & 3;
  *(uint *)(param_1 - uVar1) =
       *(uint *)(param_1 - uVar1) & 0xffffffffU >> (4 - uVar1) * 8 | uVar5 << uVar1 * 8;
  return;
}



int FUN_8007b75c(int param_1)

{
  return *(int *)(param_1 + 0x2c) + 8;
}



undefined2 FUN_8007b768(int param_1)

{
  return *(undefined2 *)(*(int *)(param_1 + 4) + 0x1e);
}



undefined4 FUN_8007b77c(int param_1)

{
  return *(undefined4 *)(param_1 + 0x38);
}



undefined2 FUN_8007b788(int param_1)

{
  return *(undefined2 *)(*(int *)(param_1 + 4) + 0x1c);
}



undefined4 FUN_8007b79c(int param_1)

{
  return *(undefined4 *)(param_1 + 0x3c);
}



undefined2 FUN_8007b7cc(int param_1,int param_2)

{
  undefined2 uVar1;
  int iVar2;
  
  iVar2 = *(int *)(param_1 + 0x30);
  if (iVar2 == 0) {
    uVar1 = 0;
  }
  else {
    uVar1 = *(undefined2 *)(iVar2 + *(int *)(iVar2 + (param_2 - 1U & 0xffff) * 0xc + 0xc) + 4);
  }
  return uVar1;
}



int FUN_8007b810(int param_1,int param_2)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x30);
  if (iVar1 == 0) {
    iVar1 = 0;
  }
  else {
    iVar1 = iVar1 + *(int *)(iVar1 + (param_2 - 1U & 0xffff) * 0xc + 0xc) + 6;
  }
  return iVar1;
}



undefined2 FUN_8007b8d0(int param_1)

{
  return *(undefined2 *)(*(int *)(param_1 + 4) + 0x16);
}



undefined4 FUN_8007b8e4(int param_1)

{
  return *(undefined4 *)(param_1 + 0x34);
}



int FUN_8007b928(int param_1,uint param_2)

{
  uint *puVar1;
  uint uVar2;
  int iVar3;
  uint *puVar4;
  uint uVar5;
  
  puVar1 = *(uint **)(param_1 + 0x70);
  if (puVar1 != (uint *)0x0) {
    uVar5 = 0;
    if (*puVar1 != 0) {
      uVar2 = 0;
      do {
        puVar4 = puVar1 + uVar2 * 3;
        if (puVar4[1] == param_2) {
          iVar3 = *(int *)(param_1 + 0x70);
          goto LAB_8007b9e4;
        }
        uVar5 = uVar5 + 1;
        uVar2 = uVar5 & 0xffff;
      } while ((uVar5 & 0xffff) < *puVar1);
    }
  }
  puVar1 = *(uint **)(param_1 + 0x40);
  if (puVar1 != (uint *)0x0) {
    uVar5 = 0;
    if (*puVar1 != 0) {
      uVar2 = 0;
      do {
        puVar4 = puVar1 + uVar2 * 3;
        if (puVar4[1] == param_2) {
          iVar3 = *(int *)(param_1 + 0x40);
LAB_8007b9e4:
          return iVar3 + puVar4[3];
        }
        uVar5 = uVar5 + 1;
        uVar2 = uVar5 & 0xffff;
      } while ((uVar5 & 0xffff) < *puVar1);
    }
  }
  return 0;
}



undefined4 FUN_8007ba10(int param_1)

{
  undefined4 uVar1;
  
  if (*(int *)(param_1 + 4) == 0) {
    uVar1 = *(undefined4 *)(param_1 + 0x78);
  }
  else {
    uVar1 = *(undefined4 *)(param_1 + 0x4c);
  }
  return uVar1;
}



undefined4 FUN_8007ba38(int param_1)

{
  undefined4 uVar1;
  
  if (*(int *)(param_1 + 4) == 0) {
    uVar1 = *(undefined4 *)(param_1 + 0x74);
  }
  else {
    uVar1 = *(undefined4 *)(param_1 + 0x48);
  }
  return uVar1;
}



undefined4 FUN_8007ba60(int param_1)

{
  undefined4 uVar1;
  
  if (*(int *)(param_1 + 4) == 0) {
    uVar1 = *(undefined4 *)(param_1 + 0x7c);
  }
  else {
    uVar1 = *(undefined4 *)(param_1 + 0x50);
  }
  return uVar1;
}



int FUN_8007ba88(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x54) + 0x10;
  if (*(int *)(param_1 + 0x54) == 0) {
    iVar1 = 0;
  }
  return iVar1;
}



void set_blb_pointer(long zero,long buffer_address)

{
  SET_TO_ZERO = zero;
  BLB_PARSING_STRUCT = buffer_address;
  return;
}



int FUN_8007bad0(int param_1)

{
  int iVar1;
  uint uVar2;
  int *piVar3;
  
  if ((BLB_PARSING_STRUCT == 0) || (iVar1 = FUN_8007b928(BLB_PARSING_STRUCT,param_1), iVar1 == 0)) {
    uVar2 = 0;
    if (SET_TO_ZERO == 0) {
      iVar1 = 0;
    }
    else {
      piVar3 = (int *)(SET_TO_ZERO + 0x10);
      for (; iVar1 = 0, uVar2 < *(uint *)(SET_TO_ZERO + 0xc); uVar2 = uVar2 + 1) {
        if (*piVar3 == param_1) {
          return SET_TO_ZERO +
                 *(int *)(uVar2 * 0x14 + SET_TO_ZERO + *(uint *)(SET_TO_ZERO + 0xc) * 4 + 0x18);
        }
        piVar3 = piVar3 + 1;
      }
    }
  }
  return iVar1;
}



undefined4 FUN_8007bb80(undefined4 param_1)

{
  FUN_8007bbd8();
  return param_1;
}



undefined4 FUN_8007bbac(undefined4 param_1)

{
  FUN_8007bbfc();
  return param_1;
}



void FUN_8007bbd8(undefined4 *param_1)

{
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  *(undefined2 *)(param_1 + 3) = 0;
  *(undefined2 *)((int)param_1 + 0xe) = 0;
  *(undefined2 *)(param_1 + 4) = 0;
  *(undefined *)((int)param_1 + 0x12) = 0;
  *(undefined *)((int)param_1 + 0x13) = 0;
  return;
}



undefined4 FUN_8007bbfc(int *param_1,int param_2)

{
  undefined *puVar1;
  ushort uVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  uint *puVar6;
  ushort *puVar7;
  int iVar8;
  int *piVar9;
  uint uVar10;
  int *piVar11;
  uint uVar12;
  int iVar13;
  undefined auStack_2d [3];
  undefined local_2a [26];
  
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  *(undefined2 *)(param_1 + 3) = 0;
  *(undefined2 *)((int)param_1 + 0xe) = 0;
  *(undefined2 *)(param_1 + 4) = 0;
  *(undefined *)((int)param_1 + 0x12) = 0;
  *(undefined *)((int)param_1 + 0x13) = 0;
  puVar7 = (ushort *)FUN_8007bad0(param_2);
  uVar10 = 0;
  if (puVar7 != (ushort *)0x0) {
    piVar9 = (int *)(puVar7 + 6);
    if (*puVar7 != 0) {
      do {
        if (*piVar9 == param_2) break;
        uVar10 = uVar10 + 1;
        piVar9 = piVar9 + 3;
      } while (uVar10 < *puVar7);
      if (uVar10 < *puVar7) {
        piVar9 = (int *)((int)(puVar7 + 6) + uVar10 * 3 * 4);
        *(ushort *)(param_1 + 4) = *(ushort *)(piVar9 + 1);
        uVar2 = *(ushort *)((int)piVar9 + 6);
        *param_1 = (int)puVar7 + (uint)puVar7[1] + (int)(int *)(uint)uVar2;
        param_1[2] = (int)puVar7 + *(int *)(puVar7 + 2);
        *(char *)((int)param_1 + 0x12) = (char)*(ushort *)(piVar9 + 2);
        if (*(int *)(puVar7 + 4) != 0) {
          param_1[1] = (int)puVar7 + *(int *)(puVar7 + 4);
        }
        iVar13 = 0;
        piVar11 = (int *)(uint)uVar2;
        for (uVar10 = 0; uVar10 < *(ushort *)(param_1 + 4); uVar10 = uVar10 + 1) {
          iVar8 = iVar13 + *param_1;
          uVar3 = iVar8 + 9U & 3;
          uVar5 = iVar8 + 6U & 3;
          uVar4 = iVar8 + 0xdU & 3;
          uVar12 = iVar8 + 10U & 3;
          uVar12 = (*(int *)((iVar8 + 0xdU) - uVar4) << (3 - uVar4) * 8 |
                   (uint)piVar11 & 0xffffffffU >> (uVar4 + 1) * 8) & -1 << (4 - uVar12) * 8 |
                   *(uint *)((iVar8 + 10U) - uVar12) >> uVar12 * 8;
          uVar4 = (uint)auStack_2d & 3;
          puVar6 = (uint *)(auStack_2d + -uVar4);
          *puVar6 = *puVar6 & -1 << (uVar4 + 1) * 8 |
                    ((*(int *)((iVar8 + 9U) - uVar3) << (3 - uVar3) * 8 |
                     (uint)piVar9 & 0xffffffffU >> (uVar3 + 1) * 8) & -1 << (4 - uVar5) * 8 |
                    *(uint *)((iVar8 + 6U) - uVar5) >> uVar5 * 8) >> (3 - uVar4) * 8;
          puVar1 = local_2a + 1;
          uVar3 = (uint)puVar1 & 3;
          *(uint *)(puVar1 + -uVar3) =
               *(uint *)(puVar1 + -uVar3) & -1 << (uVar3 + 1) * 8 | uVar12 >> (3 - uVar3) * 8;
          stack0xffffffd4 = uVar12;
          auStack_2d._1_2_ = (undefined2)uVar12;
          if (*(short *)(param_1 + 3) < (short)auStack_2d._1_2_) {
            *(undefined2 *)(param_1 + 3) = auStack_2d._1_2_;
          }
          local_2a._0_2_ = (undefined2)(uVar12 >> 0x10);
          piVar9 = (int *)(int)(short)local_2a._0_2_;
          if ((int)*(short *)((int)param_1 + 0xe) < (int)piVar9) {
            *(undefined2 *)((int)param_1 + 0xe) = local_2a._0_2_;
          }
          iVar13 = iVar13 + 0x24;
          piVar11 = piVar9;
        }
        *(undefined *)((int)param_1 + 0x13) = 1;
        return 1;
      }
    }
  }
  return 0;
}



void FUN_8007bda8(int param_1,undefined2 param_2,undefined4 param_3,undefined4 param_4,
                 undefined param_5,undefined param_6)

{
  undefined4 uVar1;
  
  if (*(char *)(param_1 + 0x13) != '\0') {
    uVar1 = FUN_800143ec(PTR_DAT_800a59b0,0x18,1,0);
    FUN_8007be7c(param_1,uVar1,param_2,param_3,param_4,param_5,param_6);
    FUN_8007bf3c(param_1,uVar1,0xffff);
    potentially_load_asset_(PTR_DAT_800a59b0,uVar1,0,0);
  }
  return;
}



void FUN_8007be7c(int *param_1,uint *param_2,uint param_3,uint param_4,uint param_5,byte param_6,
                 char param_7)

{
  ushort uVar1;
  ushort uVar2;
  ushort uVar3;
  int iVar4;
  uint uVar5;
  ushort *puVar6;
  
  if (*(char *)((int)param_1 + 0x13) != '\0') {
    iVar4 = (param_3 & 0xffff) * 0x24 + *param_1;
    uVar1 = *(ushort *)(iVar4 + 10);
    uVar2 = *(ushort *)(iVar4 + 0xc);
    puVar6 = (ushort *)(param_1[2] + *(int *)(iVar4 + 0x20));
    param_2[3] = (uint)puVar6;
    uVar3 = *puVar6;
    param_2[1] = param_5 & 0xffff;
    uVar5 = param_2[3];
    param_2[2] = param_4;
    *(ushort *)(param_2 + 5) = (ushort)param_6;
    *param_2 = (uint)uVar3;
    param_2[3] = uVar5 + 2;
    param_2[4] = uVar5 + 2 + *param_2 * 2;
    if (param_7 != '\0') {
      param_2[1] = -param_2[1];
      param_2[2] = param_2[2] + param_5 * (uVar2 - 1);
    }
    if (param_6 != 0) {
      param_2[2] = param_2[2] + (uVar1 - 1);
    }
  }
  return;
}



undefined FUN_8007bf3c(int param_1,undefined4 param_2,undefined2 param_3)

{
  undefined uVar1;
  
  if (*(char *)(param_1 + 0x13) == '\0') {
    uVar1 = 1;
  }
  else {
    uVar1 = FUN_80010068(0,param_2,param_3);
  }
  return uVar1;
}



void FUN_8007bf78(void)

{
  SpuCommonAttr local_38;
  
  init_sound();
  local_38.mask = 0x2c3;
  local_38.mvol.left = 0x3fff;
  local_38.mvol.right = 0x3fff;
  local_38.cd.volume.left = 0x7fff;
  local_38.cd.volume.right = 0x7fff;
  local_38.cd.mix = 1;
  SpuSetCommonAttr(&local_38);
  DAT_8009d258 = 0xff93;
  DAT_8009d268 = 0x800;
  DAT_8009d280 = 3;
  DAT_8009d25c = 0x3fff;
  DAT_8009d25e = 0x3fff;
  DAT_8009d278 = 1;
  DAT_8009d27c = 1;
  DAT_8009d284 = 0;
  DAT_8009d286 = 0;
  DAT_8009d288 = 0;
  DAT_8009d28a = 0;
  DAT_8009d28c = 0xf;
  DAT_800a60e4 = 0;
  return;
}



void FUN_8007c048(undefined4 *param_1,undefined2 *param_2,int param_3)

{
  short sVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  undefined *puVar6;
  int iVar7;
  undefined4 *addr;
  ulong size;
  ulong addr_00;
  
  iVar4 = DAT_800a60d4;
  if (DAT_800a60dd == 0) {
    addr_00 = 0x1010;
  }
  else {
    iVar2 = (DAT_800a60dd - 1) * 0xc;
    addr_00 = *(int *)(&DAT_8009d004 + iVar2) + *(int *)(&DAT_8009d008 + iVar2);
  }
  addr = param_1 + 1;
  if (param_1 == (undefined4 *)0x0) {
    uVar3 = (uint)DAT_800a60dd;
    DAT_800a60dd = DAT_800a60dd + 1;
    iVar4 = uVar3 * 0xc;
    *(ulong *)(&DAT_8009d004 + iVar4) = addr_00;
    *(undefined4 *)(&DAT_8009d008 + iVar4) = 0;
    *(undefined2 *)(&DAT_8009d00c + iVar4) = 0;
  }
  else {
    DAT_800a60dd = DAT_800a60dd + 1;
    sVar1 = (short)*param_1;
    iVar2 = sVar1 * 0xc + 4;
    if (0x46 < (uint)(DAT_800a60d4 + sVar1)) {
      sVar1 = (short)DAT_800a60d4 + -0x46;
    }
    iVar7 = 0;
    if (0 < sVar1) {
      do {
        iVar5 = (iVar4 + iVar7) * 0xc;
        (&DAT_8009ccbc)[(iVar4 + iVar7) * 3] = *addr;
        *(ulong *)(&DAT_8009ccc0 + iVar5) = (addr[2] + addr_00) - iVar2;
        if (param_2 == (undefined2 *)0x0) {
          *(undefined2 *)(&DAT_8009ccc4 + iVar5) = 0x3fff;
          *(undefined2 *)(&DAT_8009ccc6 + iVar5) = 0;
        }
        else {
          *(undefined2 *)(&DAT_8009ccc4 + iVar5) = *param_2;
          *(undefined2 *)(&DAT_8009ccc6 + iVar5) = param_2[1];
          param_2 = param_2 + 2;
        }
        iVar7 = iVar7 + 1;
        addr = addr + 3;
      } while (iVar7 < sVar1);
    }
    SpuSetTransferMode(0);
    SpuSetTransferStartAddr(addr_00);
    size = param_3 - iVar2;
    SpuRead((uchar *)addr,size);
    SpuIsTransferCompleted(1);
    iVar2 = 0x17;
    puVar6 = &DAT_8009cc8b;
    DAT_800a60d4 = DAT_800a60d4 + sVar1;
    iVar4 = (DAT_800a60dd - 1) * 0xc;
    *(ulong *)(&DAT_8009d004 + iVar4) = addr_00;
    *(ulong *)(&DAT_8009d008 + iVar4) = size;
    *(short *)(&DAT_8009d00c + iVar4) = sVar1;
    do {
      *puVar6 = 0;
      iVar2 = iVar2 + -1;
      puVar6 = puVar6 + -1;
    } while (-1 < iVar2);
    DAT_800a60de = 0;
  }
  return;
}



void FUN_8007c2a0(void)

{
  if (DAT_800a60dd != 0) {
    DAT_800a60d4 = DAT_800a60d4 -
                   (uint)*(ushort *)(&DAT_8009d00c + (uint)(byte)(DAT_800a60dd - 1) * 0xc);
    DAT_800a60dd = DAT_800a60dd - 1;
  }
  return;
}



void FUN_8007c32c(byte param_1)

{
  if (param_1 < 7) {
    DAT_800a60de = param_1;
  }
  return;
}



uint FUN_8007c348(uint param_1,short param_2,char param_3)

{
  bool bVar1;
  uint uVar2;
  long lVar3;
  ushort uVar4;
  int iVar5;
  uint uVar6;
  
  if (DAT_800a60d4 != 0) {
    if ((DAT_800a60e3 != '\0') && (param_3 == '\0')) {
      return 0xffffffff;
    }
    if (DAT_800a60de != 0) {
      if (param_1 == 0x44d4c8d8) {
        iVar5 = 2;
      }
      else if (param_1 < 0x44d4c8d9) {
        if (param_1 == 0x248e52) {
          iVar5 = 3;
        }
        else {
          iVar5 = 0xff;
          if (param_1 == 0x246166fa) {
            iVar5 = 1;
          }
        }
      }
      else if (param_1 == 0x5860c640) {
        iVar5 = 4;
      }
      else {
        iVar5 = 0xff;
        if (param_1 == 0x70d006d8) {
          iVar5 = 0;
        }
      }
      if (iVar5 != 0xff) {
        param_1 = *(uint *)(s__8009d158 + ((uint)DAT_800a60de * 5 + iVar5) * 4);
      }
    }
    bVar1 = false;
    uVar6 = 0;
    if (DAT_800a60d4 != 0) {
      iVar5 = 0;
      do {
        if (param_1 == *(uint *)((int)&DAT_8009ccbc + iVar5)) {
          bVar1 = true;
          break;
        }
        uVar6 = uVar6 + 1;
        iVar5 = iVar5 + 0xc;
      } while (uVar6 < DAT_800a60d4);
    }
    if (bVar1) {
      if ((*(ushort *)(&DAT_8009ccc6 + uVar6 * 0xc) & 0xf00) != 0) {
        uVar2 = rand();
        uVar2 = uVar2 & 3;
        uVar4 = *(ushort *)(&DAT_8009ccc6 + uVar6 * 0xc) & 0xf00;
        if (uVar4 == 0x200) {
          if (1 < uVar2) {
            return 0xffffffff;
          }
        }
        else if (uVar4 < 0x201) {
          if ((uVar4 == 0x100) && (uVar2 != 0)) {
            return 0xffffffff;
          }
        }
        else if ((uVar4 == 0x400) && (uVar2 == 0)) {
          return 0xffffffff;
        }
      }
      uVar2 = (uint)DAT_800a60e4;
      for (iVar5 = 0; bVar1 = false, iVar5 < 0x18; iVar5 = iVar5 + 1) {
        lVar3 = SpuGetKeyStatus(1 << (uVar2 & 0x1f));
        if ((lVar3 == 0) || (lVar3 == 3)) {
          bVar1 = true;
          break;
        }
        uVar2 = uVar2 + 1;
        if (0x17 < (uVar2 & 0xffff)) {
          uVar2 = 0;
        }
      }
      if (bVar1) {
        DAT_800a60e4 = (byte)(uVar2 + 1);
        if (0x17 < (uVar2 + 1 & 0xff)) {
          DAT_800a60e4 = 0;
        }
        DAT_8009d254 = 1 << (uVar2 & 0x1f);
        (&DAT_8009cc74)[uVar2 & 0xffff] = (char)uVar6;
        iVar5 = uVar6 * 0xc;
        DAT_8009d270 = *(undefined4 *)(&DAT_8009ccc0 + iVar5);
        FUN_8007c7d8(&DAT_8009d25c,(int)*(short *)(&DAT_8009ccc4 + iVar5),(int)param_2);
        DAT_8009d268 = 0x400;
        if ((*(ushort *)(&DAT_8009ccc6 + iVar5) & 1) != 0) {
          DAT_8009d268 = 0x800;
        }
        uVar4 = *(ushort *)(&DAT_8009ccc6 + iVar5);
        if ((uVar4 & 0xf0) != 0) {
          if ((uVar4 & 0x10) == 0) {
            if ((uVar4 & 0x20) == 0) {
              if ((uVar4 & 0x40) != 0) {
                iVar5 = rand();
                DAT_8009d268 = ((ushort)iVar5 & 0x5ff) + 0x200;
              }
            }
            else {
              iVar5 = rand();
              DAT_8009d268 = ((ushort)iVar5 & 0x2ff) + 0x300;
            }
          }
          else {
            iVar5 = rand();
            DAT_8009d268 = ((ushort)iVar5 & 0x17f) + 0x380;
          }
        }
        SpuSetVoiceAttr((SpuVoiceAttr *)&DAT_8009d254);
        SpuSetKey(1,1 << (uVar2 & 0x1f));
        return uVar2 & 0xffff;
      }
    }
  }
  return 0xffffffff;
}



void FUN_8007c778(uint param_1)

{
  if (param_1 != 0xffffffff) {
    SpuSetKey(0,1 << (param_1 & 0x1f));
  }
  return;
}



void FUN_8007c7ac(void)

{
  SpuSetKey(0,0xffffff);
  DAT_800a60e4 = 0;
  return;
}



void FUN_8007c7d8(ushort *param_1,ushort param_2,short param_3)

{
  short sVar1;
  int iVar2;
  ushort uVar3;
  int iVar4;
  
  *param_1 = 0;
  param_1[1] = 0;
  if (0x27e < (ushort)(param_3 + 0x9fU)) {
    return;
  }
  if (DAT_800a60da != '\x01') {
    if (param_3 < 0x140) {
      if (param_3 < 0) {
        iVar2 = (uint)param_2 << 0x10;
        iVar4 = (int)((ulonglong)((longlong)(iVar2 >> 0x10) * 0x66666667) >> 0x20);
        sVar1 = param_3 + 0xa0;
      }
      else {
        if (param_3 < 0xa1) {
          *param_1 = param_2;
          goto LAB_8007c90c;
        }
        iVar2 = (uint)param_2 << 0x10;
        iVar4 = (int)((ulonglong)((longlong)(iVar2 >> 0x10) * 0x66666667) >> 0x20);
        sVar1 = 0x140 - param_3;
      }
      *param_1 = sVar1 * (short)((uint)(((iVar4 >> 6) - (iVar2 >> 0x1f)) * 0x10000) >> 0x10);
    }
LAB_8007c90c:
    if (0 < param_3) {
      if (param_3 < 0xa0) {
        uVar3 = param_3 * ((short)param_2 / 0xa0);
      }
      else {
        if (param_3 < 0x141) {
          param_1[1] = param_2;
          goto LAB_8007c998;
        }
        uVar3 = (0x1e0 - param_3) * (short)((uint)(((int)(short)param_2 / 0xa0) * 0x10000) >> 0x10);
      }
      param_1[1] = uVar3;
    }
    goto LAB_8007c998;
  }
  if (param_3 < 0) {
    iVar2 = (int)((ulonglong)((longlong)(int)(short)param_2 * 0x66666667) >> 0x20);
    param_3 = param_3 + 0xa0;
LAB_8007c854:
    *param_1 = param_3 * (short)((uint)(((iVar2 >> 6) - ((int)((uint)param_2 << 0x10) >> 0x1f)) *
                                       0x10000) >> 0x10);
  }
  else {
    if (0x140 < param_3) {
      iVar2 = (int)((ulonglong)((longlong)(int)(short)param_2 * 0x66666667) >> 0x20);
      param_3 = 0x1e0 - param_3;
      goto LAB_8007c854;
    }
    *param_1 = param_2;
  }
  param_1[1] = *param_1;
LAB_8007c998:
  iVar2 = (int)(short)*param_1 * (uint)DAT_800a60db;
  if (iVar2 < 0) {
    iVar2 = iVar2 + 3;
  }
  iVar4 = (int)(short)param_1[1] * (uint)DAT_800a60db;
  *param_1 = (ushort)(iVar2 >> 2);
  if (iVar4 < 0) {
    iVar4 = iVar4 + 3;
  }
  param_1[1] = (ushort)(iVar4 >> 2);
  return;
}



void FUN_8007c9e8(uint param_1,short param_2)

{
  short local_10;
  short local_e;
  
  if (param_1 < 0x18) {
    FUN_8007c7d8(&local_10,
                 (int)*(short *)(&DAT_8009ccc4 + (uint)(byte)(&DAT_8009cc74)[param_1] * 0xc),
                 (int)param_2);
    SpuSetVoiceVolume(param_1,local_10,local_e);
  }
  return;
}



void FUN_8007ca5c(uint param_1,char param_2)

{
  int iVar1;
  
  if (((param_1 & 0xff) < 0x1a) && ((byte)(param_2 - 1U) < 6)) {
    iVar1 = ((uint)(byte)(param_2 - 1U) + (param_1 & 0xff) * 6) * 2;
    if ((byte)(&DAT_8009d034)[iVar1] < 5) {
      FUN_80038ca8((&DAT_8009d034)[iVar1],(&DAT_8009d035)[iVar1]);
      CD_PLAYING = true;
    }
  }
  return;
}



void stop_cd_wrapper(void)

{
  stop_cd();
  CD_PLAYING = false;
  return;
}



void FUN_8007cb04(void)

{
  int vNum;
  int iVar1;
  ushort *puVar2;
  ushort local_18 [4];
  
  if (DAT_800a60e3 == '\0') {
    puVar2 = &DAT_8009cc8c;
    vNum = 0;
    do {
      SpuGetVoicePitch(vNum,local_18);
      iVar1 = vNum + 1;
      *puVar2 = local_18[0];
      SpuSetVoicePitch(vNum,0);
      puVar2 = puVar2 + 1;
      vNum = iVar1;
    } while (iVar1 < 0x18);
    FUN_80038e4c();
    DAT_800a60e3 = '\x01';
  }
  return;
}



void FUN_8007cb80(void)

{
  ushort pitch;
  int vNum;
  int iVar1;
  ushort *puVar2;
  
  if (DAT_800a60e3 != '\0') {
    puVar2 = &DAT_8009cc8c;
    vNum = 0;
    do {
      pitch = *puVar2;
      puVar2 = puVar2 + 1;
      iVar1 = vNum + 1;
      SpuSetVoicePitch(vNum,pitch);
      vNum = iVar1;
    } while (iVar1 < 0x18);
    FUN_80038e9c();
    DAT_800a60e3 = '\0';
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x8007cc54)

void FUN_8007cc28(byte param_1)

{
  int iVar1;
  
  if (param_1 < 5) {
    iVar1 = (int)((uint)param_1 * 0x1fffc000) >> 0x10;
    DAT_800a60dc = param_1;
    FUN_80090810(iVar1,iVar1);
  }
  return;
}



void FUN_8007cc78(void)

{
  uint uVar1;
  uint uVar2;
  
  if ((CD_PLAYING) &&
     (uVar2 = DAT_800a60d0 + 1, uVar1 = DAT_800a60d0 & 3, DAT_800a60d0 = uVar2, uVar1 == 0)) {
    handle_music();
  }
  return;
}



int FUN_8007ccbc(int param_1)

{
  FUN_80020868();
  *(undefined **)(param_1 + 0x18) = &DAT_80012100;
  return param_1;
}



// this function appears to draw the level / intro title screens to the screen

void load_level_(astruct_6 *param_1,undefined *param_2)

{
  char cVar1;
  undefined uVar2;
  undefined uVar3;
  byte bVar4;
  undefined2 uVar5;
  uint uVar6;
  int iVar7;
  undefined4 uVar8;
  astruct_5 *buffer;
  byte bVar9;
  
  set_up_buffer(BUF_PTR);
  load_level(param_1,0x63);
  cVar1 = FUN_8007aa0c(&BUF_PTR->blb_reading_struct);
  if (cVar1 == '\0') {
    *PTR_DAT_800a59d8 = 1;
    PTR_DAT_800a59d8[1] = 1;
  }
  else {
    *PTR_DAT_800a59d8 = cVar1;
    uVar2 = old_debug__return_input(&param_1->field68_0x84);
    PTR_DAT_800a59d8[1] = uVar2;
  }
  uVar6 = FUN_8007b43c(&param_1->field68_0x84);
  if (((uVar6 & 0x40) != 0) && (param_1->field32_0x4a == 0x100)) {
    param_1->field32_0x4a = 0xf0;
  }
  iVar7 = 0;
  do {
    *(undefined2 *)((int)&param_1[1].field31_0x48 + ((iVar7 << 0x10) >> 0xf)) = 0;
    iVar7 = iVar7 + 1;
  } while (iVar7 * 0x10000 >> 0x10 < 8);
  param_1[1].field_0x58 = 0;
  param_1[1].field_0x5b = 0;
  *(undefined *)&param_1[1].field41_0x5c = 0;
  param_1[1].field_0x5a = 0;
  param_1[1].field_0x59 = 0;
  *(undefined *)((int)&param_1[1].field20_0x2c + 1) = 0;
  param_1[1].field_0x64 = 0;
  param_1[1].field_0x65 = 0x40;
  param_1[1].field_0x66 = 0x40;
  param_1[1].field_0x67 = 0x40;
  param_1[1].field23_0x38 = 0;
  param_1[1].some_method = param_2;
  param_1[1].field_0x17 = 0;
  param_1[1].some_other_mask = 0;
  param_1[1].some_mask = 0;
  param_1[1].field_0x10 = 0;
  param_1[1].field_0x11 = 0;
  param_1[1].field_0x12 = 0;
  param_1[1].field_0x13 = 0;
  param_1[1].field_0x14 = 0;
  param_1[1].field_0x15 = 0;
  param_1[1].field_0x16 = 0;
  *(undefined *)&param_1[1].field16_0x1c = 0;
  *(undefined *)((int)&param_1[1].field16_0x1c + 1) = 0;
  *(undefined *)((int)&param_1[1].field16_0x1c + 2) = 0;
  *(undefined *)&param_1[1].field51_0x68 = 0;
  *(undefined *)((int)&param_1[1].field51_0x68 + 1) = 0;
  *(undefined *)&param_1[1].field20_0x2c = 0;
  param_1->some_mask = 0xffff0000;
  param_1->some_other_method = &LAB_8007e6b0;
  FUN_80081568(param_1);
  buffer = &param_1->field68_0x84;
  uVar8 = FUN_8007b8e4(buffer);
  param_1[1].field21_0x30 = uVar8;
  uVar5 = FUN_8007b8d0(buffer);
  *(undefined2 *)&param_1[1].field22_0x34 = uVar5;
  FUN_80081ee0(param_1);
  param_1->field64_0x7c = &DAT_8009d654;
  param_1->field65_0x80 = 0x79;
  uVar2 = FUN_8007aa0c(buffer);
  uVar3 = old_debug__return_input(buffer);
  FUN_8007ca5c(uVar2,uVar3);
  bVar9 = 0;
  *(undefined *)((int)&param_1[1].field30_0x46 + 1) = 0;
  while( true ) {
    bVar4 = ptr_end_of_blb_header((astruct_10 *)buffer);
    if (bVar4 <= bVar9) break;
    if (((*(byte *)((int)&param_1[1].field30_0x46 + 1) < 10) &&
        (cVar1 = FUN_8007a9e8(buffer,bVar9), cVar1 != '\0')) &&
       (cVar1 = FUN_8007a984(buffer,bVar9), cVar1 != '\0')) {
      *(char *)((int)&param_1[1].buffer_to_load_blb +
               *(byte *)((int)&param_1[1].field30_0x46 + 1) + 1) = cVar1;
      *(char *)((int)&param_1[1].field30_0x46 + 1) =
           *(char *)((int)&param_1[1].field30_0x46 + 1) + '\x01';
    }
    bVar9 = bVar9 + 1;
  }
  uVar2 = FUN_8007b450(&param_1->field68_0x84);
  PTR_DAT_800a59d8[4] = uVar2;
  FUN_8007df94(param_1);
  return;
}



void FUN_8007cfac(int param_1)

{
  undefined *puVar1;
  int id;
  uint uVar2;
  
  FUN_8007c7ac();
  setup_ordering_tables(PTR_DAT_800a59b0);
  DrawSync(0);
  puVar1 = PTR_DAT_800a59b0;
  PTR_DAT_800a59b0[0x1d] = 0;
  puVar1[0x1e] = 0;
  puVar1[0x1f] = 0;
  puVar1[0x505d] = 0;
  puVar1[0x505e] = 0;
  puVar1[0x505f] = 0;
  draw_print_stream(PTR_DAT_800a59b0);
  vsync_if_required(PTR_DAT_800a59b0);
  *(undefined *)(param_1 + 0x130) = 1;
  FntLoad(0x3c0,0x100);
  id = FntOpen(0x10,0x20,0x120,200,0,0x200);
  SetDumpFnt(id);
  if (*(char *)(param_1 + 0x14a) != '\0') {
    FUN_8007eb48(param_1);
    *(undefined *)(param_1 + 0x149) = 0;
  }
  if (*(int *)(param_1 + 0x13c) != 0) {
    *(int *)(param_1 + 0x28) = *(int *)(param_1 + 0x13c);
    *(undefined4 *)(param_1 + 0x13c) = 0;
  }
  PTR_DAT_800a59d8[0x18] = *(undefined *)(param_1 + 0x14b);
  *(undefined *)(param_1 + 0x146) = 0;
  *(undefined *)(param_1 + 0x147) = 0;
  *(undefined *)(param_1 + 0x144) = 0;
  *(undefined *)(param_1 + 0x145) = 0;
  *(undefined *)(param_1 + 0x148) = 0;
  *(undefined2 *)(param_1 + 0x120) = 0;
  *(undefined2 *)(param_1 + 0x122) = 0;
  *(undefined *)(param_1 + 0x60) = 0;
  *(undefined4 *)(param_1 + 0x10c) = 0;
  FUN_800223b8(param_1);
  FUN_80019470(PTR_DAT_800a59b8);
  FUN_80024464(param_1);
  FUN_80081ee0(param_1);
  FUN_800262a8(PTR_DAT_800a59d8);
  FUN_80024674(param_1);
  FUN_800250c4(param_1);
  FUN_80024f30(param_1);
  FUN_80024774(param_1);
  uVar2 = FUN_8007b43c(param_1 + 0x84);
  if (((uVar2 & 0x40) != 0) && (*(short *)(param_1 + 0x4a) == 0x100)) {
    *(undefined2 *)(param_1 + 0x4a) = 0xf0;
  }
  FUN_8007df94(param_1);
  draw_print_stream(PTR_DAT_800a59b0);
  return;
}



// maybe load level?
// 
// after selecting start game, mode is 0x63 (char == '?')

bool load_level(astruct_6 *level_struct,byte state_)

{
  undefined *puVar1;
  char mode;
  byte bVar2;
  undefined uVar3;
  undefined uVar4;
  char cVar5;
  bool bVar6;
  undefined2 blb_sector_count;
  short sVar7;
  undefined3 extraout_var;
  undefined3 extraout_var_00;
  char *some_asset_ptr;
  int compare_result;
  undefined3 extraout_var_01;
  uint sector_count;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  uint uVar11;
  int iVar12;
  int iVar13;
  astruct_5 *pointer;
  int iVar14;
  bool bVar15;
  
  puVar1 = PTR_DAT_800a59b0;
  PTR_DAT_800a59b0[0x1d] = 0;
  puVar1[0x1e] = 0;
  puVar1[0x1f] = 0;
  puVar1[0x505d] = 0;
  puVar1[0x505e] = 0;
  puVar1[0x505f] = 0;
  draw_print_stream(PTR_DAT_800a59b0);
  bVar15 = false;
  vsync_if_required(PTR_DAT_800a59b0);
  FUN_80020a18(level_struct);
  FUN_80020a70(level_struct);
  FUN_80022334(level_struct);
  FUN_8007c2a0();
                    // this is 'c' on start-up
  if (state_ == 0x63) {
    state_ = 1;
                    // change some global variables
    FUN_8007c2a0();
    pointer = &level_struct->field68_0x84;
    do {
      mode = FUN_8007a254((astruct_9 *)&level_struct->field68_0x84);
      switch(mode) {
      case '\0':
        FUN_8007a36c(&level_struct->field68_0x84,0,1,0);
        break;
      case '\x01':
                    // load intro movies
        some_asset_ptr = (char *)find_blb_asset_addr(pointer);
                    // if find_blb_asset_header point to END2...
        compare_result = strcmp(some_asset_ptr,&END2_BLB);
        if ((compare_result != 0) || (0x2f < (byte)PTR_DAT_800a59d8[0x1b])) {
          some_asset_ptr = (char *)load_another_blb_asset_ptr(pointer);
          compare_result = load_Another_asset_ptr(pointer);
          sVar7 = FUN_8007ae18(pointer);
          bVar6 = load_str(some_asset_ptr,compare_result,sVar7,level_struct->buffer_to_load_blb);
          if (!bVar6) {
            some_asset_ptr = (char *)FUN_8007ae5c((astruct_13 *)pointer);
            compare_result = strcmp(some_asset_ptr,&INT1_BLB);
            if (compare_result == 0) {
              FUN_8007a254((astruct_9 *)pointer);
              FUN_8007a254((astruct_9 *)pointer);
              goto LAB_8007d540;
            }
          }
        }
        break;
      case '\x02':
        bVar2 = get_blb_offset(pointer);
        sector_count = get_blb_sector_count(pointer);
        sector_count = load_screen(CONCAT31(extraout_var_01,bVar2) & 0xffff,sector_count & 0xffff,
                                   level_struct->buffer_to_load_blb);
        if ((sector_count & 0xff) == 0) {
          some_asset_ptr = (char *)FUN_8007ae5c((astruct_13 *)pointer);
          compare_result = strcmp(some_asset_ptr,&CRD1_BLB);
          if (compare_result == 0) {
LAB_8007d540:
                    // is 0x05 before initial load screen (Skullmonkeys logo) is loaded
            FUN_8007a254((astruct_9 *)pointer);
          }
        }
        break;
      case '\x04':
      case '\x05':
        some_asset_ptr = (char *)FUN_8007ae5c((astruct_13 *)pointer);
        compare_result = strcmp(some_asset_ptr,&PIRA2_BLB);
        if (compare_result != 0) {
          draw_print_stream(PTR_DAT_800a59b0);
          vsync_if_required(PTR_DAT_800a59b0);
          bVar2 = get_blb_offset(pointer);
          blb_sector_count = get_blb_sector_count(pointer);
          uVar3 = FUN_8007ab04(pointer);
          uVar4 = FUN_8007ab48(pointer);
          cVar5 = draw_load_screen(CONCAT31(extraout_var,bVar2) & 0xffff,blb_sector_count,
                                   level_struct->buffer_to_load_blb,uVar3,uVar4);
          bVar15 = cVar5 == '\0';
          if (bVar15) {
            FUN_8007a36c(pointer,0,1,0);
            mode = FUN_8007a254((astruct_9 *)pointer);
            draw_print_stream(PTR_DAT_800a59b0);
            vsync_if_required(PTR_DAT_800a59b0);
            bVar2 = get_blb_offset(pointer);
            blb_sector_count = get_blb_sector_count(pointer);
            uVar3 = FUN_8007ab04(pointer);
            uVar4 = FUN_8007ab48(pointer);
            draw_load_screen(CONCAT31(extraout_var_00,bVar2) & 0xffff,blb_sector_count,
                             level_struct->buffer_to_load_blb,uVar3,uVar4);
            FUN_8007a36c(pointer,*PTR_DAT_800a59d8,0,0);
            state_ = PTR_DAT_800a59d8[1];
            FUN_800261d0();
          }
        }
      }
    } while ((mode != '\x03') && (mode != '\x06'));
    pointer = &level_struct->field68_0x84;
    parse_blb_header(pointer,(int)level_struct->buffer_to_load_blb);
    uVar8 = FUN_8007ba38(pointer);
    uVar9 = FUN_8007ba60(pointer);
    uVar10 = FUN_8007ba10(pointer);
    FUN_8007c048(uVar8,uVar9,uVar10);
  }
  mode = FUN_8007aa0c(&level_struct->field68_0x84);
  if ((mode == '\0') && (state_ == 1)) {
    state_ = 5;
    if (DAT_800a6108 == 4) {
      DAT_800a6108 = 0;
    }
    else {
      if ((DAT_800a6108 == 0) || (state_ = 6, DAT_800a6108 == 2)) {
        state_ = 1;
      }
      DAT_800a6108 = DAT_800a6108 + 1;
    }
  }
  pointer = &level_struct->field68_0x84;
  more_parsing_of_blb((astruct_14 *)pointer,(uint)state_,'\x01');
  uVar8 = FUN_8007ba38(pointer);
  uVar9 = FUN_8007ba60(pointer);
  uVar10 = FUN_8007ba10(pointer);
  FUN_8007c048(uVar8,uVar9,uVar10);
  uVar11 = FUN_8007a58c(pointer);
  compare_result = FUN_8007afb8(pointer);
  sector_count = compare_result + 0xfU & 0xfffffff0;
  if (sector_count == 0) {
    sector_count = uVar11;
  }
  iVar14 = uVar11 - sector_count;
  compare_result = (int)level_struct->buffer_to_load_blb + sector_count;
  FUN_800143a0(PTR_DAT_800a59b0,compare_result,-0x7fe04000 - compare_result);
  compare_result = 0;
  FUN_80014850(PTR_DAT_800a59b0);
  if (iVar14 != 0) {
    compare_result = FUN_800143ec(PTR_DAT_800a59b0,1,iVar14,1);
  }
  FUN_80014964(PTR_DAT_800a59b0,0xeeeeeeee);
  iVar12 = FUN_8007b3bc(pointer,0);
  iVar13 = FUN_8007b3bc(pointer,1);
  if ((iVar12 == 0) && (iVar13 == 0)) {
    iVar13 = 2;
  }
  FUN_80013b18((graphics *)PTR_DAT_800a59b0,(ushort)iVar12 & 0xff,(byte)iVar13);
  level_struct->field69_0x104 = 0;
  level_struct->field72_0x108 = 0;
  level_struct->some_mask = 0xffff0000;
  level_struct->some_other_method = &LAB_8007e6b0;
  level_struct->some_other_mask = 0xffff0000;
  level_struct->some_method = &LAB_80020f44;
  level_struct->field16_0x1c = (undefined4 *)0x0;
  level_struct->field17_0x20 = 0;
  level_struct->field18_0x24 = 0;
  level_struct->field19_0x28 = (undefined4 *)0x0;
  level_struct->field20_0x2c = 0;
  level_struct->field21_0x30 = 0;
  level_struct->field33_0x4c = 0;
  level_struct->field34_0x50 = 0;
  level_struct->field_0x58 = 0;
  level_struct->field_0x59 = 0;
  level_struct->field_0x5a = 0;
  level_struct->field_0x5b = 0;
  level_struct->field_0x60 = 0;
  level_struct->field41_0x5c = 0;
  level_struct->field42_0x5e = 0;
  level_struct->field_0x61 = 0;
  level_struct->field_0x62 = 0;
  level_struct->field_0x11a = 0;
  level_struct->field35_0x54 = 0;
  level_struct->field36_0x56 = 0;
                    // 0x34 and 0x38 get read by the method in the struct
  level_struct->field22_0x34 = 0;
  level_struct->field23_0x38 = 0;
  level_struct->field60_0x74 = 0;
  level_struct->field61_0x78 = 0;
  level_struct->field64_0x7c = 0;
  level_struct->field65_0x80 = 0;
  level_struct->field29_0x44 = 0;
  level_struct->field30_0x46 = 0;
  level_struct->field73_0x10c = 0;
  level_struct->field74_0x110 = 0;
  level_struct->field75_0x114 = 0;
  level_struct->field_0x63 = 0;
  level_struct->field85_0x120 = 0;
  level_struct->field86_0x122 = 0;
  level_struct->field_0x12a = 0x28;
  load_all_assets_for_level((astruct_15 *)level_struct);
  more_parsing_of_blb((astruct_14 *)&level_struct->field68_0x84,(uint)state_,'\0');
  if (compare_result != 0) {
    potentially_load_asset_(PTR_DAT_800a59b0,compare_result,iVar14,1);
  }
  FUN_80014964(PTR_DAT_800a59b0,0xeeeeeeee);
  *(undefined2 *)(PTR_DAT_800a59b0 + 0xa64e) = *(undefined2 *)(PTR_DAT_800a59b0 + 0xa64c);
  FUN_8002471c(level_struct);
  FUN_80024674(level_struct);
  FUN_800246cc(level_struct);
  FUN_800250c4(level_struct);
  FUN_80024cf0(level_struct);
  FUN_80024dc0(level_struct);
  FUN_80024f30(level_struct);
  FUN_80024774(level_struct);
  return bVar15;
}



undefined FUN_8007d8d4(astruct_6 *param_1,byte state)

{
  bool bVar1;
  undefined *puVar2;
  char cVar3;
  undefined uVar4;
  undefined uVar5;
  undefined uVar6;
  undefined2 uVar7;
  u_short uVar8;
  int iVar9;
  uint uVar10;
  undefined4 uVar11;
  byte state_;
  int iVar12;
  astruct_5 *paVar13;
  
  FUN_8007c7ac();
  stop_cd_wrapper();
  setup_ordering_tables(PTR_DAT_800a59b0);
  DrawSync(0);
  state_ = state;
  if (state == 0x62) {
    FUN_8007a254((astruct_9 *)&param_1->field68_0x84);
    FUN_8007a254((astruct_9 *)&param_1->field68_0x84);
    state_ = 99;
  }
  if ((state < 0x62) ||
     ((state_ == 99 && (cVar3 = FUN_8007a554(&param_1->field68_0x84), cVar3 == '\x06')))) {
    FUN_8007dd68(param_1);
  }
  FntLoad(0x3c0,0x100);
  iVar9 = FntOpen(0x10,0x20,0x120,200,0,0x200);
  SetDumpFnt(iVar9);
  if (param_1[1].field_0x16 != '\0') {
    FUN_8007eb48(param_1);
    param_1[1].field_0x15 = 0;
  }
  if ((undefined4 *)param_1[1].some_other_mask != (undefined4 *)0x0) {
    param_1->field19_0x28 = (undefined4 *)param_1[1].some_other_mask;
    param_1[1].some_other_mask = 0;
  }
  if (param_1[1].field23_0x38 != 0) {
    potentially_load_asset_(PTR_DAT_800a59b0,param_1[1].field23_0x38,0,0);
    param_1[1].field23_0x38 = 0;
  }
  *(undefined *)((int)&param_1[1].field20_0x2c + 1) = 0;
  param_1[1].field_0x64 = 0;
  param_1[1].field_0x65 = 0x40;
  param_1[1].field_0x66 = 0x40;
  param_1[1].field_0x67 = 0x40;
  param_1[1].field_0x17 = 0;
  param_1[1].field_0x12 = 0;
  param_1[1].field_0x13 = 0;
  param_1[1].field_0x14 = 0;
  param_1[1].field_0x10 = 0;
  param_1[1].field_0x11 = 0;
  param_1[1].field_0x16 = 0;
  param_1->field73_0x10c = 0;
  FUN_800223b8(param_1);
  FUN_80019470(PTR_DAT_800a59b8);
  puVar2 = PTR_DAT_800a59d8;
  *(undefined2 *)(PTR_DAT_800a59b0 + 0xa08a) = 0;
  FUN_80026160(puVar2);
  if (0x61 < state_) {
    FUN_80026158(PTR_DAT_800a59d8);
  }
  uVar4 = load_level(param_1,state_);
  cVar3 = FUN_8007aa0c(BUF_PTR + 0x84);
  if (cVar3 != '\0') {
    *PTR_DAT_800a59d8 = cVar3;
    uVar5 = old_debug__return_input(&param_1->field68_0x84);
    PTR_DAT_800a59d8[1] = uVar5;
  }
  uVar10 = FUN_8007b43c(&param_1->field68_0x84);
  if (((uVar10 & 0x40) != 0) && (param_1->field32_0x4a == 0x100)) {
    param_1->field32_0x4a = 0xf0;
  }
  paVar13 = &param_1->field68_0x84;
  uVar11 = FUN_8007b8e4(paVar13);
  param_1[1].field21_0x30 = uVar11;
  uVar7 = FUN_8007b8d0(paVar13);
  *(undefined2 *)&param_1[1].field22_0x34 = uVar7;
  FUN_80081ee0(param_1);
  param_1->some_mask = 0xffff0000;
  param_1->some_other_method = &LAB_8007e6b0;
  FUN_80081568(param_1);
  param_1->field64_0x7c = &DAT_8009d654;
  param_1->field65_0x80 = 0x79;
  uVar5 = FUN_8007aa0c(paVar13);
  uVar6 = old_debug__return_input(paVar13);
  FUN_8007ca5c(uVar5,uVar6);
  if (*(char *)((int)&param_1[1].field16_0x1c + 2) != '\0') {
    DAT_800a59c8 = 0x40;
    DAT_800a59ca = 0x20;
    DAT_800a59cc = 0x80;
    srand(1);
    uVar11 = FUN_8007ba88(paVar13);
    FUN_80025b78(param_1[1].some_method,uVar11);
    FUN_80025bbc(param_1[1].some_method,1);
    uVar11 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
    iVar9 = FUN_8001c71c(uVar11,0x28c080df,30000,0xa0,0x20,0);
    *(undefined4 *)(iVar9 + 0x24) = 0xffff0000;
    *(undefined **)(iVar9 + 0x28) = &LAB_8001a2c8;
    *(undefined4 *)(iVar9 + 0x2c) = 0xffff0000;
    *(undefined **)(iVar9 + 0x30) = &LAB_8001a2e4;
    iVar12 = *(int *)(iVar9 + 0x34);
    uVar8 = GetTPage((uint)*(byte *)(iVar12 + 0x32),1,(int)*(short *)(iVar12 + 0x10) & 0xffffffc0,
                     (int)*(short *)(iVar12 + 0x12) & 0xffffff00);
    *(u_short *)(iVar12 + 0x24) = uVar8;
    FUN_800213a4(param_1,iVar9);
  }
  cVar3 = FUN_8007b450(paVar13);
  bVar1 = false;
  PTR_DAT_800a59d8[4] = PTR_DAT_800a59d8[4] + cVar3;
  uVar10 = FUN_8007b43c(paVar13);
  if ((uVar10 & 0x200) == 0) {
    uVar10 = FUN_8007b43c(paVar13);
    bVar1 = (uVar10 & 0x2000) == 0;
  }
  if (bVar1) {
    uVar5 = FUN_8007aa0c(BUF_PTR + 0x84);
    FUN_80026b14(PTR_DAT_800a59d8,uVar5);
  }
  FUN_8007df94(param_1);
  draw_print_stream(PTR_DAT_800a59b0);
  return uVar4;
}



void FUN_8007dd68(void)

{
  undefined *puVar1;
  undefined4 uVar2;
  short *psVar3;
  int iVar4;
  int iVar5;
  short unaff_s2;
  code *pcVar6;
  
  uVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x100,1,0);
  psVar3 = (short *)FUN_8001c71c(uVar2,0x8ab92024,30000,0xa0,0x7c,0);
  *(undefined4 *)(psVar3 + 0x12) = 0xffff0000;
  *(undefined **)(psVar3 + 0x14) = &LAB_8001a2c8;
  *(undefined4 *)(psVar3 + 0x16) = 0xffff0000;
  *(undefined **)(psVar3 + 0x18) = &LAB_8001a2e4;
  iVar5 = *(int *)(psVar3 + 0x1a);
  *(undefined *)(iVar5 + 0x34) = 0x40;
  *(undefined *)(iVar5 + 0x35) = 0x40;
  *(undefined *)(iVar5 + 0x36) = 0x40;
  iVar5 = (int)psVar3[1];
  if (iVar5 != 0) {
    if (iVar5 < 1) {
      pcVar6 = *(code **)(psVar3 + 2);
    }
    else {
      iVar4 = iVar5 * 8 + *(int *)((int)psVar3 + (int)psVar3[2]);
      unaff_s2 = (short)*(undefined4 *)(iVar4 + -8);
      pcVar6 = *(code **)(iVar4 + -4);
    }
    iVar4 = (int)*psVar3;
    if (0 < iVar5 << 0x10) {
      iVar4 = unaff_s2 + iVar4;
    }
    (*pcVar6)((int)psVar3 + iVar4);
  }
  (**(code **)(*(int *)(psVar3 + 0xc) + 0x14))
            ((int)psVar3 + (int)*(short *)(*(int *)(psVar3 + 0xc) + 0x10));
  (**(code **)(*(int *)(psVar3 + 0xc) + 0x1c))
            ((int)psVar3 + (int)*(short *)(*(int *)(psVar3 + 0xc) + 0x18));
  iVar5 = *(int *)(*(int *)(psVar3 + 0x1a) + 0xc);
  (**(code **)(iVar5 + 0xc))(*(int *)(psVar3 + 0x1a) + (int)*(short *)(iVar5 + 8));
  DrawSync(0);
  (**(code **)(*(int *)(psVar3 + 0xc) + 0x1c))
            ((int)psVar3 + (int)*(short *)(*(int *)(psVar3 + 0xc) + 0x18));
  DrawSync(0);
  puVar1 = PTR_DAT_800a59b0;
  PTR_DAT_800a59b0[0x1d] = 0;
  puVar1[0x1e] = 0;
  puVar1[0x1f] = 0;
  puVar1[0x505d] = 0;
  puVar1[0x505e] = 0;
  puVar1[0x505f] = 0;
  draw_print_stream(PTR_DAT_800a59b0);
  vsync_if_required(PTR_DAT_800a59b0);
  if (psVar3 != (short *)0x0) {
    (**(code **)(*(int *)(psVar3 + 0xc) + 0xc))
              ((int)psVar3 + (int)*(short *)(*(int *)(psVar3 + 0xc) + 8),3);
  }
  return;
}



void FUN_8007df94(int param_1)

{
  bool bVar1;
  undefined *puVar2;
  undefined uVar3;
  char cVar4;
  byte bVar5;
  ushort uVar6;
  uint uVar7;
  undefined4 uVar8;
  int iVar9;
  int iVar10;
  int iVar11;
  short unaff_s4;
  code *pcVar12;
  
  iVar11 = param_1 + 0x84;
  uVar7 = FUN_8007b43c(iVar11);
  *(byte *)(param_1 + 0x19c) = (byte)(uVar7 >> 1) & 1;
  uVar3 = FUN_8007b464(iVar11);
  *(undefined *)(param_1 + 0x19d) = uVar3;
  *(undefined *)(param_1 + 0x170) = 1;
  cVar4 = FUN_8007aa0c(iVar11);
  if (cVar4 == '\0') {
    *(undefined *)(param_1 + 0x170) = 0;
  }
  uVar7 = FUN_8007b43c(iVar11);
  uVar8 = 0x8000;
  if ((uVar7 & 0x80) == 0) {
    uVar7 = FUN_8007b43c(iVar11);
    uVar8 = 0xc000;
    if ((uVar7 & 8) == 0) {
      uVar8 = 0x10000;
    }
  }
  *(undefined4 *)(param_1 + 0x11c) = uVar8;
  bVar5 = FUN_800241f0(param_1,(int)*(short *)(param_1 + 0x116),
                       (int)((*(ushort *)(param_1 + 0x118) + 1) * 0x10000) >> 0x10);
  if (((bVar5 != 0x65) && (bVar5 != 0)) && (bVar5 < 0x3c)) {
    uVar6 = FUN_80081c68(param_1,bVar5,(int)*(short *)(param_1 + 0x116));
    *(ushort *)(param_1 + 0x118) =
         (*(short *)(param_1 + 0x118) + 1U & 0xfff0) - ((uVar6 & 0xff) - 0xf);
  }
  bVar1 = false;
  uVar7 = FUN_8007b43c(param_1 + 0x84);
  if (((uVar7 & 0x20) != 0) || (uVar7 = FUN_8007b43c(param_1 + 0x84), (uVar7 & 4) != 0)) {
    bVar1 = true;
  }
  if (bVar1) {
    if (*(int *)(param_1 + 0x16c) == 0) {
      uVar8 = FUN_800143ec(PTR_DAT_800a59b0,4,0x100,0);
      *(undefined4 *)(param_1 + 0x16c) = uVar8;
    }
    FUN_8008202c(param_1);
  }
  iVar11 = param_1 + 0x84;
  uVar7 = FUN_8007b43c(iVar11);
  puVar2 = PTR_DAT_800a59b0;
  if ((uVar7 & 0x400) == 0) {
    uVar7 = FUN_8007b43c(iVar11,0x114);
    puVar2 = PTR_DAT_800a59b0;
    if ((uVar7 & 0x200) == 0) {
      uVar7 = FUN_8007b43c(iVar11,0x140);
      puVar2 = PTR_DAT_800a59b0;
      if ((uVar7 & 0x2000) == 0) {
        uVar7 = FUN_8007b43c(iVar11,0x158);
        puVar2 = PTR_DAT_800a59b0;
        if ((uVar7 & 0x100) == 0) {
          uVar7 = FUN_8007b43c(iVar11,0x110);
          puVar2 = PTR_DAT_800a59b0;
          if ((uVar7 & 0x10) == 0) {
            uVar7 = FUN_8007b43c(iVar11,0x128);
            puVar2 = PTR_DAT_800a59b0;
            if ((uVar7 & 4) == 0) {
              *(undefined2 *)(param_1 + 100) = 0x28;
              *(undefined2 *)(param_1 + 0x66) = 0xffd0;
              uVar8 = FUN_800143ec(puVar2,0x1b4,1,0);
              uVar7 = FUN_8007b43c(iVar11);
              iVar9 = FUN_80059664(uVar8,pad_1,(int)*(short *)(param_1 + 0x116),
                                   (int)*(short *)(param_1 + 0x118),
                                   ((uVar7 & 0xffff) >> 0xc ^ 1) & 1);
              *(undefined4 *)(iVar9 + 0x100) = *(undefined4 *)(param_1 + 0x140);
              *(int *)(param_1 + 0x30) = iVar9;
              if ((*(char *)(param_1 + 0x161) == '\0') &&
                 (uVar7 = FUN_8007b43c(iVar11), (uVar7 & 0x1000) == 0)) {
                uVar8 = FUN_800143ec(PTR_DAT_800a59b0,0x10c,1,0);
                uVar8 = FUN_80044f3c(uVar8,(int)*(short *)(param_1 + 0x116),
                                     (int)*(short *)(param_1 + 0x118),0);
                FUN_800213a4(param_1,uVar8);
                uVar8 = 0x60;
              }
              else {
                uVar8 = 0;
              }
            }
            else {
              *(undefined2 *)(param_1 + 100) = 0;
              *(undefined2 *)(param_1 + 0x66) = 0;
              uVar8 = FUN_800143ec(puVar2,0x11c,1,0);
              iVar9 = FUN_8006ed78(uVar8,pad_1,(int)*(short *)(param_1 + 0x116),
                                   (int)*(short *)(param_1 + 0x118));
              uVar8 = 0;
              *(undefined4 *)(iVar9 + 0x100) = *(undefined4 *)(param_1 + 0x140);
              *(undefined2 *)(param_1 + 0x120) = 0;
              *(undefined2 *)(param_1 + 0x122) = 0;
              *(undefined *)(param_1 + 0x12a) = 0;
              *(int *)(param_1 + 0x30) = iVar9;
            }
          }
          else {
            *(undefined2 *)(param_1 + 100) = 0x28;
            *(undefined2 *)(param_1 + 0x66) = 0xffa0;
            uVar8 = FUN_800143ec(puVar2,0x128,1,0);
            iVar9 = FUN_80070d28(uVar8,pad_1,(int)*(short *)(param_1 + 0x116),
                                 (int)((*(ushort *)(param_1 + 0x118) - 0x80) * 0x10000) >> 0x10);
            puVar2 = PTR_DAT_800a59b0;
            *(undefined4 *)(iVar9 + 0x100) = *(undefined4 *)(param_1 + 0x140);
            *(int *)(param_1 + 0x30) = iVar9;
            uVar8 = FUN_800143ec(puVar2,0x10c,1,0);
            uVar8 = FUN_80044f3c(uVar8,(int)*(short *)(param_1 + 0x116),
                                 (int)((*(ushort *)(param_1 + 0x118) - 0x80) * 0x10000) >> 0x10,
                                 0xa000);
            FUN_800213a4(param_1,uVar8);
            uVar8 = 0x80;
          }
        }
        else {
          *(undefined2 *)(param_1 + 100) = 0x28;
          *(undefined2 *)(param_1 + 0x66) = 0xffd0;
          uVar8 = FUN_800143ec(puVar2,0x110,1,0);
          iVar9 = FUN_800738f4(uVar8,pad_1,(int)*(short *)(param_1 + 0x116),
                               (int)*(short *)(param_1 + 0x118));
          uVar8 = 0;
          *(undefined4 *)(iVar9 + 0x100) = *(undefined4 *)(param_1 + 0x140);
          *(int *)(param_1 + 0x30) = iVar9;
        }
      }
      else {
        *(undefined2 *)(param_1 + 100) = 0;
        *(undefined2 *)(param_1 + 0x66) = 0;
        uVar8 = FUN_800143ec(puVar2,0x158,1,0);
        iVar9 = FUN_800781c0(uVar8,pad_1,*(undefined *)(param_1 + 0x18e));
        uVar8 = 0;
        *(undefined4 *)(iVar9 + 0x100) = *(undefined4 *)(param_1 + 0x140);
        *(undefined2 *)(param_1 + 0x120) = 0;
        *(undefined2 *)(param_1 + 0x122) = 0;
        *(undefined *)(param_1 + 0x12a) = 0;
        *(int *)(param_1 + 0x30) = iVar9;
      }
    }
    else {
      *(undefined2 *)(param_1 + 100) = 0;
      *(undefined2 *)(param_1 + 0x66) = 0;
      uVar8 = FUN_800143ec(puVar2,0x140,1,0);
      iVar9 = FUN_800768e8(uVar8,pad_1,param_1 + 0x171,*(undefined *)(param_1 + 0x17b));
      uVar8 = 0;
      *(undefined4 *)(iVar9 + 0x100) = *(undefined4 *)(param_1 + 0x140);
      *(int *)(param_1 + 0x30) = iVar9;
    }
  }
  else {
    *(undefined2 *)(param_1 + 100) = 0;
    *(undefined2 *)(param_1 + 0x66) = 0xffb0;
    uVar8 = FUN_800143ec(puVar2,0x114,1,0);
    iVar9 = FUN_800740c0(uVar8,pad_1,(int)*(short *)(param_1 + 0x116),
                         (int)*(short *)(param_1 + 0x118));
    uVar8 = 0;
    *(undefined4 *)(iVar9 + 0x100) = *(undefined4 *)(param_1 + 0x140);
    *(undefined2 *)(param_1 + 0x120) = 0;
    *(undefined2 *)(param_1 + 0x122) = 0;
    *(undefined *)(param_1 + 0x12a) = 0;
    *(int *)(param_1 + 0x30) = iVar9;
  }
  FUN_80023db8(param_1,0,uVar8);
  FUN_800213a4(param_1,iVar9);
  *(int *)(param_1 + 0x2c) = iVar9;
  FUN_80081c08(param_1);
  uVar7 = FUN_8007b43c(param_1 + 0x84);
  if ((uVar7 & 1) != 0) {
    uVar8 = FUN_800143ec(PTR_DAT_800a59b0,0x30,1,0);
    iVar11 = FUN_800313c8(uVar8);
    FUN_80020f64(param_1,iVar11);
    FUN_80021078(param_1,*(undefined4 *)(iVar11 + 0x1c));
  }
  uVar8 = FUN_800143ec(PTR_DAT_800a59b0,0xb0,1,0);
  uVar8 = FUN_800281a0(uVar8,*(undefined4 *)(param_1 + 0x140));
  *(undefined4 *)(param_1 + 0x14c) = uVar8;
  FUN_80020f64(param_1);
  cVar4 = FUN_8007aa0c(param_1 + 0x84);
  if (cVar4 != '\0') {
    iVar11 = *(int *)(param_1 + 0x14c);
    iVar9 = (int)*(short *)(iVar11 + 10);
    if (iVar9 != 0) {
      if (iVar9 < 1) {
        pcVar12 = *(code **)(iVar11 + 0xc);
      }
      else {
        iVar10 = iVar9 * 8 + *(int *)(iVar11 + *(short *)(iVar11 + 0xc));
        unaff_s4 = (short)*(undefined4 *)(iVar10 + -8);
        pcVar12 = *(code **)(iVar10 + -4);
      }
      iVar10 = (int)*(short *)(iVar11 + 8);
      if (0 < iVar9 << 0x10) {
        iVar10 = unaff_s4 + iVar10;
      }
      (*pcVar12)(iVar11 + iVar10,0x1013,2,0);
    }
  }
  return;
}



void FUN_8007e62c(int param_1,uint param_2)

{
  *(undefined **)(param_1 + 0x18) = &DAT_80012100;
  if (*(int *)(param_1 + 0x16c) != 0) {
    potentially_load_asset_(PTR_DAT_800a59b0,*(int *)(param_1 + 0x16c),0,0);
  }
  FUN_80020970(param_1,0);
  if ((param_2 & 1) != 0) {
    potentially_load_asset_(PTR_DAT_800a59b0,param_1,0,0);
  }
  return;
}



void FUN_8007eb08(int param_1)

{
  *(undefined4 *)(param_1 + 0x134) = *(undefined4 *)(param_1 + 0x1c);
  *(undefined *)(param_1 + 0x14a) = 1;
  *(undefined *)(param_1 + 99) = 1;
  *(undefined4 *)(param_1 + 0x1c) = 0;
  *(undefined4 *)(param_1 + 0x138) = *(undefined4 *)(param_1 + 0x10c);
  FUN_80020f64(param_1,*(undefined4 *)(param_1 + 0x2c));
  return;
}



void FUN_8007eb48(int param_1)

{
  undefined4 uVar1;
  int *piVar2;
  int iVar3;
  
  *(undefined *)(param_1 + 0x14a) = 0;
  *(undefined *)(param_1 + 99) = 0;
  *(undefined4 *)(param_1 + 0x10c) = *(undefined4 *)(param_1 + 0x138);
  FUN_80021d2c(param_1,*(undefined4 *)(param_1 + 0x2c));
  piVar2 = *(int **)(param_1 + 0x1c);
  uVar1 = *(undefined4 *)(param_1 + 0x134);
  *(undefined4 *)(param_1 + 0x134) = 0;
  *(undefined4 *)(param_1 + 0x1c) = uVar1;
  while (piVar2 != (int *)0x0) {
    FUN_80020f64(param_1,piVar2[1]);
    iVar3 = *piVar2;
    potentially_load_asset_(PTR_DAT_800a59b0,piVar2,8,0);
    piVar2 = (int *)iVar3;
  }
  return;
}



undefined4 FUN_8007ebd4(int param_1,int param_2)

{
  int *piVar1;
  int *piVar2;
  int *piVar3;
  
  piVar3 = (int *)*(int *)(param_1 + 0x134);
  piVar2 = (undefined4 *)0x0;
  while( true ) {
    piVar1 = piVar3;
    if (piVar1 == (int *)0x0) {
      return 0;
    }
    if (piVar1[1] == param_2) break;
    piVar3 = (int *)*piVar1;
    piVar2 = piVar1;
  }
  if (piVar2 == (undefined4 *)0x0) {
    *(int *)(param_1 + 0x134) = *piVar1;
  }
  else {
    *piVar2 = *piVar1;
  }
  potentially_load_asset_(PTR_DAT_800a59b0,piVar1,8,0);
  return 1;
}



void FUN_8007ec64(int param_1)

{
  undefined uVar1;
  undefined4 *puVar2;
  undefined4 uVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  undefined4 *puVar6;
  
  FUN_8007cb04();
  FUN_8007c348(0x65281e40,0xa0,1);
  uVar1 = *(undefined *)(param_1 + 99);
  uVar3 = *(undefined4 *)(param_1 + 0x1c);
  *(undefined *)(param_1 + 0x160) = 0x16;
  *(undefined *)(param_1 + 0x151) = 0;
  *(undefined *)(param_1 + 0x150) = 1;
  *(undefined *)(param_1 + 99) = 1;
  *(undefined4 *)(param_1 + 0x1c) = 0;
  *(undefined4 *)(param_1 + 0x154) = *(undefined4 *)(param_1 + 0x10c);
  *(undefined *)(param_1 + 0x158) = uVar1;
  *(undefined4 *)(param_1 + 0x15c) = uVar3;
  FUN_80020f64(param_1,*(undefined4 *)(param_1 + 0x14c));
  FUN_8002b228(*(undefined4 *)(param_1 + 0x14c));
  puVar2 = (undefined4 *)0x0;
  puVar4 = *(undefined4 **)(param_1 + 0x15c);
  puVar5 = (undefined4 *)0x0;
  while (puVar4 != (undefined4 *)0x0) {
    puVar6 = puVar4;
    if (*(short *)(puVar4[1] + 0x12) == 0x10) {
      FUN_80020f64(param_1);
      puVar2 = puVar4;
      puVar6 = puVar5;
      if (puVar5 == (undefined4 *)0x0) {
        *(undefined4 *)(param_1 + 0x15c) = *puVar4;
      }
      else {
        *puVar5 = *puVar4;
      }
    }
    puVar4 = (undefined4 *)*puVar4;
    puVar5 = puVar6;
    if (puVar2 != (undefined4 *)0x0) {
      potentially_load_asset_(PTR_DAT_800a59b0,puVar2,8,0);
      puVar2 = (undefined4 *)0x0;
    }
  }
  return;
}



void FUN_8007ed90(int param_1)

{
  FUN_8007c348(0x4c60f249,0xa0,1);
  *(undefined *)(param_1 + 0x151) = 1;
  FUN_8002bb90(*(undefined4 *)(param_1 + 0x14c));
  *(undefined *)(param_1 + 0x160) = 0x16;
  return;
}



void FUN_8007ede0(int param_1)

{
  *(undefined *)(param_1 + 0x151) = 1;
  *(undefined *)(param_1 + 0x160) = 0x16;
  *(undefined *)(param_1 + 0x147) = 1;
  return;
}



void FUN_8007edf8(int param_1)

{
  undefined4 uVar1;
  
  FUN_8007cb80();
  *(undefined *)(param_1 + 0x151) = 0;
  *(undefined *)(param_1 + 0x150) = 0;
  *(undefined4 *)(param_1 + 0x10c) = *(undefined4 *)(param_1 + 0x154);
  *(undefined *)(param_1 + 99) = *(undefined *)(param_1 + 0x158);
  FUN_80022214(param_1);
  uVar1 = *(undefined4 *)(param_1 + 0x15c);
  *(undefined4 *)(param_1 + 0x15c) = 0;
  *(undefined4 *)(param_1 + 0x1c) = uVar1;
  if (*(char *)(param_1 + 0x18d) != '\0') {
    FUN_80020f64(param_1,*(undefined4 *)(param_1 + 0x2c));
    *(undefined *)(param_1 + 0x18d) = 0;
  }
  return;
}



void FUN_8007ee64(int param_1)

{
  undefined4 uVar1;
  
  *(undefined *)(param_1 + 0x145) = 1;
  *(undefined *)(param_1 + 0x130) = 1;
  *(undefined *)(param_1 + 0x131) = 0;
  *(undefined *)(param_1 + 0x132) = 0;
  *(undefined *)(param_1 + 0x133) = 0;
  FUN_80021d2c(param_1,*(undefined4 *)(param_1 + 0x2c));
  FUN_800223b8(param_1);
  FUN_800213a4(param_1,*(undefined4 *)(param_1 + 0x2c));
  uVar1 = *(undefined4 *)(param_1 + 0x28);
  *(undefined4 *)(param_1 + 0x28) = 0;
  *(undefined4 *)(param_1 + 0x13c) = uVar1;
  return;
}



bool FUN_8007eec8(undefined4 param_1,char param_2,undefined *param_3,undefined *param_4,
                 undefined *param_5)

{
  int iVar1;
  byte bVar2;
  
  bVar2 = param_2 - 0x15;
  if (bVar2 < 0x14) {
    iVar1 = (uint)bVar2 * 3;
    *param_3 = (&DAT_8009da1c)[iVar1];
    *param_4 = (&DAT_8009da1d)[iVar1];
    *param_5 = (&DAT_8009da1e)[iVar1];
  }
  return bVar2 < 0x14;
}



void FUN_8007ef34(int param_1)

{
  uint uVar1;
  uint uVar2;
  int *piVar3;
  
  piVar3 = *(int **)(param_1 + 0x1c);
  while (piVar3 != (int *)0x0) {
    uVar1 = piVar3[1];
    uVar2 = 0;
    if (*(short *)(uVar1 + 0x12) == 8) {
      uVar2 = uVar1 & -(uint)(*(short *)(uVar1 + 0x70) == 1);
    }
    if ((*(short *)(uVar1 + 0x12) == 0x20) && (*(short *)(uVar1 + 0x70) == 1)) {
      uVar2 = uVar1;
    }
    piVar3 = (int *)*piVar3;
    FUN_80022070(param_1,uVar2);
  }
  for (piVar3 = *(int **)(param_1 + 0x28); piVar3 != (int *)0x0; piVar3 = (int *)*piVar3) {
    uVar2 = (uint)*(ushort *)(piVar3[1] + 0x12);
    if (((uVar2 - 0x39 < 2) || (uVar2 == 0x3b)) || (uVar2 - 0x1c < 2)) {
      *(undefined *)(piVar3[1] + 0x16) = 0;
    }
  }
  return;
}



void FUN_80081568(int param_1)

{
  byte bVar1;
  int iVar2;
  uint uVar3;
  int *piVar4;
  
  piVar4 = *(int **)(param_1 + 0x28);
  *(undefined *)(param_1 + 0x18e) = 0;
  do {
    if (piVar4 == (int *)0x0) {
      return;
    }
    iVar2 = piVar4[1];
    bVar1 = *(byte *)(iVar2 + 0x14);
    if (bVar1 == 2) {
      uVar3 = (uint)*(ushort *)(iVar2 + 0x12);
      if (uVar3 - 0xc9 < 0x1c) {
        *(uint *)(iVar2 + 0xc) = uVar3;
        *(undefined2 *)(iVar2 + 0x12) = 0x5f;
      }
      else {
        switch(uVar3) {
        case 2:
          *(undefined2 *)(iVar2 + 0x12) = 7;
          break;
        case 3:
          *(undefined2 *)(iVar2 + 0x12) = 2;
          break;
        default:
          goto switchD_800818dc_caseD_4;
        case 8:
          *(undefined2 *)(iVar2 + 0x12) = 0x16;
          break;
        case 9:
          *(undefined2 *)(iVar2 + 0x12) = 0xb;
          break;
        case 10:
          *(undefined2 *)(iVar2 + 0x12) = 9;
          break;
        case 0xb:
          *(undefined2 *)(iVar2 + 0x12) = 0x4b;
          break;
        case 0xc:
          *(undefined2 *)(iVar2 + 0x12) = 0x3d;
          break;
        case 0xd:
          *(undefined2 *)(iVar2 + 0x12) = 0x19;
          break;
        case 0xe:
          *(undefined2 *)(iVar2 + 0x12) = 0x48;
          break;
        case 0x10:
          *(undefined2 *)(iVar2 + 0x12) = 0x17;
          break;
        case 0x15:
          *(undefined2 *)(iVar2 + 0x12) = 0x1c;
          break;
        case 0x16:
          *(undefined2 *)(iVar2 + 0x12) = 0x1d;
          break;
        case 0x17:
          *(undefined2 *)(iVar2 + 0x12) = 0x45;
          break;
        case 0x18:
          *(undefined2 *)(iVar2 + 0x12) = 0x46;
          break;
        case 0x19:
          *(undefined2 *)(iVar2 + 0x12) = 0x4f;
          break;
        case 0x1a:
          *(undefined2 *)(iVar2 + 0x12) = 0x51;
          break;
        case 0x1b:
          *(undefined2 *)(iVar2 + 0x12) = 0x61;
          break;
        case 0x1c:
          *(undefined2 *)(iVar2 + 0x12) = 0x59;
          break;
        case 0x1d:
          *(undefined2 *)(iVar2 + 0x12) = 0x62;
          break;
        case 0x1e:
          *(undefined2 *)(iVar2 + 0x12) = 0x6e;
          break;
        case 0x1f:
          *(undefined2 *)(iVar2 + 0x12) = 0x6f;
          break;
        case 0x29:
          *(undefined2 *)(iVar2 + 0x12) = 0x53;
          break;
        case 0x2a:
          *(undefined2 *)(iVar2 + 0x12) = 0x55;
          break;
        case 0x2b:
          *(undefined2 *)(iVar2 + 0x12) = 0x68;
          break;
        case 0x2c:
          *(undefined2 *)(iVar2 + 0x12) = 0x69;
          break;
        case 0x2d:
          *(undefined2 *)(iVar2 + 0x12) = 0x77;
          break;
        case 0x3d:
          *(undefined2 *)(iVar2 + 0x12) = 0x5e;
          break;
        case 0x3e:
          *(undefined4 *)(iVar2 + 0xc) = 0xc9;
          *(undefined2 *)(iVar2 + 0x12) = 0x5f;
          break;
        case 0x51:
          *(undefined2 *)(iVar2 + 0x12) = 0x41;
          break;
        case 0xa7:
          uVar3 = FUN_8007b43c(param_1 + 0x84);
          if ((uVar3 & 0x2000) != 0) {
            *(undefined *)(param_1 + 0x18e) = 1;
          }
        }
      }
    }
    else if (bVar1 < 3) {
      if (bVar1 == 1) {
        switch(*(undefined2 *)(iVar2 + 0x12)) {
        case 5:
          *(undefined2 *)(iVar2 + 0x12) = 0x70;
          break;
        case 6:
          *(undefined2 *)(iVar2 + 0x12) = 0x71;
          break;
        case 7:
          *(undefined2 *)(iVar2 + 0x12) = 0x72;
          break;
        case 8:
          *(undefined2 *)(iVar2 + 0x12) = 0x73;
          break;
        case 9:
          *(undefined2 *)(iVar2 + 0x12) = 0x74;
          break;
        case 10:
          *(undefined2 *)(iVar2 + 0x12) = 0x75;
          break;
        default:
switchD_800818dc_caseD_4:
          *(undefined2 *)(iVar2 + 0x12) = 8;
          break;
        case 0x15:
          *(undefined2 *)(iVar2 + 0x12) = 0x76;
          break;
        case 0x16:
          *(undefined2 *)(iVar2 + 0x12) = 0x1b;
          break;
        case 0x17:
          *(undefined2 *)(iVar2 + 0x12) = 10;
          break;
        case 0x18:
          *(undefined2 *)(iVar2 + 0x12) = 0x1a;
          break;
        case 0x19:
          *(undefined2 *)(iVar2 + 0x12) = 0;
          break;
        case 0x1a:
          *(undefined2 *)(iVar2 + 0x12) = 3;
          break;
        case 0x1b:
          *(undefined2 *)(iVar2 + 0x12) = 4;
          break;
        case 0x1c:
          *(undefined2 *)(iVar2 + 0x12) = 0x29;
          break;
        case 0x1d:
          *(undefined2 *)(iVar2 + 0x12) = 99;
          break;
        case 0x1e:
          *(undefined2 *)(iVar2 + 0x12) = 0x6d;
          break;
        case 0x21:
          *(undefined2 *)(iVar2 + 0x12) = 0x54;
          break;
        case 0x22:
          *(undefined2 *)(iVar2 + 0x12) = 0x60;
          break;
        case 0x23:
          *(undefined2 *)(iVar2 + 0x12) = 0x56;
          break;
        case 0x24:
          *(undefined2 *)(iVar2 + 0x12) = 0x57;
          break;
        case 0x25:
          *(undefined2 *)(iVar2 + 0x12) = 0x58;
          break;
        case 0x2d:
          *(undefined2 *)(iVar2 + 0x12) = 0x18;
          break;
        case 0x30:
          *(undefined2 *)(iVar2 + 0x12) = 0x6a;
          break;
        case 0x31:
          *(undefined2 *)(iVar2 + 0x12) = 0x6b;
          break;
        case 0x32:
          *(undefined2 *)(iVar2 + 0x12) = 0x6c;
          break;
        case 0x40:
          *(undefined2 *)(iVar2 + 0x12) = 0x2d;
          break;
        case 0x41:
          *(undefined2 *)(iVar2 + 0x12) = 0x2a;
          break;
        case 0x42:
          *(undefined2 *)(iVar2 + 0x12) = 0x2b;
          break;
        case 0x43:
          *(undefined2 *)(iVar2 + 0x12) = 0x2c;
          break;
        case 0x44:
          *(undefined2 *)(iVar2 + 0x12) = 0x2f;
          break;
        case 0x45:
          *(undefined2 *)(iVar2 + 0x12) = 0x30;
          break;
        case 0x46:
          *(undefined2 *)(iVar2 + 0x12) = 0x50;
          break;
        case 0x51:
          *(undefined2 *)(iVar2 + 0x12) = 0x1e;
          break;
        case 0x52:
          *(undefined2 *)(iVar2 + 0x12) = 0x1f;
          break;
        case 0x53:
          *(undefined2 *)(iVar2 + 0x12) = 0x20;
          break;
        case 0x54:
          *(undefined2 *)(iVar2 + 0x12) = 0x21;
          break;
        case 0x55:
          *(undefined2 *)(iVar2 + 0x12) = 0x22;
          break;
        case 0x56:
          *(undefined2 *)(iVar2 + 0x12) = 0x23;
          break;
        case 0x57:
          *(undefined2 *)(iVar2 + 0x12) = 0x24;
          break;
        case 0x58:
          *(undefined2 *)(iVar2 + 0x12) = 0x25;
          break;
        case 0x59:
          *(undefined2 *)(iVar2 + 0x12) = 0x26;
          break;
        case 0x5a:
          *(undefined2 *)(iVar2 + 0x12) = 0x2e;
          break;
        case 0x65:
          *(undefined2 *)(iVar2 + 0x12) = 0x27;
          break;
        case 0x66:
          *(undefined2 *)(iVar2 + 0x12) = 0x28;
          break;
        case 0x67:
          *(undefined2 *)(iVar2 + 0x12) = 0x34;
          break;
        case 0x69:
          *(undefined2 *)(iVar2 + 0x12) = 0x35;
          break;
        case 0x6a:
          *(undefined2 *)(iVar2 + 0x12) = 0x36;
          break;
        case 0x6b:
          *(undefined2 *)(iVar2 + 0x12) = 0x37;
          break;
        case 0x6d:
          *(undefined2 *)(iVar2 + 0x12) = 0x78;
          break;
        case 0x7f:
          *(undefined2 *)(iVar2 + 0x12) = 0x3c;
          break;
        case 0x8d:
          *(undefined2 *)(iVar2 + 0x12) = 0x47;
          break;
        case 0x8e:
          *(undefined2 *)(iVar2 + 0x12) = 0x65;
          break;
        case 0x8f:
          *(undefined2 *)(iVar2 + 0x12) = 100;
          break;
        case 0x90:
          *(undefined2 *)(iVar2 + 0x12) = 0x66;
          break;
        case 0x91:
          *(undefined2 *)(iVar2 + 0x12) = 0x67;
        }
      }
      else {
        *(undefined2 *)(iVar2 + 0x12) = 8;
      }
    }
    else if (bVar1 == 3) {
      switch(*(undefined2 *)(iVar2 + 0x12)) {
      case 4:
        *(undefined2 *)(iVar2 + 0x12) = 0x5c;
        break;
      case 5:
        *(undefined2 *)(iVar2 + 0x12) = 0x5d;
        break;
      case 6:
        *(undefined2 *)(iVar2 + 0x12) = 0x44;
        break;
      case 7:
        *(undefined2 *)(iVar2 + 0x12) = 0x33;
        break;
      case 8:
        *(undefined2 *)(iVar2 + 0x12) = 6;
        break;
      default:
        goto switchD_800818dc_caseD_4;
      case 0xb:
        *(undefined2 *)(iVar2 + 0x12) = 0x15;
        break;
      case 0xe:
        *(undefined2 *)(iVar2 + 0x12) = 0x12;
        break;
      case 0xf:
        *(undefined2 *)(iVar2 + 0x12) = 0x3b;
        break;
      case 0x10:
        *(undefined2 *)(iVar2 + 0x12) = 0x40;
        break;
      case 0x18:
        *(undefined2 *)(iVar2 + 0x12) = 0x5b;
        break;
      case 0x19:
        *(undefined2 *)(iVar2 + 0x12) = 0x4c;
        break;
      case 0x1a:
        *(undefined2 *)(iVar2 + 0x12) = 0x43;
        break;
      case 0x1b:
        *(undefined2 *)(iVar2 + 0x12) = 0x32;
        break;
      case 0x1c:
        *(undefined2 *)(iVar2 + 0x12) = 5;
        break;
      case 0x1f:
        *(undefined2 *)(iVar2 + 0x12) = 0x14;
        break;
      case 0x22:
        *(undefined2 *)(iVar2 + 0x12) = 0x11;
        break;
      case 0x23:
        *(undefined2 *)(iVar2 + 0x12) = 0x3a;
        break;
      case 0x24:
        *(undefined2 *)(iVar2 + 0x12) = 0x3f;
        break;
      case 0x2b:
        *(undefined2 *)(iVar2 + 0x12) = 0x52;
        break;
      case 0x2c:
        *(undefined2 *)(iVar2 + 0x12) = 0x5a;
        break;
      case 0x2e:
        *(undefined2 *)(iVar2 + 0x12) = 0x42;
        break;
      case 0x2f:
        *(undefined2 *)(iVar2 + 0x12) = 0x31;
        break;
      case 0x30:
        *(undefined2 *)(iVar2 + 0x12) = 1;
        break;
      case 0x33:
        *(undefined2 *)(iVar2 + 0x12) = 0x13;
        break;
      case 0x36:
        *(undefined2 *)(iVar2 + 0x12) = 0xc;
        break;
      case 0x37:
        *(undefined2 *)(iVar2 + 0x12) = 0x39;
        break;
      case 0x38:
        *(undefined2 *)(iVar2 + 0x12) = 0x3e;
      }
    }
    else {
      *(undefined2 *)(iVar2 + 0x12) = 8;
    }
    piVar4 = (int *)*piVar4;
  } while( true );
}



void FUN_80081c08(int param_1)

{
  uint uVar1;
  
  FUN_800191d8(PTR_DAT_800a59b8,&DAT_8009db10);
  uVar1 = FUN_8007b43c(param_1 + 0x84);
  if ((uVar1 & 4) != 0) {
    load_sprites(PTR_DAT_800a59b8,0x168254b5);
  }
  return;
}



undefined FUN_80081c68(undefined4 param_1,uint param_2,uint param_3)

{
  return *(undefined *)((int)&DAT_8009d284 + (param_3 & 0xf) + (param_2 & 0xff) * 0x10);
}



void FUN_80081d68(int param_1)

{
  uint uVar1;
  undefined4 uVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  int *piVar6;
  int iVar7;
  
  uVar1 = *(uint *)(param_1 + 0x10c) & 1;
  iVar7 = *(int *)(param_1 + 0x164) + uVar1 * 0x40;
  piVar6 = (int *)(iVar7 + 0x3c);
  for (; (uVar1 & 0xffff) < (uint)*(ushort *)(param_1 + 0x168); uVar1 = uVar1 + 2) {
    uVar4 = (uint)((int)*(short *)(param_1 + 0x44) * piVar6[-10]) >> 0x10;
    iVar5 = uVar4 - 0x10;
    iVar3 = *(ushort *)PTR_DAT_800a59b0 + uVar4 + 0x10;
    uVar4 = (uint)((int)*(short *)(param_1 + 0x46) * piVar6[-9]) >> 0x10;
    if (((((int)*(short *)(piVar6 + -0xd) < iVar3 * 0x10000 >> 0x10) &&
         (iVar5 * 0x10000 >> 0x10 < (int)*(short *)(piVar6 + -0xc))) && (*piVar6 == 0)) &&
       (((int)*(short *)((int)piVar6 + -0x32) <
         (int)((*(ushort *)(PTR_DAT_800a59b0 + 2) + uVar4 + 0x10) * 0x10000) >> 0x10 &&
        ((int)((uVar4 - 0x10) * 0x10000) >> 0x10 < (int)*(short *)((int)piVar6 + -0x2e))))) {
      uVar2 = FUN_800143ec(PTR_DAT_800a59b0,0x10c,1,0,(short)iVar5,(short)iVar3);
      uVar2 = FUN_80033d38(uVar2,iVar7);
      FUN_800213a4(param_1,uVar2);
      *piVar6 = 1;
    }
    piVar6 = piVar6 + 0x20;
    iVar7 = iVar7 + 0x80;
  }
  return;
}



void FUN_80081ee0(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x164);
  iVar2 = 0;
  if (*(short *)(param_1 + 0x168) != 0) {
    do {
      *(undefined4 *)(iVar1 + 0x3c) = 0;
      iVar2 = iVar2 + 1;
      iVar1 = iVar1 + 0x40;
    } while (iVar2 * 0x10000 >> 0x10 < (int)(uint)*(ushort *)(param_1 + 0x168));
  }
  return;
}



void FUN_8008202c(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar2 = 0;
  do {
    iVar1 = iVar2 << 0x10;
    iVar2 = iVar2 + 1;
    *(undefined4 *)((iVar1 >> 0xe) + *(int *)(param_1 + 0x16c)) = 0;
  } while (iVar2 * 0x10000 >> 0x10 < 0x100);
  return;
}



// WARNING: Type propagation algorithm not settling

undefined4 FUN_80082110(int param_1)

{
  bool bVar1;
  byte bVar2;
  undefined uVar3;
  char cVar4;
  uint uVar5;
  uint uVar6;
  short sVar7;
  int iVar8;
  byte bVar9;
  
  sVar7 = *(short *)(*(int *)(param_1 + 0x140) + 2);
  if (sVar7 == 0) {
    return 0;
  }
  *(short *)((uint)*(byte *)(param_1 + 0x18c) * 2 + param_1 + 0x17c) = sVar7;
  bVar2 = *(char *)(param_1 + 0x18c) + 1;
  *(byte *)(param_1 + 0x18c) = bVar2;
  bVar9 = 0;
  if (7 < bVar2) {
    *(undefined *)(param_1 + 0x18c) = 0;
  }
LAB_80082180:
  iVar8 = 0;
  if (0x15 < bVar9) {
    return 0;
  }
  uVar5 = (uint)*(byte *)(param_1 + 0x18c);
  uVar6 = uVar5;
  do {
    sVar7 = (short)iVar8;
    if (*(short *)(uVar5 * 2 + param_1 + 0x17c) !=
        *(short *)((int)&DAT_8009db3c + ((iVar8 << 0x10) >> 0xf) + (uint)bVar9 * 0x10)) break;
    uVar6 = uVar6 + 1;
    iVar8 = iVar8 + 1;
    sVar7 = (short)iVar8;
    if (7 < (uVar6 & 0xff)) {
      uVar6 = 0;
    }
    uVar5 = uVar6 & 0xff;
  } while (iVar8 * 0x10000 >> 0x10 < 8);
  if (sVar7 < 8) goto code_r0x8008220c;
  if (0x15 < bVar9) {
    return 0;
  }
  FUN_8007c348(0x90810000,0xa0,1);
  switch(bVar9) {
  case 0:
    DAT_800a59b4 = DAT_800a59b4 ^ 0x80;
    if ((DAT_800a59b4 & 0x80) != 0) {
      DAT_800a59b4 = DAT_800a59b4 & 0xffbf;
      return 1;
    }
    break;
  default:
    PTR_DAT_800a59d8[0x11] = 99;
    PTR_DAT_800a59d8[0x13] = 0x14;
    PTR_DAT_800a59d8[0x17] = PTR_DAT_800a59d8[0x17] | 1;
    PTR_DAT_800a59d8[0x14] = 7;
    PTR_DAT_800a59d8[0x15] = 7;
    PTR_DAT_800a59d8[0x16] = 7;
    PTR_DAT_800a59d8[0x1c] = 7;
    if (bVar9 == 2) {
      PTR_DAT_800a59d8[0x19] = 3;
      PTR_DAT_800a59d8[0x1a] = 3;
      PTR_DAT_800a59d8[0x1b] = 0x30;
    }
    goto LAB_800823d0;
  case 3:
    PTR_DAT_800a59d8[0x13] = 0x14;
    return 0;
  case 4:
    PTR_DAT_800a59d8[0x17] = PTR_DAT_800a59d8[0x17] | 1;
    return 0;
  case 5:
    PTR_DAT_800a59d8[0x11] = 99;
    return 0;
  case 6:
    PTR_DAT_800a59d8[0x16] = 7;
    goto LAB_800823d0;
  case 7:
    PTR_DAT_800a59d8[0x14] = 7;
    goto LAB_800823d0;
  case 8:
    PTR_DAT_800a59d8[0x1c] = 7;
    goto LAB_800823d0;
  case 9:
    PTR_DAT_800a59d8[0x15] = 7;
LAB_800823d0:
    uVar3 = FUN_8007aa0c(BUF_PTR + 0x84);
    FUN_80026b14(PTR_DAT_800a59d8,uVar3);
    return 0;
  case 10:
    PTR_DAT_800a59d8[0x1a] = 3;
    return 0;
  case 0xb:
    PTR_DAT_800a59d8[0x19] = 3;
    return 0;
  case 0xc:
    cVar4 = old_debug__return_input(param_1 + 0x84);
    cVar4 = cVar4 + '\x01';
    goto LAB_80082434;
  case 0xd:
    cVar4 = 'c';
LAB_80082434:
    *(char *)(param_1 + 0x148) = cVar4;
    break;
  case 0xe:
    DAT_800a59b4 = DAT_800a59b4 ^ 1;
    return 1;
  case 0xf:
    *(bool *)(param_1 + 399) = *(char *)(param_1 + 399) == '\0';
    return 1;
  case 0x10:
    iVar8 = param_1 + 0x84;
    uVar6 = FUN_8007b43c(iVar8);
    bVar1 = false;
    if ((uVar6 & 0x400) == 0) {
      uVar6 = FUN_8007b43c(iVar8);
      bVar1 = false;
      if ((uVar6 & 0x200) == 0) {
        uVar6 = FUN_8007b43c(iVar8);
        bVar1 = false;
        if ((uVar6 & 0x2000) == 0) {
          uVar6 = FUN_8007b43c(iVar8);
          bVar1 = false;
          if ((uVar6 & 0x100) == 0) {
            uVar6 = FUN_8007b43c(iVar8);
            bVar1 = false;
            if ((uVar6 & 0x10) == 0) {
              uVar6 = FUN_8007b43c(iVar8);
              bVar1 = (uVar6 & 4) == 0;
            }
          }
        }
      }
    }
    if (!bVar1) {
      return 1;
    }
    FUN_8005b390(*(undefined4 *)(param_1 + 0x2c));
    return 1;
  case 0x11:
    iVar8 = param_1 + 0x84;
    uVar6 = FUN_8007b43c(iVar8);
    bVar1 = false;
    if ((uVar6 & 0x400) == 0) {
      uVar6 = FUN_8007b43c(iVar8);
      bVar1 = false;
      if ((uVar6 & 0x200) == 0) {
        uVar6 = FUN_8007b43c(iVar8);
        bVar1 = false;
        if ((uVar6 & 0x2000) == 0) {
          uVar6 = FUN_8007b43c(iVar8);
          bVar1 = false;
          if ((uVar6 & 0x100) == 0) {
            uVar6 = FUN_8007b43c(iVar8);
            bVar1 = false;
            if ((uVar6 & 0x10) == 0) {
              uVar6 = FUN_8007b43c(iVar8);
              bVar1 = (uVar6 & 4) == 0;
            }
          }
        }
      }
    }
    if (bVar1) {
      *(undefined *)(*(int *)(param_1 + 0x2c) + 0x1af) = 1;
    }
    break;
  case 0x12:
    DAT_800a59b4 = (DAT_800a59b4 ^ 2) & 0xfffb;
    return 1;
  case 0x13:
    *(undefined *)(param_1 + 0x18d) = 1;
    break;
  case 0x14:
    iVar8 = param_1 + 0x84;
    uVar6 = FUN_8007b43c(iVar8);
    bVar1 = false;
    if ((uVar6 & 0x400) == 0) {
      uVar6 = FUN_8007b43c(iVar8);
      bVar1 = false;
      if ((uVar6 & 0x200) == 0) {
        uVar6 = FUN_8007b43c(iVar8);
        bVar1 = false;
        if ((uVar6 & 0x2000) == 0) {
          uVar6 = FUN_8007b43c(iVar8);
          bVar1 = false;
          if ((uVar6 & 0x100) == 0) {
            uVar6 = FUN_8007b43c(iVar8);
            bVar1 = false;
            if ((uVar6 & 0x10) == 0) {
              uVar6 = FUN_8007b43c(iVar8);
              bVar1 = (uVar6 & 4) == 0;
            }
          }
        }
      }
    }
    if (bVar1) {
      *(undefined *)(*(int *)(param_1 + 0x2c) + 0x1b0) = 1;
    }
    break;
  case 0x15:
    iVar8 = param_1 + 0x84;
    uVar6 = FUN_8007b43c(iVar8);
    bVar1 = false;
    if ((uVar6 & 0x400) == 0) {
      uVar6 = FUN_8007b43c(iVar8);
      bVar1 = false;
      if ((uVar6 & 0x200) == 0) {
        uVar6 = FUN_8007b43c(iVar8);
        bVar1 = false;
        if ((uVar6 & 0x2000) == 0) {
          uVar6 = FUN_8007b43c(iVar8);
          bVar1 = false;
          if ((uVar6 & 0x100) == 0) {
            uVar6 = FUN_8007b43c(iVar8);
            bVar1 = false;
            if ((uVar6 & 0x10) == 0) {
              uVar6 = FUN_8007b43c(iVar8);
              bVar1 = (uVar6 & 4) == 0;
            }
          }
        }
      }
    }
    if (bVar1) {
      *(undefined *)(*(int *)(param_1 + 0x2c) + 0x1b1) = 1;
    }
  }
  return 1;
code_r0x8008220c:
  bVar9 = bVar9 + 1;
  goto LAB_80082180;
}



void main(void)

{
  byte bVar1;
  int print_stream;
  uint size;
  undefined4 name_ptr;
  undefined *movie_ptr;
  u_long controller_btn_status;
  byte i;
  uint counter;
  int buf_ptr2;
  uint level_id;
  astruct_10 *blb_ptr;
  undefined4 unaff_s4;
  code *pcVar2;
  
  __main();
  counter = 0;
  SsUtReverbOff();
  ResetCallback();
  load_files_from_cd();
  setup_graphics((graphics *)PTR_DAT_800a59b0);
  BUF_PTR = &BUFFER;
  PadInit(0);
  InitGeom();
  SetDispMask(1);
  FntLoad(0x3c0,0x100);
  print_stream = FntOpen(0x10,0x20,0x120,200,0,0x200);
  SetDumpFnt(print_stream);
  initialise_struct(PTR_DAT_800a59d8);
  load_level_(&BUFFER,pad_1);
  blb_ptr = (astruct_10 *)(BUF_PTR + 0x42);
  while( true ) {
                    // paVar8 is 8009dc9c at start up
                    // got_size is 1a
    size = ptr_end_of_blb_header(blb_ptr);
    level_id = counter & 0xff;
                    // I think this loads all the level info from the blb header
                    // 
                    // e.g. the MENU Option stuff
    if ((size & 0xff) <= level_id) break;
    name_ptr = level_name(blb_ptr,level_id);
    (&levels)[level_id] = name_ptr;
    counter_1 = counter_1 + 1;
                    // seems to reach 1a (got_size) when loop breaks
    counter_2 = counter_2 + 1;
    counter = counter + 1;
  }
  for (i = 0; bVar1 = get_movie_count(blb_ptr), i < bVar1; i = i + 1) {
    movie_ptr = (undefined *)movie_file_name(blb_ptr);
    counter = (uint)counter_1;
    counter_1 = counter_1 + 1;
    yet_another_counter = yet_another_counter + 1;
    (&sub_level_list)[counter] = movie_ptr;
  }
  DAT_800a59c8 = 0x40;
  DAT_800a59ca = 0x20;
  DAT_800a59cc = 0x80;
  DAT_800a6188 = pad_1;
  do {
    FUN_8007cc78();
    controller_btn_status = PadRead(1);
    setup_controller(pad_1,controller_btn_status & 0xffff);
    setup_controller(pad_2,controller_btn_status >> 0x10);
    print_stream = (int)BUF_PTR[1];
    if (print_stream != 0) {
      if (print_stream < 1) {
                    // executes
                    // UndefinedFunction_8007e6b0
        pcVar2 = *(code **)(BUF_PTR + 2);
      }
      else {
        buf_ptr2 = print_stream * 8 + *(int *)((int)BUF_PTR + (int)BUF_PTR[2]);
        unaff_s4 = *(undefined4 *)(buf_ptr2 + -8);
        pcVar2 = *(code **)(buf_ptr2 + -4);
      }
      buf_ptr2 = (int)*BUF_PTR;
      if (0 < print_stream << 0x10) {
        buf_ptr2 = (short)unaff_s4 + buf_ptr2;
      }
      (*pcVar2)((int)BUF_PTR + buf_ptr2);
    }
    traverse_linked_list_and_execute(BUF_PTR);
    vsync_if_required(PTR_DAT_800a59b0);
    FUN_80020e7c(BUF_PTR);
    DrawSync(0);
    (**(code **)(*(int *)(BUF_PTR + 0xc) + 0x1c))
              ((int)BUF_PTR + (int)*(short *)(*(int *)(BUF_PTR + 0xc) + 0x18));
    DrawSync(0);
    if ((DAT_800a59b4 & 6) != 0) {
      print_stream = VSync(-1);
      do {
        counter = VSync(-1);
      } while (counter < print_stream + 2U);
    }
                    // maybe not for processing levels as it occurs after main game loop
    process_level_data_();
    draw_print_stream(PTR_DAT_800a59b0);
  } while( true );
}



void process_level_data_(void)

{
  int status;
  uint sub_index;
  ushort uVar1;
  char cVar2;
  ushort uVar3;
  
  if ((DAT_800a59b4 & 0x80) != 0) {
    uVar1 = DAT_800a611c + 0x14;
    if ((ushort)counter_1 < (ushort)(DAT_800a611c + 0x14)) {
      uVar1 = (ushort)counter_1;
    }
    uVar3 = DAT_800a611c;
    if (DAT_800a611c < uVar1) {
      do {
        FntPrint();
        uVar3 = uVar3 + 1;
        FntPrint();
        FntPrint();
      } while (uVar3 < uVar1);
    }
    if ((*(uint *)(BUF_PTR + 0x10c) & 3) == 0) {
      if ((*DAT_800a6188 & 0x1000) != 0) {
        if (DAT_800a611e != 0) {
          DAT_800a611e = DAT_800a611e - 1;
        }
        if (DAT_800a611e < DAT_800a611c) {
          DAT_800a611c = DAT_800a611e;
        }
      }
      if ((*DAT_800a6188 & 0x4000) != 0) {
        if ((int)(uint)DAT_800a611e < (int)(counter_1 - 1)) {
          DAT_800a611e = DAT_800a611e + 1;
        }
        if ((int)(uint)DAT_800a611c < (int)(DAT_800a611e - 0x13)) {
          DAT_800a611c = DAT_800a611e - 0x13;
        }
      }
    }
    if ((DAT_800a6188[1] & 0x40) != 0) {
      sub_index = (uint)DAT_800a611e;
      DAT_800a59b4 = DAT_800a59b4 & 0xff7f;
      if (sub_index < counter_2 + 10) {
        if (sub_index < 10) {
          cVar2 = (char)DAT_800a611e + '\x01';
        }
        else {
          cVar2 = 'c';
          FUN_8007a2fc(BUF_PTR + 0x84,4,(uint)(&DAT_fffffff6 + sub_index) & 0xff);
        }
      }
      else {
        status = strcmp((&sub_level_list)[sub_index],&END2_BLB);
        if (status == 0) {
          return;
        }
        cVar2 = 'c';
        FUN_8007a2fc(BUF_PTR + 0x84,1,(uint)(&DAT_fffffff6 + (sub_index - (byte)counter_2)) & 0xff);
      }
      *(char *)(BUF_PTR + 0x148) = cVar2;
    }
  }
  return;
}



int strcmp(char *param_1,char *param_2)

{
  int iVar1;
  
  iVar1 = (*(code *)&LAB_000000a0)();
  return iVar1;
}



void * memcpy(uchar *param_1,uchar *param_2,int param_3)

{
  void *pvVar1;
  
  pvVar1 = (void *)(*(code *)&LAB_000000a0)();
  return pvVar1;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int rand(void)

{
  int iVar1;
  
  iVar1 = (*(code *)&LAB_000000a0)();
  return iVar1;
}



void srand(uint param_1)

{
  (*(code *)&LAB_000000a0)();
  return;
}



void * memmove(uchar *param_1,uchar *param_2,int param_3)

{
  bool bVar1;
  uchar uVar2;
  void *pvVar3;
  uchar *puVar4;
  int iVar5;
  uchar *puVar6;
  
  if (param_1 < param_2) {
    iVar5 = param_3 + -1;
    if (0 < param_3) {
      do {
        uVar2 = *param_2;
        param_2 = param_2 + 1;
        *param_1 = uVar2;
        bVar1 = 0 < iVar5;
        param_1 = param_1 + 1;
        iVar5 = iVar5 + -1;
      } while (bVar1);
    }
  }
  else {
    iVar5 = param_3 + -1;
    if (0 < param_3) {
      puVar6 = param_1 + iVar5;
      puVar4 = param_2 + iVar5;
      do {
        uVar2 = *puVar4;
        puVar4 = puVar4 + -1;
        *puVar6 = uVar2;
        bVar1 = 0 < iVar5;
        puVar6 = puVar6 + -1;
        iVar5 = iVar5 + -1;
      } while (bVar1);
      pvVar3 = (void *)MEMMOVE_OBJ_64();
      return pvVar3;
    }
  }
  return param_1;
}



undefined4 MEMMOVE_OBJ_64(undefined4 param_1)

{
  return param_1;
}



void StSetRing(u_long *ring_addr,u_long ring_size)

{
  pointer_to_80116450_ = ring_addr;
  DAT_800ae444 = ring_size;
  StClearRing();
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int CdInit(void)

{
  int iVar1;
  int iVar2;
  
  iVar2 = 4;
  do {
    iVar1 = CdReset(1);
    iVar2 = iVar2 + -1;
    if (iVar1 == 1) {
      CdSyncCallback(def_cbsync);
      CdReadyCallback(def_cbready);
      CdReadCallback(def_cbread);
      CdReadMode(0);
      iVar2 = EVENT_OBJ_84();
      return iVar2;
    }
  } while (iVar2 != -1);
  printf("CdInit: Init failed\n");
  return 0;
}



void EVENT_OBJ_84(void)

{
  return;
}



void def_cbsync(void)

{
  DeliverEvent(0xf0000003,0x20);
  return;
}



void def_cbready(void)

{
  DeliverEvent(0xf0000003,0x40);
  return;
}



void def_cbread(void)

{
  DeliverEvent(0xf0000003,0x40);
  return;
}



int printf(char *fmt,...)

{
  int iVar1;
  
  iVar1 = (*(code *)&LAB_000000a0)();
  return iVar1;
}



void DeliverEvent(void)

{
  (*(code *)&SUB_000000b0)();
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int CdStatus(void)

{
  return (uint)DAT_8009df84;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int CdMode(void)

{
  return (uint)DAT_8009df94;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

int CdLastCom(void)

{
  return (uint)DAT_8009df95;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

CdlLOC * CdLastPos(void)

{
  return (CdlLOC *)&DAT_8009df90;
}



int CdReset(int mode)

{
  int iVar1;
  int iVar2;
  
  if (mode == 2) {
    CD_initintr();
    iVar1 = SYS_OBJ_98();
    return iVar1;
  }
  iVar1 = CD_init();
  iVar2 = 0;
  if ((iVar1 == 0) && (iVar2 = 1, mode == 1)) {
    iVar1 = CD_initvol();
    iVar2 = 0;
    if (iVar1 == 0) {
      iVar2 = 1;
    }
  }
  return iVar2;
}



void SYS_OBJ_98(void)

{
  return;
}



// WARNING: Unknown calling convention -- yet parameter storage is locked
// Possible SSNOFF.OBJ/SsSetNoiseOff
// Possible SSQUIT.OBJ/SsQuit
// Possible _OP_VDEL.OBJ/__builtin_vec_delete
// Possible _OP_VNEW.OBJ/__builtin_vec_new
// Possible GS_106.OBJ/GsSetProjection
// Possible SEND.OBJ/SendPAD

void CdFlush(void)

{
  CD_flush();
  return;
}



int CdSetDebug(int level)

{
  int iVar1;
  
  iVar1 = DAT_8009df80;
  DAT_8009df80 = level;
  return iVar1;
}



char * CdComstr(u_char com)

{
  char *pcVar1;
  
  if (com < 0x1c) {
    pcVar1 = (char *)SYS_OBJ_110();
    return pcVar1;
  }
  return "none";
}



void SYS_OBJ_110(void)

{
  return;
}



char * CdIntstr(u_char intr)

{
  char *pcVar1;
  
  if (intr < 7) {
    pcVar1 = (char *)SYS_OBJ_144();
    return pcVar1;
  }
  return "none";
}



void SYS_OBJ_144(void)

{
  return;
}



// Possible SSNOFF.OBJ/SsSetNoiseOff
// Possible SSQUIT.OBJ/SsQuit
// Possible _OP_VDEL.OBJ/__builtin_vec_delete
// Possible _OP_VNEW.OBJ/__builtin_vec_new
// Possible GS_106.OBJ/GsSetProjection
// Possible SEND.OBJ/SendPAD

int CdSync(int mode,u_char *result)

{
  int iVar1;
  
  iVar1 = CD_sync();
  return iVar1;
}



// Possible SSNOFF.OBJ/SsSetNoiseOff
// Possible SSQUIT.OBJ/SsQuit
// Possible _OP_VDEL.OBJ/__builtin_vec_delete
// Possible _OP_VNEW.OBJ/__builtin_vec_new
// Possible GS_106.OBJ/GsSetProjection
// Possible SEND.OBJ/SendPAD

int CdReady(int mode,u_char *result)

{
  int iVar1;
  
  iVar1 = CD_ready();
  return iVar1;
}



CdlCB CdSyncCallback(CdlCB func)

{
  CdlCB pCVar1;
  
  pCVar1 = DAT_8009df74;
  DAT_8009df74 = func;
  return pCVar1;
}



CdlCB CdReadyCallback(CdlCB func)

{
  CdlCB pCVar1;
  
  pCVar1 = DAT_8009df78;
  DAT_8009df78 = func;
  return pCVar1;
}



int CdControl(u_char com,u_char *param,u_char *result)

{
  undefined4 uVar1;
  int iVar2;
  int iVar3;
  
  uVar1 = DAT_8009df74;
  iVar3 = 3;
  while( true ) {
    DAT_8009df74 = 0;
    if ((com != 1) && ((DAT_8009df84 & 0x10) != 0)) {
      CD_cw(1,0,0,0);
    }
    if ((((param == (u_char *)0x0) || (*(int *)(&DAT_8009deec + (uint)com * 4) == 0)) ||
        (iVar2 = CD_cw(2,param,result,0), iVar2 == 0)) &&
       (DAT_8009df74 = uVar1, iVar2 = CD_cw(com,param,result,0), iVar2 == 0)) break;
    iVar3 = iVar3 + -1;
    if (iVar3 == -1) {
      DAT_8009df74 = uVar1;
      return 0;
    }
  }
  return 1;
}



int CdControlF(u_char com,u_char *param)

{
  undefined4 uVar1;
  int iVar2;
  int iVar3;
  
  uVar1 = DAT_8009df74;
  iVar3 = 3;
  while( true ) {
    DAT_8009df74 = 0;
    if ((com != 1) && ((DAT_8009df84 & 0x10) != 0)) {
      CD_cw(1,0,0,0);
    }
    if ((((param == (u_char *)0x0) || (*(int *)(&DAT_8009deec + (uint)com * 4) == 0)) ||
        (iVar2 = CD_cw(2,param,0,0), iVar2 == 0)) &&
       (DAT_8009df74 = uVar1, iVar2 = CD_cw(com,param,0,1), iVar2 == 0)) break;
    iVar3 = iVar3 + -1;
    if (iVar3 == -1) {
      DAT_8009df74 = uVar1;
      return 0;
    }
  }
  return 1;
}



int CdControlB(u_char com,u_char *param,u_char *result)

{
  undefined4 uVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  uVar1 = DAT_8009df74;
  iVar4 = 3;
  do {
    DAT_8009df74 = 0;
    if ((com != 1) && ((DAT_8009df84 & 0x10) != 0)) {
      CD_cw(1,0,0,0);
    }
    if (((param == (u_char *)0x0) || (*(int *)(&DAT_8009deec + (uint)com * 4) == 0)) ||
       (iVar2 = CD_cw(2,param,result,0), iVar2 == 0)) {
      DAT_8009df74 = uVar1;
      iVar2 = CD_cw(com,param,result,0);
      iVar3 = 0;
      if (iVar2 == 0) break;
    }
    iVar4 = iVar4 + -1;
    iVar3 = -1;
    DAT_8009df74 = uVar1;
  } while (iVar4 != -1);
  if (iVar3 != 0) {
    return 0;
  }
  CD_sync(0,result);
  iVar4 = SYS_OBJ_538();
  return iVar4;
}



void SYS_OBJ_538(void)

{
  return;
}



int CdMix(CdlATV *vol)

{
  CD_vol();
  return 1;
}



int CdGetSector(void *madr,int size)

{
  int iVar1;
  
  iVar1 = CD_getsector();
  return (uint)(iVar1 == 0);
}



int CdGetSector2(void *madr,int size)

{
  int iVar1;
  
  iVar1 = CD_getsector2();
  return (uint)(iVar1 == 0);
}



_func_50 * CdDataCallback(func *func)

{
  _func_50 *p_Var1;
  
  p_Var1 = (_func_50 *)DMACallback(3,func);
  return p_Var1;
}



// Possible SSNOFF.OBJ/SsSetNoiseOff
// Possible SSQUIT.OBJ/SsQuit
// Possible _OP_VDEL.OBJ/__builtin_vec_delete
// Possible _OP_VNEW.OBJ/__builtin_vec_new
// Possible GS_106.OBJ/GsSetProjection
// Possible SEND.OBJ/SendPAD

int CdDataSync(int mode)

{
  int iVar1;
  
  iVar1 = CD_datasync();
  return iVar1;
}



CdlLOC * CdIntToPos(int i,CdlLOC *p)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar3 = (i + 0x96) / 0x4b;
  iVar2 = (i + 0x96) % 0x4b;
  iVar1 = iVar3 / 0x3c;
  iVar3 = iVar3 % 0x3c;
  p->sector = (char)iVar2 + (char)(iVar2 / 10) * '\x06';
  p->second = (char)iVar3 + (char)(iVar3 / 10) * '\x06';
  p->minute = (char)iVar1 + (char)(iVar1 / 10) * '\x06';
  return p;
}



void FUN_800837cc(int param_1,char *param_2)

{
  int in_v1;
  int iVar1;
  
  param_1 = param_1 + 0x96;
  iVar1 = (int)((longlong)param_1 * (longlong)in_v1 >> 0x23) - (param_1 >> 0x1f);
  param_1 = param_1 + iVar1 * -0x4b;
  param_2[2] = (char)param_1 + (char)(param_1 / 10) * '\x06';
  param_2[1] = (char)(iVar1 % 0x3c) + (char)((iVar1 % 0x3c) / 10) * '\x06';
  *param_2 = (char)(iVar1 / 0x3c) + (char)((iVar1 / 0x3c) / 10) * '\x06';
  return;
}



int CdPosToInt(CdlLOC *p)

{
  return (((uint)(p->minute >> 4) * 10 + (p->minute & 0xf)) * 0x3c +
         (uint)(p->second >> 4) * 10 + (p->second & 0xf)) * 0x4b +
         (uint)(p->sector >> 4) * 10 + (p->sector & 0xf) + -0x96;
}



undefined4 getintr(void)

{
  undefined4 uVar1;
  
  *PTR_CDROM_REG0_8009e23c = 1;
  if ((*PTR_CDROM_REG3_8009e248 & 7) != 0) {
    uVar1 = BIOS_OBJ_64();
    return uVar1;
  }
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 BIOS_OBJ_64(byte *param_1)

{
  undefined uVar1;
  undefined4 uVar2;
  undefined4 *puVar3;
  undefined *puVar4;
  undefined1 *puVar5;
  int iVar6;
  uint unaff_s1;
  byte param_5;
  byte param_7;
  byte param_11;
  
  while (iVar6 = 0, param_5 != (*param_1 & 7)) {
    param_5 = *param_1 & 7;
  }
  puVar3 = (undefined4 *)&stack0x00000018;
  do {
    if ((*PTR_CDROM_REG0_8009e23c & 0x20) == 0) break;
    iVar6 = iVar6 + 1;
    *(undefined *)puVar3 = *PTR_CDROM_REG1_8009e240;
    puVar3 = (undefined4 *)((int)puVar3 + 1);
  } while (iVar6 < 8);
  if (iVar6 < 8) {
    puVar4 = (undefined *)((int)&stack0x00000018 + iVar6);
    do {
      *puVar4 = 0;
      puVar4 = puVar4 + 1;
    } while ((int)puVar4 < (int)&stack0x00000020);
  }
  *PTR_CDROM_REG0_8009e23c = 1;
  *PTR_CDROM_REG3_8009e248 = 7;
  *PTR_CDROM_REG2_8009e244 = 7;
  if ((param_5 != 3) || (*(int *)(&DAT_8009e13c + (uint)DAT_8009df95 * 4) != 0)) {
    if (((_DAT_8009df84 & 0x10) == 0) && ((param_7 & 0x10) != 0)) {
      DAT_8009df8c = DAT_8009df8c + 1;
    }
    _DAT_8009df84 = (uint)param_7;
    DAT_8009df88 = (uint)param_11;
    unaff_s1 = _DAT_8009df84 & 0x1d;
  }
  if (((param_5 == 5) && (0 < DAT_8009df80)) && (printf("DiskError: "), 0 < DAT_8009df80)) {
    printf("com=%s,code=(%02x:%02x)\n",(&PTR_s_CdlSync_8009df9c)[DAT_8009df95],_DAT_8009df84,
           DAT_8009df88);
  }
  switch(param_5) {
  case 1:
    DAT_8009e255 = 1;
    if (unaff_s1 != 0) {
      if (iVar6 == 1) {
        unaff_s1 = 0;
      }
      DAT_8009e255 = 1;
      if (unaff_s1 != 0) {
        DAT_8009e255 = 5;
      }
    }
    puVar5 = &DAT_800a61d8;
    puVar3 = (undefined4 *)&stack0x00000018;
    iVar6 = 7;
    do {
      uVar1 = *(undefined *)puVar3;
      puVar3 = (undefined4 *)((int)puVar3 + 1);
      iVar6 = iVar6 + -1;
      *puVar5 = uVar1;
      puVar5 = puVar5 + 1;
    } while (iVar6 != -1);
    *PTR_CDROM_REG0_8009e23c = 0;
    *PTR_CDROM_REG3_8009e248 = 0;
    uVar2 = BIOS_OBJ_570();
    return uVar2;
  case 2:
    DAT_8009e254 = 2;
    if (unaff_s1 != 0) {
      DAT_8009e254 = 5;
    }
    puVar5 = &DAT_800a61d0;
    puVar3 = (undefined4 *)&stack0x00000018;
    iVar6 = 7;
    do {
      uVar1 = *(undefined *)puVar3;
      puVar3 = (undefined4 *)((int)puVar3 + 1);
      iVar6 = iVar6 + -1;
      *puVar5 = uVar1;
      puVar5 = puVar5 + 1;
    } while (iVar6 != -1);
    uVar2 = BIOS_OBJ_570();
    return uVar2;
  case 3:
    break;
  case 4:
    puVar5 = &DAT_800a61e0;
    DAT_8009e256 = 4;
    puVar3 = (undefined4 *)&stack0x00000018;
    DAT_8009e255 = 4;
    iVar6 = 7;
    do {
      uVar1 = *(undefined *)puVar3;
      puVar3 = (undefined4 *)((int)puVar3 + 1);
      iVar6 = iVar6 + -1;
      *puVar5 = uVar1;
      puVar5 = puVar5 + 1;
    } while (iVar6 != -1);
    puVar5 = &DAT_800a61d8;
    puVar3 = (undefined4 *)&stack0x00000018;
    iVar6 = 7;
    do {
      uVar1 = *(undefined *)puVar3;
      puVar3 = (undefined4 *)((int)puVar3 + 1);
      iVar6 = iVar6 + -1;
      *puVar5 = uVar1;
      puVar5 = puVar5 + 1;
    } while (iVar6 != -1);
    uVar2 = BIOS_OBJ_570();
    return uVar2;
  case 5:
    puVar5 = &DAT_800a61d0;
    puVar3 = (undefined4 *)&stack0x00000018;
    DAT_8009e255 = 5;
    DAT_8009e254 = 5;
    iVar6 = 7;
    do {
      uVar1 = *(undefined *)puVar3;
      puVar3 = (undefined4 *)((int)puVar3 + 1);
      iVar6 = iVar6 + -1;
      *puVar5 = uVar1;
      puVar5 = puVar5 + 1;
    } while (iVar6 != -1);
    puVar5 = &DAT_800a61d8;
    puVar3 = (undefined4 *)&stack0x00000018;
    iVar6 = 7;
    do {
      uVar1 = *(undefined *)puVar3;
      puVar3 = (undefined4 *)((int)puVar3 + 1);
      iVar6 = iVar6 + -1;
      *puVar5 = uVar1;
      puVar5 = puVar5 + 1;
    } while (iVar6 != -1);
    uVar2 = BIOS_OBJ_570();
    return uVar2;
  default:
    FUN_80085128("CDROM: unknown intr");
    printf("(%d)\n",(uint)param_5);
    return 0;
  }
  if (unaff_s1 != 0) {
    DAT_8009e254 = 5;
    puVar5 = &DAT_800a61d0;
    puVar3 = (undefined4 *)&stack0x00000018;
    iVar6 = 7;
    do {
      uVar1 = *(undefined *)puVar3;
      puVar3 = (undefined4 *)((int)puVar3 + 1);
      iVar6 = iVar6 + -1;
      *puVar5 = uVar1;
      puVar5 = puVar5 + 1;
    } while (iVar6 != -1);
    uVar2 = BIOS_OBJ_570();
    return uVar2;
  }
  if (*(int *)(&DAT_8009e03c + (uint)DAT_8009df95 * 4) != 0) {
    DAT_8009e254 = 3;
    puVar5 = &DAT_800a61d0;
    puVar3 = (undefined4 *)&stack0x00000018;
    iVar6 = 7;
    do {
      uVar1 = *(undefined *)puVar3;
      puVar3 = (undefined4 *)((int)puVar3 + 1);
      iVar6 = iVar6 + -1;
      *puVar5 = uVar1;
      puVar5 = puVar5 + 1;
    } while (iVar6 != -1);
    uVar2 = BIOS_OBJ_570();
    return uVar2;
  }
  DAT_8009e254 = 2;
  puVar5 = &DAT_800a61d0;
  puVar3 = (undefined4 *)&stack0x00000018;
  iVar6 = 7;
  do {
    uVar1 = *(undefined *)puVar3;
    puVar3 = (undefined4 *)((int)puVar3 + 1);
    iVar6 = iVar6 + -1;
    *puVar5 = uVar1;
    puVar5 = puVar5 + 1;
  } while (iVar6 != -1);
  uVar2 = BIOS_OBJ_570();
  return uVar2;
}



// WARNING: Removing unreachable block (ram,0x80083cf8)

void BIOS_OBJ_26C(void)

{
  undefined uVar1;
  undefined1 *puVar2;
  int iVar3;
  undefined *puVar4;
  int unaff_s1;
  
  if (unaff_s1 != 0) {
    DAT_8009e254 = 5;
    puVar2 = &DAT_800a61d0;
    puVar4 = &stack0x00000018;
    iVar3 = 7;
    do {
      uVar1 = *puVar4;
      puVar4 = puVar4 + 1;
      iVar3 = iVar3 + -1;
      *puVar2 = uVar1;
      puVar2 = puVar2 + 1;
    } while (iVar3 != -1);
    BIOS_OBJ_570();
    return;
  }
  if (*(int *)(&DAT_8009e03c + (uint)DAT_8009df95 * 4) != 0) {
    DAT_8009e254 = 3;
    puVar2 = &DAT_800a61d0;
    puVar4 = &stack0x00000018;
    iVar3 = 7;
    do {
      uVar1 = *puVar4;
      puVar4 = puVar4 + 1;
      iVar3 = iVar3 + -1;
      *puVar2 = uVar1;
      puVar2 = puVar2 + 1;
    } while (iVar3 != -1);
    BIOS_OBJ_570();
    return;
  }
  DAT_8009e254 = 2;
  puVar2 = &DAT_800a61d0;
  puVar4 = &stack0x00000018;
  iVar3 = 7;
  do {
    uVar1 = *puVar4;
    puVar4 = puVar4 + 1;
    iVar3 = iVar3 + -1;
    *puVar2 = uVar1;
    puVar2 = puVar2 + 1;
  } while (iVar3 != -1);
  BIOS_OBJ_570();
  return;
}



void BIOS_OBJ_36C(void)

{
  undefined uVar1;
  undefined1 *puVar2;
  int iVar3;
  undefined *puVar4;
  int unaff_s1;
  
  DAT_8009e254 = 2;
  if (unaff_s1 != 0) {
    DAT_8009e254 = 5;
  }
  puVar2 = &DAT_800a61d0;
  puVar4 = &stack0x00000018;
  iVar3 = 7;
  do {
    uVar1 = *puVar4;
    puVar4 = puVar4 + 1;
    iVar3 = iVar3 + -1;
    *puVar2 = uVar1;
    puVar2 = puVar2 + 1;
  } while (iVar3 != -1);
  BIOS_OBJ_570();
  return;
}



void BIOS_OBJ_3B8(void)

{
  undefined uVar1;
  undefined1 *puVar2;
  int iVar3;
  undefined *puVar4;
  int unaff_s0;
  int unaff_s1;
  
  DAT_8009e255 = 1;
  if (unaff_s1 != 0) {
    if (unaff_s0 == 1) {
      unaff_s1 = 0;
    }
    DAT_8009e255 = 1;
    if (unaff_s1 != 0) {
      DAT_8009e255 = 5;
    }
  }
  puVar2 = &DAT_800a61d8;
  puVar4 = &stack0x00000018;
  iVar3 = 7;
  do {
    uVar1 = *puVar4;
    puVar4 = puVar4 + 1;
    iVar3 = iVar3 + -1;
    *puVar2 = uVar1;
    puVar2 = puVar2 + 1;
  } while (iVar3 != -1);
  *PTR_CDROM_REG0_8009e23c = 0;
  *PTR_CDROM_REG3_8009e248 = 0;
  BIOS_OBJ_570();
  return;
}



void BIOS_OBJ_43C(void)

{
  undefined uVar1;
  int iVar2;
  undefined1 *puVar3;
  undefined *puVar4;
  
  puVar3 = &DAT_800a61e0;
  DAT_8009e256 = 4;
  puVar4 = &stack0x00000018;
  DAT_8009e255 = 4;
  iVar2 = 7;
  do {
    uVar1 = *puVar4;
    puVar4 = puVar4 + 1;
    iVar2 = iVar2 + -1;
    *puVar3 = uVar1;
    puVar3 = puVar3 + 1;
  } while (iVar2 != -1);
  puVar3 = &DAT_800a61d8;
  puVar4 = &stack0x00000018;
  iVar2 = 7;
  do {
    uVar1 = *puVar4;
    puVar4 = puVar4 + 1;
    iVar2 = iVar2 + -1;
    *puVar3 = uVar1;
    puVar3 = puVar3 + 1;
  } while (iVar2 != -1);
  BIOS_OBJ_570();
  return;
}



void BIOS_OBJ_4C0(void)

{
  undefined uVar1;
  int iVar2;
  undefined1 *puVar3;
  undefined *puVar4;
  
  puVar3 = &DAT_800a61d0;
  puVar4 = &stack0x00000018;
  DAT_8009e255 = 5;
  DAT_8009e254 = 5;
  iVar2 = 7;
  do {
    uVar1 = *puVar4;
    puVar4 = puVar4 + 1;
    iVar2 = iVar2 + -1;
    *puVar3 = uVar1;
    puVar3 = puVar3 + 1;
  } while (iVar2 != -1);
  puVar3 = &DAT_800a61d8;
  puVar4 = &stack0x00000018;
  iVar2 = 7;
  do {
    uVar1 = *puVar4;
    puVar4 = puVar4 + 1;
    iVar2 = iVar2 + -1;
    *puVar3 = uVar1;
    puVar3 = puVar3 + 1;
  } while (iVar2 != -1);
  BIOS_OBJ_570();
  return;
}



void BIOS_OBJ_570(void)

{
  return;
}



undefined4 CD_sync(int param_1,undefined *param_2)

{
  byte bVar1;
  undefined uVar2;
  bool bVar3;
  int iVar4;
  undefined4 uVar5;
  uint uVar6;
  undefined1 *puVar7;
  
  iVar4 = VSync(-1);
  DAT_800a61e8 = iVar4 + 0x3c0;
  DAT_800a61ec = 0;
  DAT_800a61f0 = "CD_sync";
  do {
    iVar4 = VSync(-1);
    if ((DAT_800a61e8 < iVar4) ||
       (iVar4 = DAT_800a61ec + 1, bVar3 = 0x3c0000 < DAT_800a61ec, DAT_800a61ec = iVar4, bVar3)) {
      FUN_80085128("CD timeout: ");
      printf("%s:(%s) Sync=%s, Ready=%s\n",DAT_800a61f0,(&PTR_s_CdlSync_8009df9c)[DAT_8009df95],
             (&PTR_s_NoIntr_8009e01c)[DAT_8009e254],(&PTR_s_NoIntr_8009e01c)[DAT_8009e255]);
      CD_flush();
      uVar5 = BIOS_OBJ_6B4();
      return uVar5;
    }
    iVar4 = CheckCallback();
    if (iVar4 != 0) {
      bVar1 = *PTR_CDROM_REG0_8009e23c;
      while( true ) {
        uVar6 = getintr();
        if (uVar6 == 0) break;
        if (((uVar6 & 4) != 0) && (DAT_8009df78 != (code *)0x0)) {
          (*DAT_8009df78)(DAT_8009e255,&DAT_800a61d8);
        }
        if (((uVar6 & 2) != 0) && (DAT_8009df74 != (code *)0x0)) {
          (*DAT_8009df74)(DAT_8009e254,&DAT_800a61d0);
          uVar5 = BIOS_OBJ_6E4();
          return uVar5;
        }
      }
      *PTR_CDROM_REG0_8009e23c = bVar1 & 3;
    }
    if ((DAT_8009e254 == 2) || (DAT_8009e254 == 5)) {
      DAT_8009e254 = 2;
      puVar7 = &DAT_800a61d0;
      iVar4 = 7;
      if (param_2 != (undefined *)0x0) {
        do {
          uVar2 = *puVar7;
          puVar7 = puVar7 + 1;
          iVar4 = iVar4 + -1;
          *param_2 = uVar2;
          param_2 = param_2 + 1;
        } while (iVar4 != -1);
      }
      uVar5 = BIOS_OBJ_7DC();
      return uVar5;
    }
    if (param_1 != 0) {
      return 0;
    }
  } while( true );
}



undefined4 BIOS_OBJ_6B4(void)

{
  byte bVar1;
  undefined uVar2;
  bool bVar3;
  int in_v0;
  int iVar4;
  uint uVar5;
  undefined4 uVar6;
  undefined1 *puVar7;
  byte *unaff_s2;
  int unaff_s3;
  undefined *unaff_s4;
  int unaff_s5;
  undefined *unaff_s6;
  
  while( true ) {
    if (in_v0 != 0) {
      return 0xffffffff;
    }
    iVar4 = CheckCallback();
    if (iVar4 != 0) {
      bVar1 = *PTR_CDROM_REG0_8009e23c;
      while( true ) {
        uVar5 = getintr();
        if (uVar5 == 0) break;
        if (((uVar5 & 4) != 0) && (DAT_8009df78 != (code *)0x0)) {
          (*DAT_8009df78)(*unaff_s4,&DAT_800a61d8);
        }
        if (((uVar5 & 2) != 0) && (DAT_8009df74 != (code *)0x0)) {
          (*DAT_8009df74)(*unaff_s2,&DAT_800a61d0);
          uVar6 = BIOS_OBJ_6E4();
          return uVar6;
        }
      }
      *PTR_CDROM_REG0_8009e23c = bVar1 & 3;
    }
    if ((*unaff_s2 == 2) || (*unaff_s2 == 5)) {
      *unaff_s2 = 2;
      puVar7 = &DAT_800a61d0;
      iVar4 = 7;
      if (unaff_s6 != (undefined *)0x0) {
        do {
          uVar2 = *puVar7;
          puVar7 = puVar7 + 1;
          iVar4 = iVar4 + -1;
          *unaff_s6 = uVar2;
          unaff_s6 = unaff_s6 + 1;
        } while (iVar4 != -1);
      }
      uVar6 = BIOS_OBJ_7DC();
      return uVar6;
    }
    if (unaff_s5 != 0) {
      return 0;
    }
    iVar4 = VSync(-1);
    if ((DAT_800a61e8 < iVar4) ||
       (iVar4 = DAT_800a61ec + 1, bVar3 = 0x3c0000 < DAT_800a61ec, DAT_800a61ec = iVar4, bVar3))
    break;
    in_v0 = 0;
  }
  FUN_80085128("CD timeout: ");
  printf("%s:(%s) Sync=%s, Ready=%s\n",DAT_800a61f0,(&PTR_s_CdlSync_8009df9c)[DAT_8009df95],
         *(undefined4 *)((uint)*unaff_s2 * 4 + unaff_s3));
  CD_flush();
  uVar6 = BIOS_OBJ_6B4();
  return uVar6;
}



undefined4 BIOS_OBJ_6E4(void)

{
  undefined uVar1;
  bool bVar2;
  uint uVar3;
  undefined4 uVar4;
  int iVar5;
  undefined1 *puVar6;
  byte unaff_s1;
  byte *unaff_s2;
  int unaff_s3;
  undefined *unaff_s4;
  int unaff_s5;
  undefined *unaff_s6;
  
  do {
    while( true ) {
      uVar3 = getintr();
      if (uVar3 == 0) break;
      if (((uVar3 & 4) != 0) && (DAT_8009df78 != (code *)0x0)) {
        (*DAT_8009df78)(*unaff_s4,&DAT_800a61d8);
      }
      if (((uVar3 & 2) != 0) && (DAT_8009df74 != (code *)0x0)) {
        (*DAT_8009df74)(*unaff_s2,&DAT_800a61d0);
        uVar4 = BIOS_OBJ_6E4();
        return uVar4;
      }
    }
    *PTR_CDROM_REG0_8009e23c = unaff_s1;
    do {
      if ((*unaff_s2 == 2) || (*unaff_s2 == 5)) {
        *unaff_s2 = 2;
        puVar6 = &DAT_800a61d0;
        iVar5 = 7;
        if (unaff_s6 != (undefined *)0x0) {
          do {
            uVar1 = *puVar6;
            puVar6 = puVar6 + 1;
            iVar5 = iVar5 + -1;
            *unaff_s6 = uVar1;
            unaff_s6 = unaff_s6 + 1;
          } while (iVar5 != -1);
        }
        uVar4 = BIOS_OBJ_7DC();
        return uVar4;
      }
      if (unaff_s5 != 0) {
        return 0;
      }
      iVar5 = VSync(-1);
      if ((DAT_800a61e8 < iVar5) ||
         (iVar5 = DAT_800a61ec + 1, bVar2 = 0x3c0000 < DAT_800a61ec, DAT_800a61ec = iVar5, bVar2)) {
        FUN_80085128("CD timeout: ");
        printf("%s:(%s) Sync=%s, Ready=%s\n",DAT_800a61f0,(&PTR_s_CdlSync_8009df9c)[DAT_8009df95],
               *(undefined4 *)((uint)*unaff_s2 * 4 + unaff_s3));
        CD_flush();
        uVar4 = BIOS_OBJ_6B4();
        return uVar4;
      }
      iVar5 = CheckCallback();
    } while (iVar5 == 0);
    unaff_s1 = *PTR_CDROM_REG0_8009e23c & 3;
  } while( true );
}



void BIOS_OBJ_7DC(void)

{
  return;
}



undefined4 CD_ready(int param_1,undefined *param_2)

{
  byte bVar1;
  undefined uVar2;
  bool bVar3;
  int iVar4;
  undefined4 uVar5;
  uint uVar6;
  undefined1 *puVar7;
  
  iVar4 = VSync(-1);
  DAT_800a61e8 = iVar4 + 0x3c0;
  DAT_800a61ec = 0;
  DAT_800a61f0 = "CD_ready";
  while( true ) {
    iVar4 = VSync(-1);
    if ((DAT_800a61e8 < iVar4) ||
       (iVar4 = DAT_800a61ec + 1, bVar3 = 0x3c0000 < DAT_800a61ec, DAT_800a61ec = iVar4, bVar3)) {
      FUN_80085128("CD timeout: ");
      printf("%s:(%s) Sync=%s, Ready=%s\n",DAT_800a61f0,(&PTR_s_CdlSync_8009df9c)[DAT_8009df95],
             (&PTR_s_NoIntr_8009e01c)[DAT_8009e254],(&PTR_s_NoIntr_8009e01c)[DAT_8009e255]);
      CD_flush();
      uVar5 = BIOS_OBJ_93C();
      return uVar5;
    }
    iVar4 = CheckCallback();
    if (iVar4 != 0) {
      bVar1 = *PTR_CDROM_REG0_8009e23c;
      while( true ) {
        uVar6 = getintr();
        if (uVar6 == 0) break;
        if (((uVar6 & 4) != 0) && (DAT_8009df78 != (code *)0x0)) {
          (*DAT_8009df78)(DAT_8009e255,&DAT_800a61d8);
        }
        if (((uVar6 & 2) != 0) && (DAT_8009df74 != (code *)0x0)) {
          (*DAT_8009df74)(DAT_8009e254,&DAT_800a61d0);
          uVar5 = BIOS_OBJ_96C();
          return uVar5;
        }
      }
      *PTR_CDROM_REG0_8009e23c = bVar1 & 3;
    }
    if (DAT_8009e256 != '\0') break;
    if (DAT_8009e255 != 0) {
      DAT_8009e255 = 0;
      puVar7 = &DAT_800a61d8;
      iVar4 = 7;
      if (param_2 != (undefined *)0x0) {
        do {
          uVar2 = *puVar7;
          puVar7 = puVar7 + 1;
          iVar4 = iVar4 + -1;
          *param_2 = uVar2;
          param_2 = param_2 + 1;
        } while (iVar4 != -1);
      }
      goto BIOS_OBJ_A94;
    }
    if (param_1 != 0) {
      return 0;
    }
  }
  DAT_8009e256 = '\0';
  puVar7 = &DAT_800a61e0;
  if (param_2 != (undefined *)0x0) {
    iVar4 = 7;
    do {
      uVar2 = *puVar7;
      puVar7 = puVar7 + 1;
      iVar4 = iVar4 + -1;
      *param_2 = uVar2;
      param_2 = param_2 + 1;
    } while (iVar4 != -1);
    uVar5 = BIOS_OBJ_AA4();
    return uVar5;
  }
BIOS_OBJ_A94:
  uVar5 = BIOS_OBJ_AA4();
  return uVar5;
}



undefined4 BIOS_OBJ_93C(void)

{
  byte bVar1;
  undefined uVar2;
  bool bVar3;
  int in_v0;
  int iVar4;
  uint uVar5;
  undefined4 uVar6;
  undefined1 *puVar7;
  byte *unaff_s2;
  char *unaff_s3;
  undefined *unaff_s4;
  int unaff_s5;
  undefined *unaff_s6;
  int unaff_s7;
  
  while( true ) {
    if (in_v0 != 0) {
      return 0xffffffff;
    }
    iVar4 = CheckCallback();
    if (iVar4 != 0) {
      bVar1 = *PTR_CDROM_REG0_8009e23c;
      while( true ) {
        uVar5 = getintr();
        if (uVar5 == 0) break;
        if (((uVar5 & 4) != 0) && (DAT_8009df78 != (code *)0x0)) {
          (*DAT_8009df78)(*unaff_s6,&DAT_800a61d8);
        }
        if (((uVar5 & 2) != 0) && (DAT_8009df74 != (code *)0x0)) {
          (*DAT_8009df74)(*unaff_s2,&DAT_800a61d0);
          uVar6 = BIOS_OBJ_96C();
          return uVar6;
        }
      }
      *PTR_CDROM_REG0_8009e23c = bVar1 & 3;
    }
    if (*unaff_s3 != '\0') break;
    if (unaff_s3[-1] != '\0') {
      unaff_s3[-1] = '\0';
      puVar7 = &DAT_800a61d8;
      iVar4 = 7;
      if (unaff_s4 != (undefined *)0x0) {
        do {
          uVar2 = *puVar7;
          puVar7 = puVar7 + 1;
          iVar4 = iVar4 + -1;
          *unaff_s4 = uVar2;
          unaff_s4 = unaff_s4 + 1;
        } while (iVar4 != -1);
      }
      goto BIOS_OBJ_A94;
    }
    if (unaff_s7 != 0) {
      return 0;
    }
    iVar4 = VSync(-1);
    if ((DAT_800a61e8 < iVar4) ||
       (iVar4 = DAT_800a61ec + 1, bVar3 = 0x3c0000 < DAT_800a61ec, DAT_800a61ec = iVar4, bVar3)) {
      FUN_80085128("CD timeout: ");
      printf("%s:(%s) Sync=%s, Ready=%s\n",DAT_800a61f0,(&PTR_s_CdlSync_8009df9c)[DAT_8009df95],
             *(undefined4 *)((uint)*unaff_s2 * 4 + unaff_s5));
      CD_flush();
      uVar6 = BIOS_OBJ_93C();
      return uVar6;
    }
    in_v0 = 0;
  }
  *unaff_s3 = '\0';
  puVar7 = &DAT_800a61e0;
  if (unaff_s4 != (undefined *)0x0) {
    iVar4 = 7;
    do {
      uVar2 = *puVar7;
      puVar7 = puVar7 + 1;
      iVar4 = iVar4 + -1;
      *unaff_s4 = uVar2;
      unaff_s4 = unaff_s4 + 1;
    } while (iVar4 != -1);
    uVar6 = BIOS_OBJ_AA4();
    return uVar6;
  }
BIOS_OBJ_A94:
  uVar6 = BIOS_OBJ_AA4();
  return uVar6;
}



undefined4 BIOS_OBJ_96C(void)

{
  undefined uVar1;
  bool bVar2;
  uint uVar3;
  undefined4 uVar4;
  int iVar5;
  undefined1 *puVar6;
  byte unaff_s1;
  byte *unaff_s2;
  char *unaff_s3;
  undefined *unaff_s4;
  int unaff_s5;
  undefined *unaff_s6;
  int unaff_s7;
  
  do {
    while( true ) {
      uVar3 = getintr();
      if (uVar3 == 0) break;
      if (((uVar3 & 4) != 0) && (DAT_8009df78 != (code *)0x0)) {
        (*DAT_8009df78)(*unaff_s6,&DAT_800a61d8);
      }
      if (((uVar3 & 2) != 0) && (DAT_8009df74 != (code *)0x0)) {
        (*DAT_8009df74)(*unaff_s2,&DAT_800a61d0);
        uVar4 = BIOS_OBJ_96C();
        return uVar4;
      }
    }
    *PTR_CDROM_REG0_8009e23c = unaff_s1;
    do {
      if (*unaff_s3 != '\0') {
        *unaff_s3 = '\0';
        puVar6 = &DAT_800a61e0;
        if (unaff_s4 != (undefined *)0x0) {
          iVar5 = 7;
          do {
            uVar1 = *puVar6;
            puVar6 = puVar6 + 1;
            iVar5 = iVar5 + -1;
            *unaff_s4 = uVar1;
            unaff_s4 = unaff_s4 + 1;
          } while (iVar5 != -1);
          uVar4 = BIOS_OBJ_AA4();
          return uVar4;
        }
        goto BIOS_OBJ_A94;
      }
      if (unaff_s3[-1] != '\0') {
        unaff_s3[-1] = '\0';
        puVar6 = &DAT_800a61d8;
        iVar5 = 7;
        if (unaff_s4 != (undefined *)0x0) {
          do {
            uVar1 = *puVar6;
            puVar6 = puVar6 + 1;
            iVar5 = iVar5 + -1;
            *unaff_s4 = uVar1;
            unaff_s4 = unaff_s4 + 1;
          } while (iVar5 != -1);
        }
BIOS_OBJ_A94:
        uVar4 = BIOS_OBJ_AA4();
        return uVar4;
      }
      if (unaff_s7 != 0) {
        return 0;
      }
      iVar5 = VSync(-1);
      if ((DAT_800a61e8 < iVar5) ||
         (iVar5 = DAT_800a61ec + 1, bVar2 = 0x3c0000 < DAT_800a61ec, DAT_800a61ec = iVar5, bVar2)) {
        FUN_80085128("CD timeout: ");
        printf("%s:(%s) Sync=%s, Ready=%s\n",DAT_800a61f0,(&PTR_s_CdlSync_8009df9c)[DAT_8009df95],
               *(undefined4 *)((uint)*unaff_s2 * 4 + unaff_s5));
        CD_flush();
        uVar4 = BIOS_OBJ_93C();
        return uVar4;
      }
      iVar5 = CheckCallback();
    } while (iVar5 == 0);
    unaff_s1 = *PTR_CDROM_REG0_8009e23c & 3;
  } while( true );
}



void BIOS_OBJ_AA4(void)

{
  return;
}



int CD_cw(byte param_1,undefined *param_2,undefined *param_3,int param_4)

{
  undefined uVar1;
  byte bVar2;
  bool bVar3;
  int iVar4;
  uint uVar5;
  undefined *puVar6;
  int iVar7;
  undefined1 *puVar8;
  
  if (1 < DAT_8009df80) {
    printf("%s...\n",(&PTR_s_CdlSync_8009df9c)[param_1]);
  }
  if ((*(int *)(&DAT_8009e1bc + (uint)param_1 * 4) == 0) || (param_2 != (undefined *)0x0)) {
    CD_sync(0,0);
    if (param_1 == 2) {
      iVar4 = 0;
      puVar6 = param_2;
      do {
        (&DAT_8009df90)[iVar4] = *puVar6;
        iVar4 = iVar4 + 1;
        puVar6 = puVar6 + 1;
      } while (iVar4 < 4);
    }
    if (param_1 == 0xe) {
      DAT_8009df94 = *param_2;
    }
    iVar4 = (uint)param_1 * 4;
    DAT_8009e254 = 0;
    if (*(int *)(&DAT_8009e0bc + iVar4) != 0) {
      DAT_8009e255 = 0;
    }
    *PTR_CDROM_REG0_8009e23c = 0;
    iVar7 = 0;
    if (0 < *(int *)(&DAT_8009e1bc + iVar4)) {
      do {
        uVar1 = *param_2;
        param_2 = param_2 + 1;
        *PTR_CDROM_REG2_8009e244 = uVar1;
        iVar7 = iVar7 + 1;
      } while (iVar7 < *(int *)(&DAT_8009e1bc + iVar4));
    }
    DAT_8009df95 = param_1;
    *PTR_CDROM_REG1_8009e240 = param_1;
    iVar4 = 0;
    if (param_4 == 0) {
      iVar4 = VSync(-1);
      DAT_800a61e8 = iVar4 + 0x3c0;
      DAT_800a61ec = 0;
      DAT_800a61f0 = "CD_cw";
      while (DAT_8009e254 == 0) {
        iVar4 = VSync(-1);
        if ((DAT_800a61e8 < iVar4) ||
           (iVar4 = DAT_800a61ec + 1, bVar3 = 0x3c0000 < DAT_800a61ec, DAT_800a61ec = iVar4, bVar3))
        {
          FUN_80085128("CD timeout: ");
          printf("%s:(%s) Sync=%s, Ready=%s\n",DAT_800a61f0,(&PTR_s_CdlSync_8009df9c)[DAT_8009df95],
                 (&PTR_s_NoIntr_8009e01c)[DAT_8009e254],(&PTR_s_NoIntr_8009e01c)[DAT_8009e255]);
          CD_flush();
          iVar4 = BIOS_OBJ_DAC();
          return iVar4;
        }
        iVar4 = CheckCallback();
        if (iVar4 != 0) {
          bVar2 = *PTR_CDROM_REG0_8009e23c;
          while( true ) {
            uVar5 = getintr();
            if (uVar5 == 0) break;
            if (((uVar5 & 4) != 0) && (DAT_8009df78 != (code *)0x0)) {
              (*DAT_8009df78)(DAT_8009e255,&DAT_800a61d8);
            }
            if (((uVar5 & 2) != 0) && (DAT_8009df74 != (code *)0x0)) {
              (*DAT_8009df74)(DAT_8009e254,&DAT_800a61d0);
              iVar4 = BIOS_OBJ_DDC();
              return iVar4;
            }
          }
          *PTR_CDROM_REG0_8009e23c = bVar2 & 3;
        }
      }
      puVar8 = &DAT_800a61d0;
      if (param_3 != (undefined *)0x0) {
        iVar4 = 7;
        do {
          uVar1 = *puVar8;
          puVar8 = puVar8 + 1;
          iVar4 = iVar4 + -1;
          *param_3 = uVar1;
          param_3 = param_3 + 1;
        } while (iVar4 != -1);
      }
      iVar4 = -(uint)(DAT_8009e254 == 5);
    }
  }
  else {
    iVar4 = -2;
    if (0 < DAT_8009df80) {
      printf("%s: no param\n",(&PTR_s_CdlSync_8009df9c)[param_1]);
      iVar4 = BIOS_OBJ_EC8();
      return iVar4;
    }
  }
  return iVar4;
}



int BIOS_OBJ_DAC(void)

{
  byte bVar1;
  undefined uVar2;
  bool bVar3;
  int in_v0;
  int iVar4;
  uint uVar5;
  undefined1 *puVar6;
  byte *unaff_s2;
  int unaff_s3;
  undefined *unaff_s4;
  undefined *unaff_s5;
  
  while( true ) {
    if (in_v0 != 0) {
      return -1;
    }
    iVar4 = CheckCallback();
    if (iVar4 != 0) {
      bVar1 = *PTR_CDROM_REG0_8009e23c;
      while( true ) {
        uVar5 = getintr();
        if (uVar5 == 0) break;
        if (((uVar5 & 4) != 0) && (DAT_8009df78 != (code *)0x0)) {
          (*DAT_8009df78)(*unaff_s4,&DAT_800a61d8);
        }
        if (((uVar5 & 2) != 0) && (DAT_8009df74 != (code *)0x0)) {
          (*DAT_8009df74)(*unaff_s2,&DAT_800a61d0);
          iVar4 = BIOS_OBJ_DDC();
          return iVar4;
        }
      }
      *PTR_CDROM_REG0_8009e23c = bVar1 & 3;
    }
    if (*unaff_s2 != 0) {
      puVar6 = &DAT_800a61d0;
      if (unaff_s5 != (undefined *)0x0) {
        iVar4 = 7;
        do {
          uVar2 = *puVar6;
          puVar6 = puVar6 + 1;
          iVar4 = iVar4 + -1;
          *unaff_s5 = uVar2;
          unaff_s5 = unaff_s5 + 1;
        } while (iVar4 != -1);
      }
      return -(uint)(DAT_8009e254 == '\x05');
    }
    iVar4 = VSync(-1);
    if ((DAT_800a61e8 < iVar4) ||
       (iVar4 = DAT_800a61ec + 1, bVar3 = 0x3c0000 < DAT_800a61ec, DAT_800a61ec = iVar4, bVar3))
    break;
    in_v0 = 0;
  }
  FUN_80085128("CD timeout: ");
  printf("%s:(%s) Sync=%s, Ready=%s\n",DAT_800a61f0,(&PTR_s_CdlSync_8009df9c)[DAT_8009df95],
         *(undefined4 *)((uint)*unaff_s2 * 4 + unaff_s3));
  CD_flush();
  iVar4 = BIOS_OBJ_DAC();
  return iVar4;
}



int BIOS_OBJ_DDC(void)

{
  undefined uVar1;
  bool bVar2;
  uint uVar3;
  int iVar4;
  undefined1 *puVar5;
  byte unaff_s1;
  byte *unaff_s2;
  int unaff_s3;
  undefined *unaff_s4;
  undefined *unaff_s5;
  
  do {
    while( true ) {
      uVar3 = getintr();
      if (uVar3 == 0) break;
      if (((uVar3 & 4) != 0) && (DAT_8009df78 != (code *)0x0)) {
        (*DAT_8009df78)(*unaff_s4,&DAT_800a61d8);
      }
      if (((uVar3 & 2) != 0) && (DAT_8009df74 != (code *)0x0)) {
        (*DAT_8009df74)(*unaff_s2,&DAT_800a61d0);
        iVar4 = BIOS_OBJ_DDC();
        return iVar4;
      }
    }
    *PTR_CDROM_REG0_8009e23c = unaff_s1;
    do {
      if (*unaff_s2 != 0) {
        puVar5 = &DAT_800a61d0;
        if (unaff_s5 != (undefined *)0x0) {
          iVar4 = 7;
          do {
            uVar1 = *puVar5;
            puVar5 = puVar5 + 1;
            iVar4 = iVar4 + -1;
            *unaff_s5 = uVar1;
            unaff_s5 = unaff_s5 + 1;
          } while (iVar4 != -1);
        }
        return -(uint)(DAT_8009e254 == '\x05');
      }
      iVar4 = VSync(-1);
      if ((DAT_800a61e8 < iVar4) ||
         (iVar4 = DAT_800a61ec + 1, bVar2 = 0x3c0000 < DAT_800a61ec, DAT_800a61ec = iVar4, bVar2)) {
        FUN_80085128("CD timeout: ");
        printf("%s:(%s) Sync=%s, Ready=%s\n",DAT_800a61f0,(&PTR_s_CdlSync_8009df9c)[DAT_8009df95],
               *(undefined4 *)((uint)*unaff_s2 * 4 + unaff_s3));
        CD_flush();
        iVar4 = BIOS_OBJ_DAC();
        return iVar4;
      }
      iVar4 = CheckCallback();
    } while (iVar4 == 0);
    unaff_s1 = *PTR_CDROM_REG0_8009e23c & 3;
  } while( true );
}



void BIOS_OBJ_EC8(void)

{
  return;
}



undefined4 CD_vol(undefined *param_1)

{
  *PTR_CDROM_REG0_8009e23c = 2;
  *PTR_CDROM_REG2_8009e244 = *param_1;
  *PTR_CDROM_REG3_8009e248 = param_1[1];
  *PTR_CDROM_REG0_8009e23c = 3;
  *PTR_CDROM_REG1_8009e240 = param_1[2];
  *PTR_CDROM_REG2_8009e244 = param_1[3];
  *PTR_CDROM_REG3_8009e248 = 0x20;
  return 0;
}



void CD_flush(void)

{
  byte bVar1;
  
  *PTR_CDROM_REG0_8009e23c = 1;
  bVar1 = *PTR_CDROM_REG3_8009e248;
  while ((bVar1 & 7) != 0) {
    *PTR_CDROM_REG0_8009e23c = 1;
    *PTR_CDROM_REG3_8009e248 = 7;
    *PTR_CDROM_REG2_8009e244 = 7;
    bVar1 = *PTR_CDROM_REG3_8009e248;
  }
  DAT_8009e256 = 0;
  DAT_8009e255 = 0;
  DAT_8009e254 = 2;
  *PTR_CDROM_REG0_8009e23c = 0;
  *PTR_CDROM_REG3_8009e248 = 0;
  *(undefined4 *)PTR_COMMON_DELAY_8009e24c = 0x1325;
  return;
}



undefined4 CD_initvol(void)

{
  undefined *puVar1;
  
  puVar1 = PTR_VOICE_00_LEFT_RIGHT_8009e250;
  if ((*(short *)(PTR_VOICE_00_LEFT_RIGHT_8009e250 + 0x1b8) == 0) &&
     (*(short *)(PTR_VOICE_00_LEFT_RIGHT_8009e250 + 0x1ba) == 0)) {
    *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_8009e250 + 0x180) = 0x3fff;
    *(undefined2 *)(puVar1 + 0x182) = 0x3fff;
  }
  puVar1 = PTR_VOICE_00_LEFT_RIGHT_8009e250;
  *(undefined2 *)(PTR_VOICE_00_LEFT_RIGHT_8009e250 + 0x1b0) = 0x3fff;
  *(undefined2 *)(puVar1 + 0x1b2) = 0x3fff;
  *(undefined2 *)(puVar1 + 0x1aa) = 0xc001;
  *PTR_CDROM_REG0_8009e23c = 2;
  *PTR_CDROM_REG2_8009e244 = 0x80;
  *PTR_CDROM_REG3_8009e248 = 0;
  *PTR_CDROM_REG0_8009e23c = 3;
  *PTR_CDROM_REG1_8009e240 = 0x80;
  *PTR_CDROM_REG2_8009e244 = 0;
  *PTR_CDROM_REG3_8009e248 = 0x20;
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void CD_initintr(void)

{
  DAT_8009df78 = 0;
  DAT_8009df74 = 0;
  DAT_8009df88 = 0;
  _DAT_8009df84 = 0;
  ResetCallback();
  InterruptCallback(2,callback);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int CD_init(void)

{
  byte bVar1;
  int iVar2;
  int iVar3;
  
  FUN_80085128("CD_init:");
  printf("addr=%08x\n",&PTR_DAT_8009e258);
  DAT_8009df95 = 0;
  DAT_8009df94 = 0;
  DAT_8009df78 = 0;
  DAT_8009df74 = 0;
  DAT_8009df88 = 0;
  _DAT_8009df84 = 0;
  ResetCallback();
  InterruptCallback(2,callback);
  *PTR_CDROM_REG0_8009e23c = 1;
  bVar1 = *PTR_CDROM_REG3_8009e248;
  while ((bVar1 & 7) != 0) {
    *PTR_CDROM_REG0_8009e23c = 1;
    *PTR_CDROM_REG3_8009e248 = 7;
    *PTR_CDROM_REG2_8009e244 = 7;
    bVar1 = *PTR_CDROM_REG3_8009e248;
  }
  DAT_8009e256 = 0;
  DAT_8009e255 = 0;
  DAT_8009e254 = 2;
  *PTR_CDROM_REG0_8009e23c = 0;
  *PTR_CDROM_REG3_8009e248 = 0;
  *(undefined4 *)PTR_COMMON_DELAY_8009e24c = 0x1325;
  CD_cw(1,0,0,0);
  if ((_DAT_8009df84 & 0x10) != 0) {
    CD_cw(1,0,0,0);
  }
  iVar2 = CD_cw(10,0,0,0);
  iVar3 = -1;
  if (iVar2 == 0) {
    iVar2 = CD_cw(0xc,0,0,0);
    iVar3 = -1;
    if (iVar2 == 0) {
      iVar3 = CD_sync(0,0);
      iVar3 = -(uint)(iVar3 != 2);
    }
  }
  return iVar3;
}
